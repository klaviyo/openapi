{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API (Beta)",
    "version": "2025-04-15.pre",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "License",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "paths": {
    "/api/flow-actions/{id}": {
      "get": {
        "operationId": "get_flow_action_beta",
        "summary": "Get Flow Action",
        "description": "\n            > ðŸš§ This endpoint is in beta and subject to change.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n\nGet a flow action from a flow with the given flow action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "updated",
                  "definition",
                  "definition.id",
                  "definition.temporary_id",
                  "definition.type",
                  "definition.links",
                  "definition.links.next",
                  "definition.links.next_if_true",
                  "definition.links.next_if_false",
                  "definition.data",
                  "definition.data.profile_filter",
                  "definition.data.profile_filter.condition_groups",
                  "definition.data.message",
                  "definition.data.message.from_email",
                  "definition.data.message.from_label",
                  "definition.data.message.reply_to_email",
                  "definition.data.message.cc_email",
                  "definition.data.message.bcc_email",
                  "definition.data.message.subject_line",
                  "definition.data.message.preview_text",
                  "definition.data.message.template_id",
                  "definition.data.message.smart_sending_enabled",
                  "definition.data.message.transactional",
                  "definition.data.message.add_tracking_params",
                  "definition.data.message.custom_tracking_params",
                  "definition.data.message.additional_filters",
                  "definition.data.message.additional_filters.condition_groups",
                  "definition.data.message.name",
                  "definition.data.message.id",
                  "definition.data.status",
                  "definition.data.message.title",
                  "definition.data.message.body",
                  "definition.data.message.sound",
                  "definition.data.message.badge",
                  "definition.data.message.badge_options",
                  "definition.data.message.badge_options.badge_config",
                  "definition.data.message.badge_options.value",
                  "definition.data.message.badge_options.set_from_property",
                  "definition.data.message.image_id",
                  "definition.data.message.dynamic_image",
                  "definition.data.message.on_open",
                  "definition.data.message.ios_link",
                  "definition.data.message.android_link",
                  "definition.data.message.conversion_metric_id",
                  "definition.data.message.shorten_links",
                  "definition.data.message.include_contact_card",
                  "definition.data.message.add_org_prefix",
                  "definition.data.message.add_info_link",
                  "definition.data.message.add_opt_out_language",
                  "definition.data.message.sms_quiet_hours_enabled",
                  "definition.data.message.url",
                  "definition.data.message.headers",
                  "definition.data.message.to_emails",
                  "definition.data.unit",
                  "definition.data.value",
                  "definition.data.secondary_value",
                  "definition.data.timezone",
                  "definition.data.delay_until_time",
                  "definition.data.delay_until_weekdays",
                  "definition.data.trigger_filter",
                  "definition.data.trigger_filter.condition_groups",
                  "definition.data.trigger_id",
                  "definition.data.trigger_type",
                  "definition.data.trigger_subtype",
                  "definition.data.profile_operations",
                  "definition.data.target_time",
                  "definition.data.target_days",
                  "definition.data.experiment_status",
                  "definition.data.main_action",
                  "definition.data.main_action.id",
                  "definition.data.main_action.temporary_id",
                  "definition.data.main_action.type",
                  "definition.data.main_action.links",
                  "definition.data.main_action.links.next",
                  "definition.data.main_action.data",
                  "definition.data.main_action.data.message",
                  "definition.data.main_action.data.message.from_email",
                  "definition.data.main_action.data.message.from_label",
                  "definition.data.main_action.data.message.reply_to_email",
                  "definition.data.main_action.data.message.cc_email",
                  "definition.data.main_action.data.message.bcc_email",
                  "definition.data.main_action.data.message.subject_line",
                  "definition.data.main_action.data.message.preview_text",
                  "definition.data.main_action.data.message.template_id",
                  "definition.data.main_action.data.message.smart_sending_enabled",
                  "definition.data.main_action.data.message.transactional",
                  "definition.data.main_action.data.message.add_tracking_params",
                  "definition.data.main_action.data.message.custom_tracking_params",
                  "definition.data.main_action.data.message.additional_filters",
                  "definition.data.main_action.data.message.additional_filters.condition_groups",
                  "definition.data.main_action.data.message.name",
                  "definition.data.main_action.data.message.id",
                  "definition.data.main_action.data.status",
                  "definition.data.main_action.data.message.body",
                  "definition.data.main_action.data.message.image_id",
                  "definition.data.main_action.data.message.dynamic_image",
                  "definition.data.main_action.data.message.shorten_links",
                  "definition.data.main_action.data.message.include_contact_card",
                  "definition.data.main_action.data.message.add_org_prefix",
                  "definition.data.main_action.data.message.add_info_link",
                  "definition.data.main_action.data.message.add_opt_out_language",
                  "definition.data.main_action.data.message.sms_quiet_hours_enabled",
                  "definition.data.current_experiment",
                  "definition.data.current_experiment.id",
                  "definition.data.current_experiment.name",
                  "definition.data.current_experiment.variations",
                  "definition.data.current_experiment.allocations",
                  "definition.data.current_experiment.started",
                  "definition.data.current_experiment.winner_metric",
                  "definition.data.current_experiment.automatic_winner_selection_settings",
                  "definition.data.current_experiment.automatic_winner_selection_settings.enabled",
                  "definition.data.current_experiment.automatic_winner_selection_settings.automatic_end_date",
                  "definition.data.current_experiment.automatic_winner_selection_settings.automatic_end_statistical_certainty",
                  "definition.data.name",
                  "definition.data.on_execution",
                  "definition.data.list_id"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.reply_to_email",
                  "content.cc_email",
                  "content.bcc_email",
                  "content.body",
                  "content.media_url",
                  "content.title",
                  "content.sound",
                  "content.badge",
                  "content.dynamic_image",
                  "content.ios_link",
                  "content.android_link",
                  "content.on_open",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow",
                  "flow-messages"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionEncodedResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Flows"
      },
      "patch": {
        "operationId": "update_flow_action_beta",
        "summary": "Update Flow Action",
        "description": "\n            > ðŸš§ This endpoint is in beta and subject to change.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n\nUpdate a flow action.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/FlowActionUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchFlowActionEncodedResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write"
        ],
        "x-klaviyo-subtag": "Flows"
      }
    },
    "/api/flow-messages/{id}": {
      "get": {
        "operationId": "get_flow_message_beta",
        "summary": "Get Flow Message",
        "description": "\n            > ðŸš§ This endpoint is in beta and subject to change.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n\nGet a flow message from a flow with the given flow message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "tracking_options.add_utm",
                  "tracking_options.utm_params",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "badge_options",
                  "badge_options.badge_config",
                  "badge_options.value",
                  "badge_options.set_from_property",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "updated",
                  "definition",
                  "definition.from_email",
                  "definition.from_label",
                  "definition.reply_to_email",
                  "definition.cc_email",
                  "definition.bcc_email",
                  "definition.subject_line",
                  "definition.preview_text",
                  "definition.template_id",
                  "definition.smart_sending_enabled",
                  "definition.transactional",
                  "definition.add_tracking_params",
                  "definition.custom_tracking_params",
                  "definition.additional_filters",
                  "definition.additional_filters.condition_groups",
                  "definition.name",
                  "definition.id",
                  "definition.to_emails",
                  "definition.title",
                  "definition.body",
                  "definition.sound",
                  "definition.badge",
                  "definition.badge_options",
                  "definition.badge_options.badge_config",
                  "definition.badge_options.value",
                  "definition.badge_options.set_from_property",
                  "definition.image_id",
                  "definition.dynamic_image",
                  "definition.on_open",
                  "definition.ios_link",
                  "definition.android_link",
                  "definition.conversion_metric_id",
                  "definition.shorten_links",
                  "definition.include_contact_card",
                  "definition.add_org_prefix",
                  "definition.add_info_link",
                  "definition.add_opt_out_language",
                  "definition.sms_quiet_hours_enabled",
                  "definition.url",
                  "definition.headers"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "amp",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-action",
                  "template"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageEncodedResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Flows"
      }
    },
    "/api/data-sources": {
      "get": {
        "operationId": "get_data_sources_beta",
        "summary": "Get Data Sources",
        "description": "\n            > ðŸš§ This endpoint is in beta and will be released in GA in our 2025-07-15 revision.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs.\n\nGet all data sources in an account.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`custom-objects:read`",
        "parameters": [
          {
            "name": "fields[data-source]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "visibility",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataSourceResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "custom-objects:read"
        ],
        "x-klaviyo-subtag": "Custom Objects"
      },
      "post": {
        "operationId": "create_data_source_beta",
        "summary": "Create Data Source",
        "description": "\n            > ðŸš§ This endpoint is in beta and will be released in GA in our 2025-07-15 revision.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs.\n\nCreate a new data source in an account<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`custom-objects:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "requestBody": {
          "description": "Create data source",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DataSourceCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDataSourceResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "custom-objects:write"
        ],
        "x-klaviyo-subtag": "Custom Objects"
      }
    },
    "/api/data-sources/{id}": {
      "get": {
        "operationId": "get_data_source_beta",
        "summary": "Get Data Source",
        "description": "\n            > ðŸš§ This endpoint is in beta and will be released in GA in our 2025-07-15 revision.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs.\n\nRetrieve a data source in an account.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`custom-objects:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data source",
            "required": true,
            "schema": {
              "description": "The ID of the data source",
              "type": "string"
            }
          },
          {
            "name": "fields[data-source]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "visibility",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataSourceResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "custom-objects:read"
        ],
        "x-klaviyo-subtag": "Custom Objects"
      },
      "delete": {
        "operationId": "delete_data_source_beta",
        "summary": "Delete Data Source",
        "description": "\n            > ðŸš§ This endpoint is in beta and will be released in GA in our 2025-07-15 revision.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs.\n\nDelete a data source in an account.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`custom-objects:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the data source to delete",
            "required": true,
            "schema": {
              "description": "The ID of the data source to delete",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "custom-objects:write"
        ],
        "x-klaviyo-subtag": "Custom Objects"
      }
    },
    "/api/data-source-record-bulk-create-jobs": {
      "post": {
        "operationId": "bulk_create_data_source_records_beta",
        "summary": "Bulk Create Data Source Records",
        "description": "\n            > ðŸš§ This endpoint is in beta and will be released in GA in our 2025-07-15 revision.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs.\n\nCreate a data source record job.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `15/m`\n\n**Scopes:**\n`custom-objects:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "requestBody": {
          "description": "Create a data source record job",
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DataSourceRecordBulkCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-operation-aliases": [
          "create_data_source_record_bulk_create_job"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "custom-objects:write"
        ],
        "x-klaviyo-subtag": "Custom Objects"
      }
    },
    "/api/flows/{id}/flow-actions": {
      "get": {
        "operationId": "get_actions_for_flow_beta",
        "summary": "Get Actions for Flow",
        "description": "\n            > ðŸš§ This endpoint is in beta and subject to change.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n\nGet all flow actions associated with the given flow ID.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "updated",
                  "definition",
                  "definition.id",
                  "definition.temporary_id",
                  "definition.type",
                  "definition.links",
                  "definition.links.next",
                  "definition.links.next_if_true",
                  "definition.links.next_if_false",
                  "definition.data",
                  "definition.data.profile_filter",
                  "definition.data.profile_filter.condition_groups",
                  "definition.data.message",
                  "definition.data.message.from_email",
                  "definition.data.message.from_label",
                  "definition.data.message.reply_to_email",
                  "definition.data.message.cc_email",
                  "definition.data.message.bcc_email",
                  "definition.data.message.subject_line",
                  "definition.data.message.preview_text",
                  "definition.data.message.template_id",
                  "definition.data.message.smart_sending_enabled",
                  "definition.data.message.transactional",
                  "definition.data.message.add_tracking_params",
                  "definition.data.message.custom_tracking_params",
                  "definition.data.message.additional_filters",
                  "definition.data.message.additional_filters.condition_groups",
                  "definition.data.message.name",
                  "definition.data.message.id",
                  "definition.data.status",
                  "definition.data.message.title",
                  "definition.data.message.body",
                  "definition.data.message.sound",
                  "definition.data.message.badge",
                  "definition.data.message.badge_options",
                  "definition.data.message.badge_options.badge_config",
                  "definition.data.message.badge_options.value",
                  "definition.data.message.badge_options.set_from_property",
                  "definition.data.message.image_id",
                  "definition.data.message.dynamic_image",
                  "definition.data.message.on_open",
                  "definition.data.message.ios_link",
                  "definition.data.message.android_link",
                  "definition.data.message.conversion_metric_id",
                  "definition.data.message.shorten_links",
                  "definition.data.message.include_contact_card",
                  "definition.data.message.add_org_prefix",
                  "definition.data.message.add_info_link",
                  "definition.data.message.add_opt_out_language",
                  "definition.data.message.sms_quiet_hours_enabled",
                  "definition.data.message.url",
                  "definition.data.message.headers",
                  "definition.data.message.to_emails",
                  "definition.data.unit",
                  "definition.data.value",
                  "definition.data.secondary_value",
                  "definition.data.timezone",
                  "definition.data.delay_until_time",
                  "definition.data.delay_until_weekdays",
                  "definition.data.trigger_filter",
                  "definition.data.trigger_filter.condition_groups",
                  "definition.data.trigger_id",
                  "definition.data.trigger_type",
                  "definition.data.trigger_subtype",
                  "definition.data.profile_operations",
                  "definition.data.target_time",
                  "definition.data.target_days",
                  "definition.data.experiment_status",
                  "definition.data.main_action",
                  "definition.data.main_action.id",
                  "definition.data.main_action.temporary_id",
                  "definition.data.main_action.type",
                  "definition.data.main_action.links",
                  "definition.data.main_action.links.next",
                  "definition.data.main_action.data",
                  "definition.data.main_action.data.message",
                  "definition.data.main_action.data.message.from_email",
                  "definition.data.main_action.data.message.from_label",
                  "definition.data.main_action.data.message.reply_to_email",
                  "definition.data.main_action.data.message.cc_email",
                  "definition.data.main_action.data.message.bcc_email",
                  "definition.data.main_action.data.message.subject_line",
                  "definition.data.main_action.data.message.preview_text",
                  "definition.data.main_action.data.message.template_id",
                  "definition.data.main_action.data.message.smart_sending_enabled",
                  "definition.data.main_action.data.message.transactional",
                  "definition.data.main_action.data.message.add_tracking_params",
                  "definition.data.main_action.data.message.custom_tracking_params",
                  "definition.data.main_action.data.message.additional_filters",
                  "definition.data.main_action.data.message.additional_filters.condition_groups",
                  "definition.data.main_action.data.message.name",
                  "definition.data.main_action.data.message.id",
                  "definition.data.main_action.data.status",
                  "definition.data.main_action.data.message.body",
                  "definition.data.main_action.data.message.image_id",
                  "definition.data.main_action.data.message.dynamic_image",
                  "definition.data.main_action.data.message.shorten_links",
                  "definition.data.main_action.data.message.include_contact_card",
                  "definition.data.main_action.data.message.add_org_prefix",
                  "definition.data.main_action.data.message.add_info_link",
                  "definition.data.main_action.data.message.add_opt_out_language",
                  "definition.data.main_action.data.message.sms_quiet_hours_enabled",
                  "definition.data.current_experiment",
                  "definition.data.current_experiment.id",
                  "definition.data.current_experiment.name",
                  "definition.data.current_experiment.variations",
                  "definition.data.current_experiment.allocations",
                  "definition.data.current_experiment.started",
                  "definition.data.current_experiment.winner_metric",
                  "definition.data.current_experiment.automatic_winner_selection_settings",
                  "definition.data.current_experiment.automatic_winner_selection_settings.enabled",
                  "definition.data.current_experiment.automatic_winner_selection_settings.automatic_end_date",
                  "definition.data.current_experiment.automatic_winner_selection_settings.automatic_end_statistical_certainty",
                  "definition.data.name",
                  "definition.data.on_execution",
                  "definition.data.list_id"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`action_type`: `any`, `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string",
              "example": "any(id,['example'])"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "action_type",
                "-action_type",
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionEncodedResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_flow_actions",
          "get_flow_actions"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Flows"
      }
    },
    "/api/flow-actions/{id}/flow-messages": {
      "get": {
        "operationId": "get_flow_action_messages_beta",
        "summary": "Get Messages For Flow Action",
        "description": "\n            > ðŸš§ This endpoint is in beta and subject to change.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n\nGet all flow messages associated with the given flow action ID.\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "updated",
                  "definition",
                  "definition.from_email",
                  "definition.from_label",
                  "definition.reply_to_email",
                  "definition.cc_email",
                  "definition.bcc_email",
                  "definition.subject_line",
                  "definition.preview_text",
                  "definition.template_id",
                  "definition.smart_sending_enabled",
                  "definition.transactional",
                  "definition.add_tracking_params",
                  "definition.custom_tracking_params",
                  "definition.additional_filters",
                  "definition.additional_filters.condition_groups",
                  "definition.name",
                  "definition.id",
                  "definition.to_emails",
                  "definition.title",
                  "definition.body",
                  "definition.sound",
                  "definition.badge",
                  "definition.badge_options",
                  "definition.badge_options.badge_config",
                  "definition.badge_options.value",
                  "definition.badge_options.set_from_property",
                  "definition.image_id",
                  "definition.dynamic_image",
                  "definition.on_open",
                  "definition.ios_link",
                  "definition.android_link",
                  "definition.conversion_metric_id",
                  "definition.shorten_links",
                  "definition.include_contact_card",
                  "definition.add_org_prefix",
                  "definition.add_info_link",
                  "definition.add_opt_out_language",
                  "definition.sms_quiet_hours_enabled",
                  "definition.url",
                  "definition.headers"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string",
              "example": "any(id,['example'])"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageEncodedResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_messages_for_flow_action"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Flows"
      }
    },
    "/api/flow-messages/{id}/flow-action": {
      "get": {
        "operationId": "get_action_for_flow_message_beta",
        "summary": "Get Action for Flow Message",
        "description": "\n            > ðŸš§ This endpoint is in beta and subject to change.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n\nGet the flow action for a flow message with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "created",
                  "updated",
                  "definition",
                  "definition.id",
                  "definition.temporary_id",
                  "definition.type",
                  "definition.links",
                  "definition.links.next",
                  "definition.links.next_if_true",
                  "definition.links.next_if_false",
                  "definition.data",
                  "definition.data.profile_filter",
                  "definition.data.profile_filter.condition_groups",
                  "definition.data.message",
                  "definition.data.message.from_email",
                  "definition.data.message.from_label",
                  "definition.data.message.reply_to_email",
                  "definition.data.message.cc_email",
                  "definition.data.message.bcc_email",
                  "definition.data.message.subject_line",
                  "definition.data.message.preview_text",
                  "definition.data.message.template_id",
                  "definition.data.message.smart_sending_enabled",
                  "definition.data.message.transactional",
                  "definition.data.message.add_tracking_params",
                  "definition.data.message.custom_tracking_params",
                  "definition.data.message.additional_filters",
                  "definition.data.message.additional_filters.condition_groups",
                  "definition.data.message.name",
                  "definition.data.message.id",
                  "definition.data.status",
                  "definition.data.message.title",
                  "definition.data.message.body",
                  "definition.data.message.sound",
                  "definition.data.message.badge",
                  "definition.data.message.badge_options",
                  "definition.data.message.badge_options.badge_config",
                  "definition.data.message.badge_options.value",
                  "definition.data.message.badge_options.set_from_property",
                  "definition.data.message.image_id",
                  "definition.data.message.dynamic_image",
                  "definition.data.message.on_open",
                  "definition.data.message.ios_link",
                  "definition.data.message.android_link",
                  "definition.data.message.conversion_metric_id",
                  "definition.data.message.shorten_links",
                  "definition.data.message.include_contact_card",
                  "definition.data.message.add_org_prefix",
                  "definition.data.message.add_info_link",
                  "definition.data.message.add_opt_out_language",
                  "definition.data.message.sms_quiet_hours_enabled",
                  "definition.data.message.url",
                  "definition.data.message.headers",
                  "definition.data.message.to_emails",
                  "definition.data.unit",
                  "definition.data.value",
                  "definition.data.secondary_value",
                  "definition.data.timezone",
                  "definition.data.delay_until_time",
                  "definition.data.delay_until_weekdays",
                  "definition.data.trigger_filter",
                  "definition.data.trigger_filter.condition_groups",
                  "definition.data.trigger_id",
                  "definition.data.trigger_type",
                  "definition.data.trigger_subtype",
                  "definition.data.profile_operations",
                  "definition.data.target_time",
                  "definition.data.target_days",
                  "definition.data.experiment_status",
                  "definition.data.main_action",
                  "definition.data.main_action.id",
                  "definition.data.main_action.temporary_id",
                  "definition.data.main_action.type",
                  "definition.data.main_action.links",
                  "definition.data.main_action.links.next",
                  "definition.data.main_action.data",
                  "definition.data.main_action.data.message",
                  "definition.data.main_action.data.message.from_email",
                  "definition.data.main_action.data.message.from_label",
                  "definition.data.main_action.data.message.reply_to_email",
                  "definition.data.main_action.data.message.cc_email",
                  "definition.data.main_action.data.message.bcc_email",
                  "definition.data.main_action.data.message.subject_line",
                  "definition.data.main_action.data.message.preview_text",
                  "definition.data.main_action.data.message.template_id",
                  "definition.data.main_action.data.message.smart_sending_enabled",
                  "definition.data.main_action.data.message.transactional",
                  "definition.data.main_action.data.message.add_tracking_params",
                  "definition.data.main_action.data.message.custom_tracking_params",
                  "definition.data.main_action.data.message.additional_filters",
                  "definition.data.main_action.data.message.additional_filters.condition_groups",
                  "definition.data.main_action.data.message.name",
                  "definition.data.main_action.data.message.id",
                  "definition.data.main_action.data.status",
                  "definition.data.main_action.data.message.body",
                  "definition.data.main_action.data.message.image_id",
                  "definition.data.main_action.data.message.dynamic_image",
                  "definition.data.main_action.data.message.shorten_links",
                  "definition.data.main_action.data.message.include_contact_card",
                  "definition.data.main_action.data.message.add_org_prefix",
                  "definition.data.main_action.data.message.add_info_link",
                  "definition.data.main_action.data.message.add_opt_out_language",
                  "definition.data.main_action.data.message.sms_quiet_hours_enabled",
                  "definition.data.current_experiment",
                  "definition.data.current_experiment.id",
                  "definition.data.current_experiment.name",
                  "definition.data.current_experiment.variations",
                  "definition.data.current_experiment.allocations",
                  "definition.data.current_experiment.started",
                  "definition.data.current_experiment.winner_metric",
                  "definition.data.current_experiment.automatic_winner_selection_settings",
                  "definition.data.current_experiment.automatic_winner_selection_settings.enabled",
                  "definition.data.current_experiment.automatic_winner_selection_settings.automatic_end_date",
                  "definition.data.current_experiment.automatic_winner_selection_settings.automatic_end_statistical_certainty",
                  "definition.data.name",
                  "definition.data.on_execution",
                  "definition.data.list_id"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionEncodedResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_message_action"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Flows"
      }
    },
    "/api/flow-messages/{id}/relationships/flow-action": {
      "get": {
        "operationId": "get_action_id_for_flow_message_beta",
        "summary": "Get Action ID for Flow Message",
        "description": "\n            > ðŸš§ This endpoint is in beta and subject to change.\n            >\n            > A beta revision header (2025-04-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n\nGet the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message's flow action, given the flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2025-04-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageActionRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-operation-aliases": [
          "get_flow_message_relationships_action"
        ],
        "x-klaviyo-pre-release": "BETA",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Flows"
      }
    }
  },
  "components": {
    "schemas": {
      "FlowEnum": {
        "type": "string",
        "enum": [
          "flow"
        ]
      },
      "FlowResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "string",
                "nullable": true
              },
              "archived": {
                "type": "boolean",
                "nullable": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "trigger_type": {
                "description": "Corresponds to the object which triggered the flow.",
                "type": "string",
                "enum": [
                  "Added to List",
                  "Date Based",
                  "Low Inventory",
                  "Metric",
                  "Price Drop",
                  "Unconfigured"
                ],
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "ListEnum": {
        "type": "string",
        "enum": [
          "list"
        ]
      },
      "ProfileGroupMembershipEnum": {
        "type": "string",
        "enum": [
          "profile-group-membership"
        ]
      },
      "DateEnum": {
        "type": "string",
        "enum": [
          "date"
        ]
      },
      "StaticDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for static date filters.\n\nE.g. \"before 2023-01-01\"",
            "type": "string",
            "enum": [
              "after",
              "before"
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          }
        },
        "required": [
          "type",
          "operator",
          "date"
        ]
      },
      "StaticDateRangeFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for static date range filters.\n\nE.g. \"between 2023-01-01 and 2023-02-01\"",
            "type": "string",
            "enum": [
              "between-static"
            ]
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          }
        },
        "required": [
          "type",
          "operator",
          "start",
          "end"
        ]
      },
      "RelativeDateOperatorBaseFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for relative date filters.\n\ne.g. \"in the last 10 days\"",
            "type": "string",
            "enum": [
              "at-least",
              "in-the-last",
              "in-the-next"
            ]
          },
          "unit": {
            "description": "Units for relative date filters.",
            "type": "string",
            "enum": [
              "day",
              "hour",
              "week"
            ]
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "unit",
          "quantity"
        ]
      },
      "RelativeDateRangeFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for relative date range filters.\n\ne.g. \"between 10 and 20 days ago\"",
            "type": "string",
            "enum": [
              "between"
            ]
          },
          "start": {
            "type": "integer"
          },
          "end": {
            "type": "integer"
          },
          "unit": {
            "description": "Units for relative date filters.",
            "type": "string",
            "enum": [
              "day",
              "hour",
              "week"
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "start",
          "end",
          "unit"
        ]
      },
      "ProfileHasGroupMembershipCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileGroupMembershipEnum"
          },
          "is_member": {
            "enum": [
              true
            ]
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeframe_filter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "is_member",
          "group_ids"
        ]
      },
      "ProfileNoGroupMembershipCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileGroupMembershipEnum"
          },
          "is_member": {
            "enum": [
              false
            ]
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "is_member",
          "group_ids"
        ]
      },
      "ProfileMetricEnum": {
        "type": "string",
        "enum": [
          "profile-metric"
        ]
      },
      "NumericEnum": {
        "type": "string",
        "enum": [
          "numeric"
        ]
      },
      "NumericOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NumericEnum"
          },
          "operator": {
            "description": "Operators for numeric filters.",
            "type": "string",
            "enum": [
              "equals",
              "greater-than",
              "greater-than-or-equal",
              "less-than",
              "less-than-or-equal",
              "not-equals"
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "RelativeAnniversaryDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for relative date filters.\n\ne.g. \"anniversary in the last 10 days\"",
            "type": "string",
            "enum": [
              "anniversary-last",
              "anniversary-next"
            ]
          },
          "unit": {
            "description": "Units for relative date filters.",
            "type": "string",
            "enum": [
              "day",
              "hour",
              "week"
            ]
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "unit",
          "quantity"
        ]
      },
      "AlltimeDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for alltime date filters.",
            "type": "string",
            "enum": [
              "alltime"
            ]
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "StringEnum": {
        "type": "string",
        "enum": [
          "string"
        ]
      },
      "StringOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "description": "Operators for string filters.",
            "type": "string",
            "enum": [
              "contains",
              "ends-with",
              "equals",
              "not-contains",
              "not-ends-with",
              "not-equals",
              "not-starts-with",
              "starts-with"
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "StringArrayOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "description": "Operators for string-in-array filters.",
            "type": "string",
            "enum": [
              "in",
              "not-in"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ExistenceEnum": {
        "type": "string",
        "enum": [
          "existence"
        ]
      },
      "ExistenceOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExistenceEnum"
          },
          "operator": {
            "description": "Operators for existence filters.",
            "type": "string",
            "enum": [
              "is-set",
              "not-set"
            ]
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "ListSetFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list contains set filters.",
            "type": "string",
            "enum": [
              "contains-all",
              "contains-any",
              "not-contains-all",
              "not-contains-any"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ListLengthFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list length filters.",
            "type": "string",
            "enum": [
              "length-equals",
              "length-greater-than",
              "length-greater-than-or-equal",
              "length-less-than",
              "length-less-than-or-equal"
            ]
          },
          "value": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ListSubstringFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list substring filters.",
            "type": "string",
            "enum": [
              "contains-substring",
              "not-contains-substring"
            ]
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "BooleanEnum": {
        "type": "string",
        "enum": [
          "boolean"
        ]
      },
      "BooleanFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BooleanEnum"
          },
          "operator": {
            "description": "Operators for boolean filters.",
            "type": "string",
            "enum": [
              "equals"
            ]
          },
          "value": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfileMetricPropertyFilter": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string"
          },
          "filter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/StringArrayOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/ExistenceOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/ListSetFilter"
              },
              {
                "$ref": "#/components/schemas/ListLengthFilter"
              },
              {
                "$ref": "#/components/schemas/ListSubstringFilter"
              },
              {
                "$ref": "#/components/schemas/BooleanFilter"
              },
              {
                "$ref": "#/components/schemas/NumericOperatorFilter"
              }
            ]
          }
        },
        "required": [
          "property"
        ]
      },
      "ProfileMarketingConsentEnum": {
        "type": "string",
        "enum": [
          "profile-marketing-consent"
        ]
      },
      "EmailEnum": {
        "type": "string",
        "enum": [
          "email"
        ]
      },
      "AnyEnum": {
        "type": "string",
        "enum": [
          "any"
        ]
      },
      "HasEmailMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          },
          "filters": {
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "SubscribedEnum": {
        "type": "string",
        "enum": [
          "subscribed"
        ]
      },
      "Is_double_opt_inEnum": {
        "type": "string",
        "enum": [
          "is_double_opt_in"
        ]
      },
      "DoubleOptinFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Is_double_opt_inEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/BooleanFilter"
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Status_dateEnum": {
        "type": "string",
        "enum": [
          "status_date"
        ]
      },
      "CalendarDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for calendar date filters.",
            "type": "string",
            "enum": [
              "calendar-month"
            ]
          },
          "value": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "AnniversaryDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Operators for anniversary date filters.",
            "type": "string",
            "enum": [
              "anniversary",
              "anniversary-month"
            ]
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "StatusDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Status_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Custom_sourceEnum": {
        "type": "string",
        "enum": [
          "custom_source"
        ]
      },
      "EqualsEnum": {
        "type": "string",
        "enum": [
          "equals"
        ]
      },
      "EqualsStringFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/EqualsEnum"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "CustomSourceFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Custom_sourceEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/EqualsStringFilter"
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "MethodEnum": {
        "type": "string",
        "enum": [
          "method"
        ]
      },
      "FormEnum": {
        "type": "string",
        "enum": [
          "form"
        ]
      },
      "InEnum": {
        "type": "string",
        "enum": [
          "in"
        ]
      },
      "InStringArrayFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/InEnum"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "FormMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/FormEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of form ids",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Preference_pageEnum": {
        "type": "string",
        "enum": [
          "preference_page"
        ]
      },
      "PreferencePageFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Preference_pageEnum"
          },
          "filter": {
            "description": "Optional filter on a specific subscribe page url",
            "$ref": "#/components/schemas/EqualsStringFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "ApiEnum": {
        "type": "string",
        "enum": [
          "api"
        ]
      },
      "APIMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/ApiEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of API keys (using last 4 digits of the key)",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Inbound_messageEnum": {
        "type": "string",
        "enum": [
          "inbound_message"
        ]
      },
      "InboundMessageMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Inbound_messageEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Back_in_stockEnum": {
        "type": "string",
        "enum": [
          "back_in_stock"
        ]
      },
      "BackInStockMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Back_in_stockEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "SftpEnum": {
        "type": "string",
        "enum": [
          "sftp"
        ]
      },
      "SftpMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/SftpEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Manual_importEnum": {
        "type": "string",
        "enum": [
          "manual_import"
        ]
      },
      "ManualImportMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Manual_importEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of user email addresses who initiated the manual action",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Manual_addEnum": {
        "type": "string",
        "enum": [
          "manual_add"
        ]
      },
      "ManualAddMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Manual_addEnum"
          },
          "filter": {
            "description": "Optional filter on a specific list of user email addresses who initiated the manual action",
            "$ref": "#/components/schemas/InStringArrayFilter",
            "nullable": true
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "IntegrationEnum": {
        "type": "string",
        "enum": [
          "integration"
        ]
      },
      "ShopifyEnum": {
        "type": "string",
        "enum": [
          "shopify"
        ]
      },
      "ShopifyIntegrationFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/InEnum"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopifyEnum"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ShopifyIntegrationMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/IntegrationEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/ShopifyIntegrationFilter"
          }
        },
        "required": [
          "field",
          "method",
          "filter"
        ]
      },
      "HasEmailMarketingSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DoubleOptinFilter"
                },
                {
                  "$ref": "#/components/schemas/StatusDateFilter"
                },
                {
                  "$ref": "#/components/schemas/CustomSourceFilter"
                },
                {
                  "$ref": "#/components/schemas/FormMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/PreferencePageFilter"
                },
                {
                  "$ref": "#/components/schemas/APIMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/InboundMessageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/BackInStockMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/SftpMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualImportMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualAddMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ShopifyIntegrationMethodFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "Never_subscribedEnum": {
        "type": "string",
        "enum": [
          "never_subscribed"
        ]
      },
      "HasEmailMarketingNeverSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Never_subscribedEnum"
          },
          "filters": {
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "HasEmailMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/EmailEnum"
          },
          "can_receive_marketing": {
            "enum": [
              true
            ]
          },
          "consent_status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/HasEmailMarketing"
              },
              {
                "$ref": "#/components/schemas/HasEmailMarketingSubscribed"
              },
              {
                "$ref": "#/components/schemas/HasEmailMarketingNeverSubscribed"
              }
            ]
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "Bounce_dateEnum": {
        "type": "string",
        "enum": [
          "bounce_date"
        ]
      },
      "IsSetEnum": {
        "type": "string",
        "enum": [
          "is-set"
        ]
      },
      "IsSetExistenceFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExistenceEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/IsSetEnum"
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "BounceDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Bounce_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/IsSetExistenceFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Manual_suppression_dateEnum": {
        "type": "string",
        "enum": [
          "manual_suppression_date"
        ]
      },
      "ManualSuppressionDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Manual_suppression_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/IsSetExistenceFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "Invalid_email_dateEnum": {
        "type": "string",
        "enum": [
          "invalid_email_date"
        ]
      },
      "InvalidEmailDateFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/Invalid_email_dateEnum"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/IsSetExistenceFilter"
              }
            ]
          }
        },
        "required": [
          "field",
          "filter"
        ]
      },
      "NoEmailMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BounceDateFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                },
                {
                  "$ref": "#/components/schemas/InvalidEmailDateFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "UnsubscribedEnum": {
        "type": "string",
        "enum": [
          "unsubscribed"
        ]
      },
      "PreferencePageMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Preference_pageEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Manual_removeEnum": {
        "type": "string",
        "enum": [
          "manual_remove"
        ]
      },
      "ManualRemoveMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Manual_removeEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Spam_complaintEnum": {
        "type": "string",
        "enum": [
          "spam_complaint"
        ]
      },
      "SpamComplaintMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Spam_complaintEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Mailbox_providerEnum": {
        "type": "string",
        "enum": [
          "mailbox_provider"
        ]
      },
      "MailboxProviderMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Mailbox_providerEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Constant_contactEnum": {
        "type": "string",
        "enum": [
          "constant_contact"
        ]
      },
      "ConstantContactIntegrationFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/InEnum"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Constant_contactEnum"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ConstantContactIntegrationMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/IntegrationEnum"
          },
          "filter": {
            "$ref": "#/components/schemas/ConstantContactIntegrationFilter"
          }
        },
        "required": [
          "field",
          "method",
          "filter"
        ]
      },
      "NoEmailMarketingUnsubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/UnsubscribedEnum"
          },
          "filters": {
            "nullable": true,
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/StatusDateFilter"
                    },
                    {
                      "$ref": "#/components/schemas/APIMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/InboundMessageMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/PreferencePageMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/ManualRemoveMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/SpamComplaintMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/MailboxProviderMethodFilter"
                    },
                    {
                      "$ref": "#/components/schemas/ConstantContactIntegrationMethodFilter"
                    }
                  ]
                }
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BounceDateFilter"
                    },
                    {
                      "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidEmailDateFilter"
                    }
                  ]
                }
              }
            ]
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoEmailMarketingNeverSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Never_subscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BounceDateFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                },
                {
                  "$ref": "#/components/schemas/InvalidEmailDateFilter"
                }
              ]
            }
          }
        },
        "required": [
          "subscription",
          "filters"
        ]
      },
      "NoEmailMarketingSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BounceDateFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualSuppressionDateFilter"
                },
                {
                  "$ref": "#/components/schemas/InvalidEmailDateFilter"
                }
              ]
            }
          }
        },
        "required": [
          "subscription",
          "filters"
        ]
      },
      "NoEmailMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/EmailEnum"
          },
          "can_receive_marketing": {
            "enum": [
              false
            ]
          },
          "consent_status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoEmailMarketing"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingUnsubscribed"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingNeverSubscribed"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingSubscribed"
              }
            ]
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "SmsEnum": {
        "type": "string",
        "enum": [
          "sms"
        ]
      },
      "CheckoutEnum": {
        "type": "string",
        "enum": [
          "checkout"
        ]
      },
      "CheckoutMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/CheckoutEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "HasSMSMarketingSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/StatusDateFilter"
                },
                {
                  "$ref": "#/components/schemas/FormMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualImportMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualAddMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/CheckoutMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/InboundMessageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/PreferencePageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/SftpMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ShopifyIntegrationMethodFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "HasSMSMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/SmsEnum"
          },
          "can_receive_marketing": {
            "enum": [
              true
            ]
          },
          "consent_status": {
            "$ref": "#/components/schemas/HasSMSMarketingSubscribed"
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "NoSMSMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "Bulk_removeEnum": {
        "type": "string",
        "enum": [
          "bulk_remove"
        ]
      },
      "BulkRemoveMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Bulk_removeEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Carrier_deactivationEnum": {
        "type": "string",
        "enum": [
          "carrier_deactivation"
        ]
      },
      "CarrierDeactivationMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Carrier_deactivationEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Provided_landlineEnum": {
        "type": "string",
        "enum": [
          "provided_landline"
        ]
      },
      "ProvidedLandlineMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Provided_landlineEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Message_blockedEnum": {
        "type": "string",
        "enum": [
          "message_blocked"
        ]
      },
      "MessageBlockedMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Message_blockedEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Provided_no_ageEnum": {
        "type": "string",
        "enum": [
          "provided_no_age"
        ]
      },
      "ProvidedNoAgeMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Provided_no_ageEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "Failed_age_gateEnum": {
        "type": "string",
        "enum": [
          "failed_age_gate"
        ]
      },
      "FailedAgeGateMethodFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/MethodEnum"
          },
          "method": {
            "$ref": "#/components/schemas/Failed_age_gateEnum"
          }
        },
        "required": [
          "field",
          "method"
        ]
      },
      "NoSMSMarketingUnsubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/UnsubscribedEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/StatusDateFilter"
                },
                {
                  "$ref": "#/components/schemas/FormMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualImportMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualAddMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ManualRemoveMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/BulkRemoveMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/CheckoutMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/InboundMessageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/PreferencePageMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/SftpMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/CarrierDeactivationMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ProvidedLandlineMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/MessageBlockedMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ProvidedNoAgeMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/FailedAgeGateMethodFilter"
                },
                {
                  "$ref": "#/components/schemas/ShopifyIntegrationMethodFilter"
                }
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoSMSMarketingNeverSubscribed": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Never_subscribedEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoSMSMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/SmsEnum"
          },
          "can_receive_marketing": {
            "enum": [
              false
            ]
          },
          "consent_status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NoSMSMarketing"
              },
              {
                "$ref": "#/components/schemas/NoSMSMarketingUnsubscribed"
              },
              {
                "$ref": "#/components/schemas/NoSMSMarketingNeverSubscribed"
              }
            ]
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "PushEnum": {
        "type": "string",
        "enum": [
          "push"
        ]
      },
      "HasPushMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusDateFilter"
            },
            "nullable": true
          }
        },
        "required": [
          "subscription"
        ]
      },
      "HasPushMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/PushEnum"
          },
          "can_receive_marketing": {
            "enum": [
              true
            ]
          },
          "consent_status": {
            "$ref": "#/components/schemas/HasPushMarketing"
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "NoPushMarketing": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/AnyEnum"
          }
        },
        "required": [
          "subscription"
        ]
      },
      "NoPushMarketingConsent": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/PushEnum"
          },
          "can_receive_marketing": {
            "enum": [
              false
            ]
          },
          "consent_status": {
            "$ref": "#/components/schemas/NoPushMarketing"
          }
        },
        "required": [
          "channel",
          "can_receive_marketing",
          "consent_status"
        ]
      },
      "ProfileMarketingConsentCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileMarketingConsentEnum"
          },
          "consent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/HasEmailMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/NoEmailMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/HasSMSMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/NoSMSMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/HasPushMarketingConsent"
              },
              {
                "$ref": "#/components/schemas/NoPushMarketingConsent"
              }
            ]
          }
        },
        "required": [
          "type",
          "consent"
        ]
      },
      "ProfilePostalCodeDistanceEnum": {
        "type": "string",
        "enum": [
          "profile-postal-code-distance"
        ]
      },
      "GreaterThanEnum": {
        "type": "string",
        "enum": [
          "greater-than"
        ]
      },
      "GreaterThanPositiveNumericFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NumericEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/GreaterThanEnum"
          },
          "value": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "LessThanEnum": {
        "type": "string",
        "enum": [
          "less-than"
        ]
      },
      "LessThanPositiveNumericFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NumericEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/LessThanEnum"
          },
          "value": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfilePostalCodeDistanceCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePostalCodeDistanceEnum"
          },
          "country_code": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "unit": {
            "description": "Units for profile postal code distance conditions.",
            "type": "string",
            "enum": [
              "kilometers",
              "miles"
            ]
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/GreaterThanPositiveNumericFilter"
              },
              {
                "$ref": "#/components/schemas/LessThanPositiveNumericFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "country_code",
          "postal_code",
          "unit",
          "filter"
        ]
      },
      "ProfilePropertyEnum": {
        "type": "string",
        "enum": [
          "profile-property"
        ]
      },
      "StringPhoneOperatorArrayFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "description": "Operators for phone string array filters.\n\nExample condition using this filter:\n    {",
            "type": "string",
            "enum": [
              "phone-country-code-in",
              "phone-country-code-not-in"
            ]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ListContainsOperatorFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "operator": {
            "description": "Operators for list contains filters.",
            "type": "string",
            "enum": [
              "contains",
              "not-contains"
            ]
          },
          "value": {
            "nullable": true,
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfilePropertyCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePropertyEnum"
          },
          "property": {
            "type": "string"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/StringArrayOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/StringPhoneOperatorArrayFilter"
              },
              {
                "$ref": "#/components/schemas/NumericOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/BooleanFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/ListContainsOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/ListLengthFilter"
              },
              {
                "$ref": "#/components/schemas/ExistenceOperatorFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "property",
          "filter"
        ]
      },
      "ProfileRegionEnum": {
        "type": "string",
        "enum": [
          "profile-region"
        ]
      },
      "ProfileRegionCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileRegionEnum"
          },
          "in_region": {
            "type": "boolean"
          },
          "region": {
            "description": "Regions for profile region conditions.",
            "type": "string",
            "enum": [
              "european_union",
              "united_states"
            ]
          }
        },
        "required": [
          "type",
          "in_region",
          "region"
        ]
      },
      "ProfilePredictiveAnalyticsEnum": {
        "type": "string",
        "enum": [
          "profile-predictive-analytics"
        ]
      },
      "ProfilePredictiveAnalyticsDateCondition": {
        "type": "object",
        "properties": {
          "dimension": {
            "description": "Dimension for date profile predictive analytics conditions.",
            "type": "string",
            "enum": [
              "expected_date_of_next_purchase"
            ]
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              }
            ]
          },
          "type": {
            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsEnum"
          }
        },
        "required": [
          "dimension",
          "filter",
          "type"
        ]
      },
      "ProfilePredictiveAnalyticsNumericCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsEnum"
          },
          "dimension": {
            "description": "Dimensions for numeric profile predictive analytics conditions.",
            "type": "string",
            "enum": [
              "average_days_between_orders",
              "average_order_value",
              "churn_probability",
              "historic_clv",
              "historic_number_of_orders",
              "predicted_clv",
              "predicted_number_of_orders",
              "total_clv"
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/NumericOperatorFilter"
          }
        },
        "required": [
          "type",
          "dimension",
          "filter"
        ]
      },
      "NotEqualsEnum": {
        "type": "string",
        "enum": [
          "not-equals"
        ]
      },
      "ProfilePredictiveAnalyticsStringFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "operator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EqualsEnum"
              },
              {
                "$ref": "#/components/schemas/NotEqualsEnum"
              }
            ]
          },
          "value": {
            "description": "Values for profile predictive analytics gender conditions.",
            "type": "string",
            "enum": [
              "likely_female",
              "likely_male",
              "uncertain"
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "value"
        ]
      },
      "ProfilePredictiveAnalyticsStringCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsEnum"
          },
          "dimension": {
            "description": "Dimension for string profile predictive analytics conditions.",
            "type": "string",
            "enum": [
              "predicted_gender"
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsStringFilter"
          }
        },
        "required": [
          "type",
          "dimension",
          "filter"
        ]
      },
      "FlowActionEnum": {
        "type": "string",
        "enum": [
          "flow-action"
        ]
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "FlowEmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "FlowsSMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "CampaignMessageIncrement": {
        "type": "object",
        "properties": {
          "badge_config": {
            "enum": [
              "increment_one"
            ]
          }
        },
        "required": [
          "badge_config"
        ]
      },
      "CampaignMessageStaticCount": {
        "type": "object",
        "properties": {
          "badge_config": {
            "enum": [
              "set_count"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "badge_config",
          "value"
        ]
      },
      "CampaignMessageProperty": {
        "type": "object",
        "properties": {
          "badge_config": {
            "enum": [
              "set_property"
            ]
          },
          "set_from_property": {
            "type": "string"
          }
        },
        "required": [
          "badge_config",
          "set_from_property"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "FlowMessageEnum": {
        "type": "string",
        "enum": [
          "flow-message"
        ]
      },
      "FlowActionResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowActionEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "string",
                "nullable": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "settings": {
                "type": "object",
                "nullable": true
              },
              "tracking_options": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FlowEmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/FlowsSMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions",
                "nullable": true
              },
              "badge_options": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CampaignMessageIncrement"
                  },
                  {
                    "$ref": "#/components/schemas/CampaignMessageStaticCount"
                  },
                  {
                    "$ref": "#/components/schemas/CampaignMessageProperty"
                  }
                ]
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions",
                "nullable": true
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "flow": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowEnum"
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "flow-messages": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/FlowMessageEnum"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "MetricPropertyEnum": {
        "type": "string",
        "enum": [
          "metric-property"
        ]
      },
      "NumericRangeFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NumericEnum"
          },
          "operator": {
            "description": "Operators for numeric range filters.",
            "type": "string",
            "enum": [
              "between"
            ]
          },
          "start": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          },
          "end": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "type",
          "operator",
          "start",
          "end"
        ]
      },
      "MetricPropertyCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricPropertyEnum"
          },
          "metric_id": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/StringArrayOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/NumericOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/NumericRangeFilter"
              },
              {
                "$ref": "#/components/schemas/BooleanFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/CalendarDateFilter"
              },
              {
                "$ref": "#/components/schemas/AnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/ListContainsOperatorFilter"
              },
              {
                "$ref": "#/components/schemas/ListLengthFilter"
              },
              {
                "$ref": "#/components/schemas/ExistenceOperatorFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "metric_id",
          "field",
          "filter"
        ]
      },
      "MetricPropertyConditionGroup": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricPropertyCondition"
            }
          }
        },
        "required": [
          "conditions"
        ]
      },
      "MetricPropertyConditionFilter": {
        "type": "object",
        "properties": {
          "condition_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricPropertyConditionGroup"
            }
          }
        },
        "required": [
          "condition_groups"
        ]
      },
      "SinceFlowStartDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "description": "Possible operators for since flow start date.",
            "type": "string",
            "enum": [
              "flow-start"
            ]
          }
        },
        "required": [
          "type",
          "operator"
        ]
      },
      "FlowsProfileMetricCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileMetricEnum"
          },
          "metric_id": {
            "type": "string"
          },
          "measurement": {
            "description": "Measurements for profile metrics.",
            "type": "string",
            "enum": [
              "count",
              "sum"
            ]
          },
          "measurement_filter": {
            "$ref": "#/components/schemas/NumericOperatorFilter"
          },
          "timeframe_filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StaticDateFilter"
              },
              {
                "$ref": "#/components/schemas/StaticDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateOperatorBaseFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeAnniversaryDateFilter"
              },
              {
                "$ref": "#/components/schemas/RelativeDateRangeFilter"
              },
              {
                "$ref": "#/components/schemas/AlltimeDateFilter"
              },
              {
                "$ref": "#/components/schemas/SinceFlowStartDateFilter"
              }
            ]
          },
          "metric_filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileMetricPropertyFilter"
            },
            "nullable": true
          }
        },
        "required": [
          "type",
          "metric_id",
          "measurement",
          "measurement_filter",
          "timeframe_filter"
        ]
      },
      "ProfileSampleEnum": {
        "type": "string",
        "enum": [
          "profile-sample"
        ]
      },
      "ProfileRandomSampleCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSampleEnum"
          },
          "percentage": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "percentage"
        ]
      },
      "InTheLastEnum": {
        "type": "string",
        "enum": [
          "in-the-last"
        ]
      },
      "InTheLastBaseRelativeDateFilter": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/InTheLastEnum"
          },
          "unit": {
            "description": "Units for relative date filters.",
            "type": "string",
            "enum": [
              "day",
              "hour",
              "week"
            ]
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "type",
          "operator",
          "unit",
          "quantity"
        ]
      },
      "BackInStockDelayEnum": {
        "type": "string",
        "enum": [
          "back-in-stock-delay"
        ]
      },
      "Link": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "next"
        ]
      },
      "BackInStockDelayAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/BackInStockDelayEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "ConditionalSplitEnum": {
        "type": "string",
        "enum": [
          "conditional-split"
        ]
      },
      "BooleanBranchLinks": {
        "type": "object",
        "properties": {
          "next_if_true": {
            "type": "string",
            "nullable": true
          },
          "next_if_false": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "next_if_true",
          "next_if_false"
        ]
      },
      "ConditionalBranchActionData": {
        "type": "object",
        "properties": {
          "profile_filter": {
            "type": "object",
            "nullable": true,
            "properties": {
              "condition_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ProfilePropertyCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileHasGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileNoGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRegionCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePostalCodeDistanceCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsDateCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsStringCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsNumericCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileMarketingConsentCondition"
                          },
                          {
                            "$ref": "#/components/schemas/FlowsProfileMetricCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRandomSampleCondition"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "conditions"
                  ]
                }
              }
            },
            "required": [
              "condition_groups"
            ]
          }
        },
        "required": [
          "profile_filter"
        ]
      },
      "ConditionalBranchAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ConditionalSplitEnum"
          },
          "links": {
            "$ref": "#/components/schemas/BooleanBranchLinks",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ConditionalBranchActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "SendEmailEnum": {
        "type": "string",
        "enum": [
          "send-email"
        ]
      },
      "UtmParam": {
        "type": "object",
        "properties": {
          "param": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "param",
          "value"
        ]
      },
      "ProfileNotSentEmailEnum": {
        "type": "string",
        "enum": [
          "profile-not-sent-email"
        ]
      },
      "ProfileHasNotReceivedEmailMessageCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileNotSentEmailEnum"
          },
          "timeframe_filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AlltimeDateFilter"
              },
              {
                "$ref": "#/components/schemas/InTheLastBaseRelativeDateFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "timeframe_filter"
        ]
      },
      "FlowEmail": {
        "type": "object",
        "properties": {
          "from_email": {
            "type": "string",
            "nullable": true
          },
          "from_label": {
            "type": "string",
            "nullable": true
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true
          },
          "cc_email": {
            "type": "string",
            "nullable": true
          },
          "bcc_email": {
            "type": "string",
            "nullable": true
          },
          "subject_line": {
            "type": "string",
            "nullable": true
          },
          "preview_text": {
            "type": "string",
            "nullable": true
          },
          "template_id": {
            "type": "string",
            "nullable": true
          },
          "smart_sending_enabled": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "transactional": {
            "type": "boolean",
            "default": false
          },
          "add_tracking_params": {
            "type": "boolean",
            "default": false
          },
          "custom_tracking_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParam"
            },
            "nullable": true
          },
          "additional_filters": {
            "type": "object",
            "nullable": true,
            "properties": {
              "condition_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ProfilePropertyCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileHasGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileNoGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRegionCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePostalCodeDistanceCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsDateCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsStringCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsNumericCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileMarketingConsentCondition"
                          },
                          {
                            "$ref": "#/components/schemas/FlowsProfileMetricCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRandomSampleCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileHasNotReceivedEmailMessageCondition"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "conditions"
                  ]
                }
              }
            },
            "required": [
              "condition_groups"
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "from_email",
          "from_label",
          "reply_to_email",
          "cc_email",
          "bcc_email",
          "subject_line",
          "preview_text"
        ]
      },
      "SendEmailActionData": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/FlowEmail"
          },
          "status": {
            "description": "Flow action status.",
            "type": "string",
            "example": "draft",
            "default": "draft",
            "enum": [
              "disabled",
              "draft",
              "live",
              "manual"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "SendEmailAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/SendEmailEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SendEmailActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "SendMobilePushEnum": {
        "type": "string",
        "enum": [
          "send-mobile-push"
        ]
      },
      "Increment_oneEnum": {
        "type": "string",
        "enum": [
          "increment_one"
        ]
      },
      "Increment": {
        "type": "object",
        "properties": {
          "badge_config": {
            "$ref": "#/components/schemas/Increment_oneEnum"
          }
        },
        "required": [
          "badge_config"
        ]
      },
      "Set_countEnum": {
        "type": "string",
        "enum": [
          "set_count"
        ]
      },
      "StaticCount": {
        "type": "object",
        "properties": {
          "badge_config": {
            "$ref": "#/components/schemas/Set_countEnum"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "badge_config",
          "value"
        ]
      },
      "Set_propertyEnum": {
        "type": "string",
        "enum": [
          "set_property"
        ]
      },
      "Property": {
        "type": "object",
        "properties": {
          "badge_config": {
            "$ref": "#/components/schemas/Set_propertyEnum"
          },
          "set_from_property": {
            "type": "string"
          }
        },
        "required": [
          "badge_config",
          "set_from_property"
        ]
      },
      "ProfileNotSentPushEnum": {
        "type": "string",
        "enum": [
          "profile-not-sent-push"
        ]
      },
      "ProfileHasNotReceivedPushMessageCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileNotSentPushEnum"
          },
          "timeframe_filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AlltimeDateFilter"
              },
              {
                "$ref": "#/components/schemas/InTheLastBaseRelativeDateFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "timeframe_filter"
        ]
      },
      "FlowPushNotification": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string"
          },
          "sound": {
            "type": "boolean",
            "default": false
          },
          "badge": {
            "type": "boolean",
            "default": false
          },
          "badge_options": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Increment"
              },
              {
                "$ref": "#/components/schemas/StaticCount"
              },
              {
                "$ref": "#/components/schemas/Property"
              }
            ]
          },
          "image_id": {
            "description": "The id of an ImageAsset. If provided, this will take precedence over a dynamic_image.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "dynamic_image": {
            "description": "A dynamic image asset to include in the push notification.",
            "type": "string",
            "example": "{{ event.items.0.url }}",
            "nullable": true
          },
          "on_open": {
            "description": "See PushLinkAction in app.\n\nThis is not a flow action, but the literal action that should be\ntaken when the push notification is tapped.",
            "type": "string",
            "example": "home",
            "default": "home",
            "enum": [
              "home",
              "link"
            ]
          },
          "ios_link": {
            "type": "string",
            "nullable": true
          },
          "android_link": {
            "type": "string",
            "nullable": true
          },
          "conversion_metric_id": {
            "type": "string",
            "nullable": true
          },
          "smart_sending_enabled": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "additional_filters": {
            "type": "object",
            "nullable": true,
            "properties": {
              "condition_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ProfilePropertyCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileHasGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileNoGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRegionCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePostalCodeDistanceCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsDateCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsStringCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsNumericCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileMarketingConsentCondition"
                          },
                          {
                            "$ref": "#/components/schemas/FlowsProfileMetricCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRandomSampleCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileHasNotReceivedPushMessageCondition"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "conditions"
                  ]
                }
              }
            },
            "required": [
              "condition_groups"
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "body"
        ]
      },
      "SendPushNotificationActionData": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/FlowPushNotification"
          },
          "status": {
            "description": "Flow action status.",
            "type": "string",
            "example": "draft",
            "default": "draft",
            "enum": [
              "disabled",
              "draft",
              "live",
              "manual"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "SendPushNotificationAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/SendMobilePushEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SendPushNotificationActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "SendSmsEnum": {
        "type": "string",
        "enum": [
          "send-sms"
        ]
      },
      "ProfileNotSentSmsEnum": {
        "type": "string",
        "enum": [
          "profile-not-sent-sms"
        ]
      },
      "ProfileHasNotReceivedSmsMessageCondition": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileNotSentSmsEnum"
          },
          "timeframe_filter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AlltimeDateFilter"
              },
              {
                "$ref": "#/components/schemas/InTheLastBaseRelativeDateFilter"
              }
            ]
          }
        },
        "required": [
          "type",
          "timeframe_filter"
        ]
      },
      "FlowSms": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "image_id": {
            "description": "The id of an ImageAsset. If provided, this will take precedence over a dynamic_image.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "dynamic_image": {
            "description": "A dynamic image asset to include in the SMS message.",
            "type": "string",
            "example": "{{ person|lookup:'image_url' }}",
            "nullable": true
          },
          "shorten_links": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "include_contact_card": {
            "type": "boolean",
            "default": false
          },
          "add_org_prefix": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_info_link": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_opt_out_language": {
            "type": "boolean",
            "default": false
          },
          "smart_sending_enabled": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "sms_quiet_hours_enabled": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "transactional": {
            "type": "boolean",
            "default": false
          },
          "add_tracking_params": {
            "type": "boolean",
            "default": false
          },
          "custom_tracking_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParam"
            },
            "nullable": true
          },
          "additional_filters": {
            "type": "object",
            "nullable": true,
            "properties": {
              "condition_groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ProfilePropertyCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileHasGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileNoGroupMembershipCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRegionCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePostalCodeDistanceCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsDateCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsStringCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfilePredictiveAnalyticsNumericCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileMarketingConsentCondition"
                          },
                          {
                            "$ref": "#/components/schemas/FlowsProfileMetricCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileRandomSampleCondition"
                          },
                          {
                            "$ref": "#/components/schemas/ProfileHasNotReceivedSmsMessageCondition"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "conditions"
                  ]
                }
              }
            },
            "required": [
              "condition_groups"
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "body"
        ]
      },
      "SendSmsActionData": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/FlowSms"
          },
          "status": {
            "description": "Flow action status.",
            "type": "string",
            "example": "draft",
            "default": "draft",
            "enum": [
              "disabled",
              "draft",
              "live",
              "manual"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "SendSmsAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/SendSmsEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SendSmsActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "SendWebhookEnum": {
        "type": "string",
        "enum": [
          "send-webhook"
        ]
      },
      "FlowWebhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "headers": {
            "type": "object"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "url"
        ]
      },
      "SendWebhookActionData": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/FlowWebhook"
          },
          "status": {
            "description": "Flow action status.",
            "type": "string",
            "example": "draft",
            "default": "draft",
            "enum": [
              "disabled",
              "draft",
              "live",
              "manual"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "SendWebhookAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/SendWebhookEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SendWebhookActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "SendInternalAlertEnum": {
        "type": "string",
        "enum": [
          "send-internal-alert"
        ]
      },
      "FlowInternalAlert": {
        "type": "object",
        "properties": {
          "from_email": {
            "type": "string",
            "nullable": true
          },
          "from_label": {
            "type": "string",
            "nullable": true
          },
          "to_emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject_line": {
            "type": "string",
            "nullable": true
          },
          "template_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "from_email",
          "from_label",
          "to_emails",
          "subject_line"
        ]
      },
      "SendInternalAlertActionData": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/FlowInternalAlert"
          },
          "status": {
            "description": "Flow action status.",
            "type": "string",
            "example": "draft",
            "default": "draft",
            "enum": [
              "disabled",
              "draft",
              "live",
              "manual"
            ]
          }
        },
        "required": [
          "message"
        ]
      },
      "SendInternalAlertAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/SendInternalAlertEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SendInternalAlertActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "TimeDelayEnum": {
        "type": "string",
        "enum": [
          "time-delay"
        ]
      },
      "TimeDelayActionData": {
        "type": "object",
        "properties": {
          "unit": {
            "description": "aka delay_units in app.",
            "type": "string",
            "example": "days",
            "default": "days",
            "enum": [
              "days",
              "hours",
              "minutes"
            ]
          },
          "value": {
            "type": "integer"
          },
          "secondary_value": {
            "type": "integer",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "example": "profile",
            "default": "profile",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Fort_Nelson",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Colombo",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Riyadh",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faroe",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Ulyanovsk",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zurich",
              "GMT",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Wake",
              "Pacific/Wallis",
              "US/Alaska",
              "US/Arizona",
              "US/Central",
              "US/Eastern",
              "US/Hawaii",
              "US/Mountain",
              "US/Pacific",
              "UTC",
              "profile"
            ]
          },
          "delay_until_time": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "delay_until_weekdays": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "friday",
                "monday",
                "saturday",
                "sunday",
                "thursday",
                "tuesday",
                "wednesday"
              ],
              "description": "Days of the week."
            },
            "nullable": true
          }
        },
        "required": [
          "value"
        ]
      },
      "TimeDelayAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TimeDelayEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TimeDelayActionData"
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "TriggerSplitEnum": {
        "type": "string",
        "enum": [
          "trigger-split"
        ]
      },
      "TriggerBranchActionData": {
        "type": "object",
        "properties": {
          "trigger_filter": {
            "$ref": "#/components/schemas/MetricPropertyConditionFilter",
            "nullable": true
          },
          "trigger_id": {
            "type": "string"
          },
          "trigger_type": {
            "description": "Trigger type.",
            "type": "string",
            "enum": [
              "date",
              "list",
              "low-inventory",
              "metric",
              "price-drop",
              "scheduled",
              "segment"
            ]
          },
          "trigger_subtype": {
            "description": "Date trigger type.",
            "type": "string",
            "enum": [
              "custom-object",
              "legacy-custom-object",
              "profile-property",
              "profile-trait"
            ],
            "nullable": true
          }
        },
        "required": [
          "trigger_filter",
          "trigger_id",
          "trigger_type"
        ]
      },
      "TriggerBranchAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TriggerSplitEnum"
          },
          "links": {
            "$ref": "#/components/schemas/BooleanBranchLinks",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TriggerBranchActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "UpdateProfileEnum": {
        "type": "string",
        "enum": [
          "update-profile"
        ]
      },
      "ProfileOperationUpdateOrCreateString": {
        "type": "object",
        "properties": {
          "operator": {
            "description": "The type of operation to perform on a profile property.",
            "type": "string",
            "enum": [
              "create",
              "update"
            ]
          },
          "property_type": {
            "$ref": "#/components/schemas/StringEnum"
          },
          "property_key": {
            "type": "string"
          },
          "property_value": {
            "type": "string"
          }
        },
        "required": [
          "operator",
          "property_type",
          "property_key",
          "property_value"
        ]
      },
      "ProfileOperationUpdateOrCreateBoolean": {
        "type": "object",
        "properties": {
          "operator": {
            "description": "The type of operation to perform on a profile property.",
            "type": "string",
            "enum": [
              "create",
              "update"
            ]
          },
          "property_type": {
            "$ref": "#/components/schemas/BooleanEnum"
          },
          "property_key": {
            "type": "string"
          },
          "property_value": {
            "type": "boolean"
          }
        },
        "required": [
          "operator",
          "property_type",
          "property_key",
          "property_value"
        ]
      },
      "ProfileOperationUpdateOrCreateNumeric": {
        "type": "object",
        "properties": {
          "operator": {
            "description": "The type of operation to perform on a profile property.",
            "type": "string",
            "enum": [
              "create",
              "update"
            ]
          },
          "property_type": {
            "$ref": "#/components/schemas/NumericEnum"
          },
          "property_key": {
            "type": "string"
          },
          "property_value": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "operator",
          "property_type",
          "property_key",
          "property_value"
        ]
      },
      "ProfileOperationUpdateOrCreateDate": {
        "type": "object",
        "properties": {
          "operator": {
            "description": "The type of operation to perform on a profile property.",
            "type": "string",
            "enum": [
              "create",
              "update"
            ]
          },
          "property_type": {
            "$ref": "#/components/schemas/DateEnum"
          },
          "property_key": {
            "type": "string"
          },
          "property_value": {
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "enum": [
                  "today"
                ]
              }
            ]
          }
        },
        "required": [
          "operator",
          "property_type",
          "property_key",
          "property_value"
        ]
      },
      "ProfileOperationUpdateOrCreateList": {
        "type": "object",
        "properties": {
          "operator": {
            "description": "The type of operation to perform on a profile property.",
            "type": "string",
            "enum": [
              "create",
              "update"
            ]
          },
          "property_type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "property_operation": {
            "description": "The type of operation to perform on a list property.",
            "type": "string",
            "enum": [
              "add",
              "remove"
            ],
            "nullable": true
          },
          "property_key": {
            "type": "string"
          },
          "property_value": {
            "type": "string"
          }
        },
        "required": [
          "operator",
          "property_type",
          "property_key",
          "property_value"
        ]
      },
      "ProfileOperationDelete": {
        "type": "object",
        "properties": {
          "operator": {
            "description": "The type of operation to perform on a profile property.",
            "type": "string",
            "enum": [
              "delete"
            ]
          },
          "property_key": {
            "type": "string"
          }
        },
        "required": [
          "operator",
          "property_key"
        ]
      },
      "UpdateProfileActionData": {
        "type": "object",
        "properties": {
          "profile_operations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ProfileOperationUpdateOrCreateString"
                },
                {
                  "$ref": "#/components/schemas/ProfileOperationUpdateOrCreateBoolean"
                },
                {
                  "$ref": "#/components/schemas/ProfileOperationUpdateOrCreateNumeric"
                },
                {
                  "$ref": "#/components/schemas/ProfileOperationUpdateOrCreateDate"
                },
                {
                  "$ref": "#/components/schemas/ProfileOperationUpdateOrCreateList"
                },
                {
                  "$ref": "#/components/schemas/ProfileOperationDelete"
                }
              ]
            }
          },
          "status": {
            "description": "Flow action status.",
            "type": "string",
            "example": "draft",
            "default": "draft",
            "enum": [
              "disabled",
              "draft",
              "live",
              "manual"
            ]
          }
        },
        "required": [
          "profile_operations"
        ]
      },
      "UpdateProfileAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/UpdateProfileEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "description": "The maximum allowed sum of profile strings is 100KB.",
            "$ref": "#/components/schemas/UpdateProfileActionData",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "TargetDateEnum": {
        "type": "string",
        "enum": [
          "target-date"
        ]
      },
      "TargetDateActionData": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "example": "profile",
            "default": "profile",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Fort_Nelson",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Colombo",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Riyadh",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faroe",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Ulyanovsk",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zurich",
              "GMT",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Wake",
              "Pacific/Wallis",
              "US/Alaska",
              "US/Arizona",
              "US/Central",
              "US/Eastern",
              "US/Hawaii",
              "US/Mountain",
              "US/Pacific",
              "UTC",
              "profile"
            ]
          },
          "target_time": {
            "type": "string",
            "format": "time"
          },
          "target_days": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "friday",
                "monday",
                "saturday",
                "sunday",
                "thursday",
                "tuesday",
                "wednesday"
              ],
              "description": "Days of the week."
            },
            "nullable": true
          }
        }
      },
      "TargetDateAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TargetDateEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TargetDateActionData"
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "CountdownDelayEnum": {
        "type": "string",
        "enum": [
          "countdown-delay"
        ]
      },
      "CountdownDelayActionData": {
        "type": "object",
        "properties": {
          "unit": {
            "description": "Defined as FlowDateTrigger attributes in app.",
            "type": "string",
            "example": "days",
            "default": "days",
            "enum": [
              "days",
              "months",
              "weeks"
            ]
          },
          "value": {
            "type": "integer",
            "default": 0
          },
          "timezone": {
            "type": "string",
            "example": "profile",
            "default": "profile",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Fort_Nelson",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Colombo",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Riyadh",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faroe",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Ulyanovsk",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zurich",
              "GMT",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Wake",
              "Pacific/Wallis",
              "US/Alaska",
              "US/Arizona",
              "US/Central",
              "US/Eastern",
              "US/Hawaii",
              "US/Mountain",
              "US/Pacific",
              "UTC",
              "profile"
            ]
          },
          "delay_until_time": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "delay_until_weekdays": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "friday",
                "monday",
                "saturday",
                "sunday",
                "thursday",
                "tuesday",
                "wednesday"
              ],
              "description": "Days of the week."
            },
            "nullable": true
          }
        }
      },
      "CountdownDelayAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CountdownDelayEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/CountdownDelayActionData"
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "AbTestEnum": {
        "type": "string",
        "enum": [
          "ab-test"
        ]
      },
      "AutomaticWinnerSelectionSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "automatic_end_date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00",
            "nullable": true
          },
          "automatic_end_statistical_certainty": {
            "type": "boolean"
          }
        },
        "required": [
          "enabled",
          "automatic_end_statistical_certainty"
        ]
      },
      "AbTestAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AbTestEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Flow action status.",
                "type": "string",
                "example": "draft",
                "default": "draft",
                "enum": [
                  "disabled",
                  "draft",
                  "live",
                  "manual"
                ]
              },
              "experiment_status": {
                "description": "The status of the A/B test action experiment.",
                "type": "string",
                "example": "draft",
                "default": "draft",
                "enum": [
                  "completed",
                  "draft",
                  "live"
                ]
              },
              "main_action": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SendEmailAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendSmsAction"
                  }
                ]
              },
              "current_experiment": {
                "type": "object",
                "nullable": true,
                "properties": {
                  "id": {
                    "type": "string",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "variations": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/SendEmailAction"
                        },
                        {
                          "$ref": "#/components/schemas/SendSmsAction"
                        }
                      ]
                    }
                  },
                  "allocations": {
                    "type": "object"
                  },
                  "started": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "winner_metric": {
                    "description": "The metric to use to determine the winner of the A/B test action.\n\nNote that this is different from the metrics used as a flow trigger.",
                    "type": "string",
                    "enum": [
                      "submission",
                      "unique-clicks",
                      "unique-opens",
                      "unique-placed-orders"
                    ]
                  },
                  "automatic_winner_selection_settings": {
                    "$ref": "#/components/schemas/AutomaticWinnerSelectionSettings"
                  }
                },
                "required": [
                  "variations",
                  "allocations",
                  "winner_metric",
                  "automatic_winner_selection_settings"
                ]
              }
            },
            "required": [
              "main_action"
            ]
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "InternalServiceEnum": {
        "type": "string",
        "enum": [
          "internal-service"
        ]
      },
      "InternalServiceAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/InternalServiceEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "CodeEnum": {
        "type": "string",
        "enum": [
          "code"
        ]
      },
      "CodeAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CodeEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "SplitEnum": {
        "type": "string",
        "enum": [
          "split"
        ]
      },
      "SplitLinks": {
        "type": "object",
        "properties": {
          "next": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "next"
        ]
      },
      "SplitAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/SplitEnum"
          },
          "links": {
            "$ref": "#/components/schemas/SplitLinks",
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "BranchEnum": {
        "type": "string",
        "enum": [
          "branch"
        ]
      },
      "BranchAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/BranchEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "required": [
          "type"
        ]
      },
      "ListUpdateEnum": {
        "type": "string",
        "enum": [
          "list-update"
        ]
      },
      "ListUpdateActionData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "on_execution": {
            "description": "The enum for whether the action will add/remove from the list in the\nList Update Action.",
            "type": "boolean",
            "enum": [
              false,
              true
            ],
            "nullable": true
          },
          "list_id": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "description": "Flow action status.",
            "type": "string",
            "example": "draft",
            "default": "draft",
            "enum": [
              "disabled",
              "draft",
              "live",
              "manual"
            ]
          }
        },
        "required": [
          "name",
          "on_execution",
          "list_id"
        ]
      },
      "ListUpdateAction": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The real ID of an action.",
            "type": "string",
            "example": "123",
            "nullable": true
          },
          "temporary_id": {
            "description": "A temporary ID to use only during a create operation. Existing actions should use the id field.",
            "type": "string",
            "example": "action-1",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ListUpdateEnum"
          },
          "links": {
            "$ref": "#/components/schemas/Link",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ListUpdateActionData"
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "FlowActionEncodedResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowActionEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "definition": {
                "description": "The encoded flow action definition.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BackInStockDelayAction"
                  },
                  {
                    "$ref": "#/components/schemas/ConditionalBranchAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendEmailAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendPushNotificationAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendSmsAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendWebhookAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendInternalAlertAction"
                  },
                  {
                    "$ref": "#/components/schemas/TimeDelayAction"
                  },
                  {
                    "$ref": "#/components/schemas/TriggerBranchAction"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateProfileAction"
                  },
                  {
                    "$ref": "#/components/schemas/TargetDateAction"
                  },
                  {
                    "$ref": "#/components/schemas/CountdownDelayAction"
                  },
                  {
                    "$ref": "#/components/schemas/AbTestAction"
                  },
                  {
                    "$ref": "#/components/schemas/InternalServiceAction"
                  },
                  {
                    "$ref": "#/components/schemas/CodeAction"
                  },
                  {
                    "$ref": "#/components/schemas/SplitAction"
                  },
                  {
                    "$ref": "#/components/schemas/BranchAction"
                  },
                  {
                    "$ref": "#/components/schemas/ListUpdateAction"
                  }
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowActionEncodedResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowActionEncodedResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-messages": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_label": {
            "type": "string"
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true
          },
          "cc_email": {
            "type": "string",
            "nullable": true
          },
          "bcc_email": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_label"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media_url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "body"
        ]
      },
      "MobilePushMessageContent": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "sound": {
            "type": "boolean",
            "default": false
          },
          "badge": {
            "type": "boolean",
            "default": false
          },
          "media_url": {
            "type": "string",
            "nullable": true
          },
          "dynamic_image": {
            "type": "string",
            "nullable": true
          },
          "ios_link": {
            "type": "string",
            "nullable": true
          },
          "android_link": {
            "type": "string",
            "nullable": true
          },
          "on_open": {
            "type": "string",
            "example": "home",
            "default": "home"
          }
        },
        "required": [
          "title",
          "body"
        ]
      },
      "TemplateEnum": {
        "type": "string",
        "enum": [
          "template"
        ]
      },
      "FlowMessageResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowMessageEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/MobilePushMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "flow-action": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowActionEnum"
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              },
              "template": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TemplateEnum"
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowActionEncodedResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionEncodedResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-messages": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowMessageEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowMessageEncodedResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowMessageEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "definition": {
                "description": "The encoded flow message definition.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FlowEmail"
                  },
                  {
                    "$ref": "#/components/schemas/FlowInternalAlert"
                  },
                  {
                    "$ref": "#/components/schemas/FlowPushNotification"
                  },
                  {
                    "$ref": "#/components/schemas/FlowSms"
                  },
                  {
                    "$ref": "#/components/schemas/FlowWebhook"
                  }
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowMessageEncodedResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowMessageEncodedResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-action": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "template": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string"
              },
              "editor_type": {
                "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor",
                "type": "string"
              },
              "html": {
                "description": "The rendered HTML of the template",
                "type": "string"
              },
              "text": {
                "description": "The template plain_text",
                "type": "string",
                "nullable": true
              },
              "amp": {
                "description": "The AMP version of the template. Requires AMP Email to be enabled to access in-app. Refer to the AMP Email setup guide at https://developers.klaviyo.com/en/docs/send_amp_emails_in_klaviyo",
                "type": "string",
                "nullable": true
              },
              "created": {
                "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              },
              "updated": {
                "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "nullable": true
              }
            },
            "required": [
              "name",
              "editor_type",
              "html"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowMessageEncodedResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowMessageEncodedResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-action": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowActionEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "template": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionEncodedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionEncodedResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-messages": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowMessageActionRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowActionEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "DataSourceEnum": {
        "type": "string",
        "enum": [
          "data-source"
        ]
      },
      "DataSourceResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataSourceEnum"
          },
          "id": {
            "description": "The ID of the data source",
            "type": "string",
            "example": "925e385b52fb405715f3616c337cc65c"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "description": "The title of the data source",
                "type": "string",
                "example": "My Data Source"
              },
              "visibility": {
                "description": "The status of this data source",
                "type": "string",
                "enum": [
                  "private",
                  "shared"
                ]
              },
              "description": {
                "description": "The description of the data source",
                "type": "string",
                "example": "This is a data source"
              }
            },
            "required": [
              "title",
              "visibility",
              "description"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetDataSourceResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataSourceResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetDataSourceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataSourceResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "DataSourceRecordEnum": {
        "type": "string",
        "enum": [
          "data-source-record"
        ]
      },
      "DataSourceRecordResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataSourceRecordEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "record": {
                "type": "object"
              }
            },
            "required": [
              "record"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataSourceRecordBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "data-source-record-bulk-create-job"
        ]
      },
      "DataSourceRecordBulkCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataSourceRecordBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "data-source-records": {
                "description": "The records to ingest.",
                "type": "object",
                "example": {
                  "data": [
                    {
                      "type": "data-source-record",
                      "attributes": {
                        "record": {
                          "key1": "value1",
                          "key2": "value2"
                        }
                      }
                    }
                  ]
                },
                "nullable": true,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DataSourceRecordResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "data-source": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/DataSourceEnum"
                      },
                      "id": {
                        "description": "The data source to which the records belong.",
                        "type": "string",
                        "example": "01J7C23V8XWMRG13FMD7VZN6GW"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataSourceRecordBulkCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataSourceRecordBulkCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "DataSourceCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataSourceEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "visibility": {
                "description": "Visibility of data source. Currently only PRIVATE is supported.",
                "type": "string",
                "enum": [
                  "private",
                  "shared"
                ]
              },
              "description": {
                "type": "string",
                "default": "",
                "nullable": true
              }
            },
            "required": [
              "title",
              "visibility"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataSourceCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataSourceCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostDataSourceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/DataSourceEnum"
              },
              "id": {
                "description": "The ID of the data source",
                "type": "string",
                "example": "925e385b52fb405715f3616c337cc65c"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "The title of the data source",
                    "type": "string",
                    "example": "My Data Source"
                  },
                  "visibility": {
                    "description": "The status of this data source",
                    "type": "string",
                    "enum": [
                      "private",
                      "shared"
                    ]
                  },
                  "description": {
                    "description": "The description of the data source",
                    "type": "string",
                    "example": "This is a data source"
                  }
                },
                "required": [
                  "title",
                  "visibility",
                  "description"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowActionUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowActionEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "definition": {
                "description": "The encoded flow action definition.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BackInStockDelayAction"
                  },
                  {
                    "$ref": "#/components/schemas/ConditionalBranchAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendEmailAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendPushNotificationAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendSmsAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendWebhookAction"
                  },
                  {
                    "$ref": "#/components/schemas/SendInternalAlertAction"
                  },
                  {
                    "$ref": "#/components/schemas/TimeDelayAction"
                  },
                  {
                    "$ref": "#/components/schemas/TriggerBranchAction"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateProfileAction"
                  },
                  {
                    "$ref": "#/components/schemas/TargetDateAction"
                  },
                  {
                    "$ref": "#/components/schemas/CountdownDelayAction"
                  },
                  {
                    "$ref": "#/components/schemas/AbTestAction"
                  },
                  {
                    "$ref": "#/components/schemas/InternalServiceAction"
                  },
                  {
                    "$ref": "#/components/schemas/CodeAction"
                  },
                  {
                    "$ref": "#/components/schemas/SplitAction"
                  },
                  {
                    "$ref": "#/components/schemas/BranchAction"
                  },
                  {
                    "$ref": "#/components/schemas/ListUpdateAction"
                  }
                ]
              }
            },
            "required": [
              "definition"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "FlowActionUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowActionUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchFlowActionEncodedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowActionEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00+00:00",
                    "nullable": true
                  },
                  "definition": {
                    "description": "The encoded flow action definition.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/BackInStockDelayAction"
                      },
                      {
                        "$ref": "#/components/schemas/ConditionalBranchAction"
                      },
                      {
                        "$ref": "#/components/schemas/SendEmailAction"
                      },
                      {
                        "$ref": "#/components/schemas/SendPushNotificationAction"
                      },
                      {
                        "$ref": "#/components/schemas/SendSmsAction"
                      },
                      {
                        "$ref": "#/components/schemas/SendWebhookAction"
                      },
                      {
                        "$ref": "#/components/schemas/SendInternalAlertAction"
                      },
                      {
                        "$ref": "#/components/schemas/TimeDelayAction"
                      },
                      {
                        "$ref": "#/components/schemas/TriggerBranchAction"
                      },
                      {
                        "$ref": "#/components/schemas/UpdateProfileAction"
                      },
                      {
                        "$ref": "#/components/schemas/TargetDateAction"
                      },
                      {
                        "$ref": "#/components/schemas/CountdownDelayAction"
                      },
                      {
                        "$ref": "#/components/schemas/AbTestAction"
                      },
                      {
                        "$ref": "#/components/schemas/InternalServiceAction"
                      },
                      {
                        "$ref": "#/components/schemas/CodeAction"
                      },
                      {
                        "$ref": "#/components/schemas/SplitAction"
                      },
                      {
                        "$ref": "#/components/schemas/BranchAction"
                      },
                      {
                        "$ref": "#/components/schemas/ListUpdateAction"
                      }
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flow": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/FlowEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flow-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowMessageEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "related": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self",
          "related"
        ]
      },
      "CollectionLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "first": {
            "type": "string",
            "format": "uri"
          },
          "last": {
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "type": "string",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "ObjectLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "description": "Client Error",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      },
      "ServerError": {
        "description": "Server Error",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2025-04-15.pre/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "accounts"
    },
    {
      "name": "Beta APIs",
      "description": "beta apis"
    },
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Conversations",
      "description": "conversations"
    },
    {
      "name": "Coupons",
      "description": "coupons"
    },
    {
      "name": "Data Privacy",
      "description": "data privacy"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Forms",
      "description": "forms"
    },
    {
      "name": "Images",
      "description": "images"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Reporting",
      "description": "reporting"
    },
    {
      "name": "Reviews",
      "description": "reviews"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    },
    {
      "name": "Tracking Settings",
      "description": "tracking settings"
    },
    {
      "name": "Web Feeds",
      "description": "web feeds"
    },
    {
      "name": "Webhooks",
      "description": "webhooks"
    },
    {
      "name": "Client",
      "description": "client"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}