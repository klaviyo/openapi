{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API",
    "version": "2023-01-24",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "License",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "paths": {
    "/api/catalog-items/": {
      "get": {
        "operationId": "get_catalog_items",
        "summary": "Get Catalog Items",
        "description": "Get all catalog items in an account.\nCatalog items can be sorted by the following fields, in ascending and descending order: `created`\nInclude parameters can be provided to get the following related resource data: `variants`\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_item",
        "summary": "Create Catalog Item",
        "description": "Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-items/{id}/": {
      "get": {
        "operationId": "get_catalog_item",
        "summary": "Get Catalog Item",
        "description": "Get a specific catalog item with the given item ID.\nInclude parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_catalog_item",
        "summary": "Update Catalog Item",
        "description": "Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_item",
        "summary": "Delete Catalog Item",
        "description": "Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-categories/{category_id}/items/": {
      "get": {
        "operationId": "get_catalog_category_items",
        "summary": "Get Catalog Category Items",
        "description": "Get all items in a category with the given category ID.\nItems can be sorted by the following fields, in ascending and descending order: `created`\nInclude parameters can be provided to get the following related resource data: `variants`\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "category_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variants/": {
      "get": {
        "operationId": "get_catalog_variants",
        "summary": "Get Catalog Variants",
        "description": "Get all variants in an account.\nVariants can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_variant",
        "summary": "Create Catalog Variant",
        "description": "Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variants/{id}/": {
      "get": {
        "operationId": "get_catalog_variant",
        "summary": "Get Catalog Variant",
        "description": "Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_catalog_variant",
        "summary": "Update Catalog Variant",
        "description": "Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_variant",
        "summary": "Delete Catalog Variant",
        "description": "Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-items/{item_id}/variants/": {
      "get": {
        "operationId": "get_catalog_item_variants",
        "summary": "Get Catalog Item Variants",
        "description": "Get all variants related to the given item ID.\nVariants can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "item_id",
            "required": true,
            "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-categories/": {
      "get": {
        "operationId": "get_catalog_categories",
        "summary": "Get Catalog Categories",
        "description": "Get all catalog categories in an account.\nCatalog categories can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_category",
        "summary": "Create Catalog Category",
        "description": "Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-categories/{id}/": {
      "get": {
        "operationId": "get_catalog_category",
        "summary": "Get Catalog Category",
        "description": "Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_catalog_category",
        "summary": "Update Catalog Category",
        "description": "Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_category",
        "summary": "Delete Catalog Category",
        "description": "Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming.",
            "schema": {
              "type": "string",
              "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-items/{item_id}/categories/": {
      "get": {
        "operationId": "get_catalog_item_categories",
        "summary": "Get Catalog Item Categories",
        "description": "Get all catalog categories that an item with the given item ID is in.\nCatalog categories can be sorted by the following fields, in ascending and descending order: `created`\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "item_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-item-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_items_jobs",
        "summary": "Get Create Items Jobs",
        "description": "Get all catalog item bulk create jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_create_items_job",
        "summary": "Spawn Create Items Job",
        "description": "Create a catalog item bulk create job to create a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-item-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_items_job",
        "summary": "Get Create Items Job",
        "description": "Get a catalog item bulk create job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-item-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_items_jobs",
        "summary": "Get Update Items Jobs",
        "description": "Get all catalog item bulk update jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_update_items_job",
        "summary": "Spawn Update Items Job",
        "description": "Create a catalog item bulk update job to update a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-item-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_items_job",
        "summary": "Get Update Items Job",
        "description": "Get a catalog item bulk update job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `items`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-item-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_items_jobs",
        "summary": "Get Delete Items Jobs",
        "description": "Get all catalog item bulk delete jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_delete_items_job",
        "summary": "Spawn Delete Items Job",
        "description": "Create a catalog item bulk delete job to delete a batch of catalog items.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-item-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_items_job",
        "summary": "Get Delete Items Job",
        "description": "Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variant-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_variants_jobs",
        "summary": "Get Create Variants Jobs",
        "description": "Get all catalog variant bulk create jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_create_variants_job",
        "summary": "Spawn Create Variants Job",
        "description": "Create a catalog variant bulk create job to create a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variant-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_variants_job",
        "summary": "Get Create Variants Job",
        "description": "Get a catalog variant bulk create job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variant-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_variants_jobs",
        "summary": "Get Update Variants Jobs",
        "description": "Get all catalog variant bulk update jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_update_variants_job",
        "summary": "Spawn Update Variants Job",
        "description": "Create a catalog variant bulk update job to update a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variant-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_variants_job",
        "summary": "Get Update Variants Job",
        "description": "Get a catalog variate bulk update job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variant-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_variants_jobs",
        "summary": "Get Delete Variants Jobs",
        "description": "Get all catalog variant bulk delete jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_delete_variants_job",
        "summary": "Spawn Delete Variants Job",
        "description": "Create a catalog variant bulk delete job to delete a batch of catalog variants.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variant-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_variants_job",
        "summary": "Get Delete Variants Job",
        "description": "Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-category-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_categories_jobs",
        "summary": "Get Create Categories Jobs",
        "description": "Get all catalog category bulk create jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_create_categories_job",
        "summary": "Spawn Create Categories Job",
        "description": "Create a catalog category bulk create job to create a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-category-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_categories_job",
        "summary": "Get Create Categories Job",
        "description": "Get a catalog category bulk create job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-category-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_categories_jobs",
        "summary": "Get Update Categories Jobs",
        "description": "Get all catalog category bulk update jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_update_categories_job",
        "summary": "Spawn Update Categories Job",
        "description": "Create a catalog category bulk update job to update a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-category-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_categories_job",
        "summary": "Get Update Categories Job",
        "description": "Get a catalog category bulk update job with the given job ID.\nInclude parameters can be provided to get the following related resource data: `categories`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-category-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_categories_jobs",
        "summary": "Get Delete Categories Jobs",
        "description": "Get all catalog category bulk delete jobs.\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_delete_categories_job",
        "summary": "Spawn Delete Categories Job",
        "description": "Create a catalog category bulk delete job to delete a batch of catalog categories.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-category-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_categories_job",
        "summary": "Get Delete Categories Job",
        "description": "Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "errors"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-categories/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_catalog_category_relationships",
        "summary": "Get Catalog Category Relationships",
        "description": "Get all items in the given category ID.\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "items"
              ]
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryItemListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_category_relationships",
        "summary": "Create Catalog Category Relationships",
        "description": "Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "items"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "update_catalog_category_relationships",
        "summary": "Update Catalog Category Relationships",
        "description": "Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "items"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_category_relationships",
        "summary": "Delete Catalog Category Relationships",
        "description": "Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "items"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        }
      }
    },
    "/api/catalog-items/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_catalog_item_relationships",
        "summary": "Get Catalog Item Relationships",
        "description": "Get all catalog categories that a particular item is in.\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Catalogs Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "categories"
              ]
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCategoryListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_item_relationships",
        "summary": "Create Catalog Item Relationships",
        "description": "Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "categories"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "update_catalog_item_relationships",
        "summary": "Update Catalog Item Relationships",
        "description": "Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "categories"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_item_relationships",
        "summary": "Delete Catalog Item Relationships",
        "description": "Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Catalogs Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "categories"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Catalogs Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        }
      }
    },
    "/api/data-privacy-deletion-jobs/": {
      "post": {
        "operationId": "request_profile_deletion",
        "summary": "Request Profile Deletion",
        "description": "Request a deletion for the profiles corresponding to one of the following identifiers: `email`, `phone_number`, or `profile_id`. If multiple identifiers are provided, we will return an error.\nAll profiles that match the provided identifier will be deleted.\n        The deletion occurs asynchronously; however, once it has completed, the deleted profile will appear on the [Deleted Profiles page](https://www.klaviyo.com/account/deleted).\n        For more information on the deletion process, please refer to our [Help Center docs on how to handle GDPR and CCPA deletion requests](https://help.klaviyo.com/hc/en-us/articles/360004217631-How-to-Handle-GDPR-Requests#record-gdpr-and-ccpa%20%20-deletion-requests2).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Data Privacy Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Data Privacy"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Data Privacy Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQuery"
              }
            }
          }
        }
      }
    },
    "/api/events/": {
      "get": {
        "operationId": "get_events",
        "summary": "Get Events",
        "description": "Get all events in an account\nRequests can be sorted by the following fields: `datetime`, `timestamp`\nInclude parameters can be provided to get the following related resource data: `metrics`, `profiles`\nReturns a maximum of 200 events per page.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`",
        "parameters": [
          {
            "name": "fields[event]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "metric_id",
                  "profile_id",
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "anonymous_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`metric_id`: `equals`<br>`datetime`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "metrics",
                  "profiles"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "datetime",
                "-datetime",
                "timestamp",
                "-timestamp"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Events Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_event",
        "summary": "Create Event",
        "description": "Create an event. Events are created asynchronously.\nSuccessful response indicates that the event was validated and submitted for processing, but does not guarantee that processing is complete.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Events Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQuery"
              }
            }
          },
          "description": "Event to create."
        }
      }
    },
    "/api/events/{id}/": {
      "get": {
        "operationId": "get_event",
        "summary": "Get Event",
        "description": "Get an event with the given event ID.\nInclude parameters can be provided to get the following related resource data: `metrics`, `profiles`<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Events Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "ID of the event",
            "schema": {
              "type": "string",
              "description": "ID of the event"
            },
            "in": "path"
          },
          {
            "name": "fields[event]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "metric_id",
                  "profile_id",
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "anonymous_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "metrics",
                  "profiles"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Events Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/events/{id}/metrics/": {
      "get": {
        "operationId": "get_event_metrics",
        "summary": "Get Event Metrics",
        "description": "Get the metric for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`\n`Metrics Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "ID of the event",
            "schema": {
              "type": "string",
              "description": "ID of the event"
            },
            "in": "path"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Events Read",
          "Metrics Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/events/{id}/profiles/": {
      "get": {
        "operationId": "get_event_profiles",
        "summary": "Get Event Profiles",
        "description": "Get the profile associated with an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`\n`Profiles Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "ID of the event",
            "schema": {
              "type": "string",
              "description": "ID of the event"
            },
            "in": "path"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "anonymous_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Events Read",
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/events/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_event_relationships",
        "summary": "Get Event Relationships",
        "description": "Get metrics or profile [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Read`\n`Metrics Read`\n`Profiles Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "metrics",
                "profiles"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventProfilesRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Events Read",
          "Metrics Read",
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/": {
      "get": {
        "operationId": "get_flows",
        "summary": "Get Flows",
        "description": "Get all flows in an account.\nFlows can be sorted by the following fields, in ascending and descending order: `id`, `name`, `status`, `trigger_type`, `created`, `updated`\nInclude parameters can be provided to get the following related resource data: `flow-actions`\nReturns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`status`: `equals`<br>`archived`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`trigger_type`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "status",
                "-status",
                "trigger_type",
                "-trigger_type",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{id}/": {
      "get": {
        "operationId": "get_flow",
        "summary": "Get Flow",
        "description": "Get a flow with the given flow ID.\nInclude parameters can be provided to get the following related resource data: `flow-actions`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_flow",
        "summary": "Update Flow Status",
        "description": "Update the status of a flow with the given flow ID, and all actions in that flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/flows/{flow_id}/flow-actions/": {
      "get": {
        "operationId": "get_flow_flow_actions",
        "summary": "Get Flow Actions For Flow",
        "description": "Get all flow actions associated with the given flow ID.\nFlow actions can be sorted by the following fields, in ascending and descending order: `id`,  `status`, `created`, `updated`, `action_type`\nReturns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "flow_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`action_type`: `any`, `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "action_type",
                "-action_type",
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{flow_id}/tags/": {
      "get": {
        "operationId": "get_flow_tags",
        "summary": "Get Flow Tags",
        "description": "Return all tags associated with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "flow_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{id}/": {
      "get": {
        "operationId": "get_flow_action",
        "summary": "Get Flow Action",
        "description": "Get a flow action from a flow with the given flow action ID.\nInclude parameters can be provided to get the following related resource data: `flows`, `flow-messages`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-messages",
                  "flows"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{action_id}/flow/": {
      "get": {
        "operationId": "get_flow_action_flow",
        "summary": "Get Flow For Flow Action",
        "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "action_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{action_id}/flow-messages/": {
      "get": {
        "operationId": "get_flow_action_messages",
        "summary": "Get Messages For Flow Action",
        "description": "Get all flow messages associated with the given action ID.\n\nFlow messages can be sorted by the following fields, in ascending and descending order:\n\nascending: `id`,  `name`, `created`, `updated`\ndescending: `-id`,  `-name`, `-created`, `-updated`\n\nReturns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "action_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{id}/": {
      "get": {
        "operationId": "get_flow_message",
        "summary": "Get Flow Message",
        "description": "Get the flow message of a flow with the given message ID.\nInclude parameters can be provided to get the following related resource data: 'flow-actions'<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-action"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{message_id}/flow-action/": {
      "get": {
        "operationId": "get_flow_message_action",
        "summary": "Get Flow Action For Message",
        "description": "Get the flow action for a flow message with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "message_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_flow_relationships",
        "summary": "Get Flow Relationships",
        "description": "If the `related_resource` is `tags`, returns the tag IDs of all tags associated with the given flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flow-actions",
                "tags"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_flow_action_relationships",
        "summary": "Get Flow Action Relationships",
        "description": "Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow messages associated with the given flow action ID.\n\nFlow message relationships can be sorted by the following fields, in ascending and descending order:\n\n`id`,  `name`, `created`, `updated`\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flow",
                "flow-messages"
              ]
            },
            "in": "path"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionFlowMessageRelationshipResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_flow_message_relationships",
        "summary": "Get Flow Message Relationships",
        "description": "Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message's flow action, given the flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flow-action"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageFlowActionRelationshipResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/lists/": {
      "get": {
        "operationId": "get_lists",
        "summary": "Get Lists",
        "description": "Get all lists in an account.\nFilter to request a subset of all lists. Lists can be filtered by `id`, `name`, `created`, and `updated` fields.\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Read`",
        "parameters": [
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_list",
        "summary": "Create List",
        "description": "Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/lists/{id}/": {
      "get": {
        "operationId": "get_list",
        "summary": "Get List",
        "description": "Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Write"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_list",
        "summary": "Update List",
        "description": "Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListPartialUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_list",
        "summary": "Delete List",
        "description": "Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Write"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/lists/{list_id}/tags/": {
      "get": {
        "operationId": "get_list_tags",
        "summary": "Get List Tags",
        "description": "Return all tags associated with the given list ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`List Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "list_id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "List Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/lists/{list_id}/profiles/": {
      "get": {
        "operationId": "get_list_profiles",
        "summary": "Get List Profiles",
        "description": "Get all profiles within a list with the given list ID.\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields.\nYou can adjust the number of results per page via the `page[size]` query parameter, e.g. `?page[size]=25`. **Default**: 20. **Max**: 100.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Read`\n`Profiles Read`",
        "parameters": [
          {
            "name": "list_id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "anonymous_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Read",
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/lists/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_list_relationships",
        "summary": "Get List Relationships",
        "description": "Get profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a list with the given list ID.\nYou can adjust the number of results per page via the `page[size]` query parameter, e.g. `?page[size]=25`. **Default**: 20. **Max**: 100.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Read`\n`Profiles Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "profiles",
                "tags"
              ]
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Read",
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_list_relationships",
        "summary": "Add Profile to List",
        "description": "Add a profile to a list with the given list ID.\nIt is recommended that you use the [Subscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/subscribe_profiles) if you're trying to give a profile consent to receive email marketing.\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "profiles",
                "tags"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Write",
          "Profiles Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersAddQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_list_relationships",
        "summary": "Remove Profile from List",
        "description": "Remove a profile from a list with the given list ID.\nThe provided profile will no longer receive marketing from this particular list once removed.\nRemoving a profile from a list will not impact the profile's consent status or subscription status in general. To update a profile's subscription status, please use the [Unsubscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/unsubscribe_profiles).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "profiles",
                "tags"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "List Write",
          "Profiles Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersDeleteQuery"
              }
            }
          }
        }
      }
    },
    "/api/metrics/": {
      "get": {
        "operationId": "get_metrics",
        "summary": "Get Metrics",
        "description": "Get all metrics in an account.\nRequests can be filtered by the following fields: integration `name`, integration `category`\nReturns a maximum of 200 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Metrics Read`",
        "parameters": [
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`integration.name`: `equals`<br>`integration.category`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Metrics Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/metrics/{id}/": {
      "get": {
        "operationId": "get_metric",
        "summary": "Get Metric",
        "description": "Get a metric with the given metric ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Metrics Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Metric ID",
            "schema": {
              "type": "string",
              "description": "Metric ID"
            },
            "in": "path"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Metrics Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/metric-aggregates/": {
      "post": {
        "operationId": "query_metric_aggregates",
        "summary": "Query Metric Aggregates",
        "description": "Query and aggregate event data associated with a metric, including native Klaviyo metrics, integration-specific metrics, and custom events. Queries must be passed in the JSON body of your `POST` request.\n\nResults can be filtered and grouped by time, event, or profile dimensions.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets)\n* `sort`: sort results by a specified field, such as `\"-timestamp\"`\n* `page_cursor`: results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/reference/api_overview#pagination)\n* `page_size`: limit the number of returned results per page\n* `by`: optional attributes used to group by the aggregation function\n    * When using `by` attributes, an empty `dimensions` response is expected when the counts for the events do not have the associated dimension requested by the set `by` attribute. For example, a query including `\"by\": [\"$flow\"]` will return an empty dimensions response for counts of metrics not associated with a `$flow`\n* `measurement`: the measurement key supports the following values:\n    * `\"sum_value\"`: perform a summation of the `_Event Value_`, optionally partitioned over any dimension provided in the `by` field\n    * `\"count\"`: counts the number of events associated to a metric, optionally partitioned over any dimension provided in the `by` field\n    * `\"unique\"` counts the number of unique customers associated to a metric, optionally partitioned over any dimension provided in the `by` field\n* `interval`: aggregation interval, such as `\"hour\"`,`\"day\"`,`\"week\"`, and `\"month\"`\n* `metric_id`: the metric ID used in the aggregation\n* `filter`: list of filters for specific fields, must include time range using ISO 8601 format (`\"YYYY-MM-DDTHH:MM:SS.mmmmmm\"`)\n    * The time range can be filtered by providing a `greater-or-equal` filter on the datetime field, such as `\"greater-or-equal(datetime,2021-07-01T00:00:00)\"` and a `less-than` filter on the same datetime field, such as `\"less-than(datetime,2022-07-01T00:00:00)\"`\n    * The time range may span a maximum of one year. Time range dates may be set to a maximum of 5 years prior to the current date\n    * Filter the list of supported aggregate dimensions using the common filter syntax, such as `\"equals(URL,\\\"https://www.klaviyo.com/\\\")\"`\n* `timezone`: the timezone used when processing the query. Case sensitive. This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones)\n    * While the payload accepts a timezone, the response datetimes returned will be in UTC.\n\nFor a comprehensive list of native Klaviyo metrics and their associated attributes for grouping and filtering, please refer to the [metrics attributes guide](https://developers.klaviyo.com/en/docs/supported_metrics_and_attributes).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Metrics Read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostMetricAggregateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Metrics Read"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricAggregateQuery"
              }
            }
          },
          "description": "Retrieve Metric Aggregations"
        }
      }
    },
    "/api/profiles/": {
      "get": {
        "operationId": "get_profiles",
        "summary": "Get Profiles",
        "description": "Get all profiles in an account.\nProfiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `email`\nYou can adjust the number of results per page via the `page[size]` query parameter, e.g. `?page[size]=25`. **Default**: 20. **Max**: 100.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Profiles Read`",
        "parameters": [
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "anonymous_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`external_id`: `any`, `equals`<br>`anonymous_id`: `any`, `equals`<br>`_kx`: `equals`<br>`created`: `greater-than`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "email",
                "-email",
                "id",
                "-id"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_profile",
        "summary": "Create Profile",
        "description": "Create a new profile.\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account, you'll need to include at least one other identifier attribute (`email` or `external_id`) in addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Profiles Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/profiles/{id}/": {
      "get": {
        "operationId": "get_profile",
        "summary": "Get Profile",
        "description": "Get the profile with the given profile ID.\nInclude parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships\"<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Profiles Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "anonymous_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists",
                  "segments"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_profile",
        "summary": "Update Profile",
        "description": "Update the profile with the given profile ID.\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account, you'll need to include at least one other identifier attribute (`email` or `external_id`) in addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Profiles Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilePartialUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/profiles/{profile_id}/lists/": {
      "get": {
        "operationId": "get_profile_lists",
        "summary": "Get Profile Lists",
        "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`List Read`\n`Profiles Read`",
        "parameters": [
          {
            "name": "profile_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "List Read",
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/profiles/{profile_id}/segments/": {
      "get": {
        "operationId": "get_profile_segments",
        "summary": "Get Profile Segments",
        "description": "Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Profiles Read`\n`Segments Read`",
        "parameters": [
          {
            "name": "profile_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Read",
          "Segments Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/profile-suppression-bulk-create-jobs/": {
      "post": {
        "operationId": "suppress_profiles",
        "summary": "Suppress Profiles",
        "description": "Manually suppress one or more profiles. Manually suppressed profiles will not receive email marketing.\nNot supported for SMS marketing.\nMaximum number of profile can be submitted for suppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Profiles Write`\n`Subscriptions Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Write",
          "Subscriptions Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuppressionCreateJobCreateQuery"
              }
            }
          },
          "description": "Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed."
        }
      }
    },
    "/api/profile-unsuppression-bulk-create-jobs/": {
      "post": {
        "operationId": "unsuppress_profiles",
        "summary": "Unsuppress Profiles",
        "description": "Unsuppress one or more profiles. Unsuppressed profiles will receive email marketing.\nNot supported for SMS marketing. Profiles suppressed due to a hard bounced email will not be unsuppressed.\nMaximum number of profile can be submitted for unsuppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`Subscriptions Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "Subscriptions Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQuery"
              }
            }
          },
          "description": "Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, no action will be taken."
        }
      }
    },
    "/api/profile-subscription-bulk-create-jobs/": {
      "post": {
        "operationId": "subscribe_profiles",
        "summary": "Subscribe Profiles",
        "description": "Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message.\nTo add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/reference/create_list_relationships).\nMaximum number of profile can be submitted for subscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`\n`Subscriptions Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "List Write",
          "Profiles Write",
          "Subscriptions Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateJobCreateQuery"
              }
            }
          },
          "description": "Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels. If a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed."
        }
      }
    },
    "/api/profile-unsubscription-bulk-create-jobs/": {
      "post": {
        "operationId": "unsubscribe_profiles",
        "summary": "Unsubscribe Profiles",
        "description": "Unsubscribe one or more profiles to email marketing, SMS marketing, or both.\nTo remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/reference/delete_list_relationships).\nMaximum number of profile can be submitted for unsubscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`List Write`\n`Profiles Write`\n`Subscriptions Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "List Write",
          "Profiles Write",
          "Subscriptions Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQuery"
              }
            }
          },
          "description": "Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list. Either email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed."
        }
      }
    },
    "/api/profiles/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_profile_relationships",
        "summary": "Get Profile Relationships",
        "description": "Get list membership or segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Lists Read`\n`Profiles Read`\n`Segments Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "lists",
                "segments"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Lists Read",
          "Profiles Read",
          "Segments Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/": {
      "get": {
        "operationId": "get_segments",
        "summary": "Get Segments",
        "description": "Get all segments in an account.\nFilter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields.\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Segments Read`",
        "parameters": [
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Segments Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/{id}/": {
      "get": {
        "operationId": "get_segment",
        "summary": "Get Segment",
        "description": "Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Segments Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Segments Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_segment",
        "summary": "Update Segment",
        "description": "Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Segments Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchSegmentResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Segments Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentPartialUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/segments/{segment_id}/tags/": {
      "get": {
        "operationId": "get_segment_tags",
        "summary": "Get Segment Tags",
        "description": "Return all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Segments Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "segment_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Segments Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/{segment_id}/profiles/": {
      "get": {
        "operationId": "get_segment_profiles",
        "summary": "Get Segment Profiles",
        "description": "Get all profiles within the given segment ID.\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields.\nYou can adjust the number of results per page via the `page[size]` query parameter, e.g. `?page[size]=25`. **Default**: 20. **Max**: 100.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Profiles Read`\n`Segments Read`",
        "parameters": [
          {
            "name": "segment_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "anonymous_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Read",
          "Segments Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_segment_relationships",
        "summary": "Get Segment Relationships",
        "description": "Get all profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for the given segment ID.\nYou can adjust the number of results per page via the `page[size]` query parameter, e.g. `?page[size]=25`. **Default**: 20. **Max**: 100.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Profiles Read`\n`Segments Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "profiles",
                "tags"
              ]
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Read",
          "Segments Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tags/": {
      "get": {
        "operationId": "get_tags",
        "summary": "Get Tags",
        "description": "List all tags in an account.\nTags can be filtered by `name`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 50 tags per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag",
        "summary": "Create Tag",
        "description": "Create a tag. An account cannot have more than **500** unique tags.\nA tag belongs to a single tag group. If the `tag_group_id` is not specified, the tag is added to the account's default tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}/": {
      "get": {
        "operationId": "get_tag",
        "summary": "Get Tag",
        "description": "Retrieve the tag with the given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_tag",
        "summary": "Update Tag",
        "description": "Update the tag with the given tag ID.\nOnly a tag's `name` can be changed. A tag cannot be moved from one tag group to another.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag",
        "summary": "Delete Tag",
        "description": "Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tag-groups/": {
      "get": {
        "operationId": "get_tag_groups",
        "summary": "Get Tag Groups",
        "description": "List all tag groups in an account. Every account has one default tag group.\nTag groups can be filtered by `name`, `exclusive`, and `default`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 25 tag groups per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`exclusive`: `equals`<br>`default`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag_group",
        "summary": "Create Tag Group",
        "description": "Create a tag group. An account cannot have more than **50** unique tag groups.\nIf `exclusive` is not specified `true` or `false`, the tag group defaults to non-exclusive.\nIf a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/tag-groups/{id}/": {
      "get": {
        "operationId": "get_tag_group",
        "summary": "Get Tag Group",
        "description": "Retrieve the tag group with the given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_tag_group",
        "summary": "Update Tag Group",
        "description": "Update the tag group with the given tag group ID.\nOnly a tag group's `name` can be changed. A tag group's `exclusive` or `default` value cannot be changed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_group",
        "summary": "Delete Tag Group",
        "description": "Delete the tag group with the given tag group ID.\nAny tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tags/{id}/tag-group/": {
      "get": {
        "operationId": "get_tag_tag_group",
        "summary": "Get Tag Tag Group",
        "description": "Returns the tag group resource for a given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tag-groups/{id}/tags/": {
      "get": {
        "operationId": "get_tag_group_tags",
        "summary": "Get Tag Group Tags",
        "description": "Return the tags for a given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tags/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_tag_relationships",
        "summary": "Get Tag Relationships",
        "description": "Get the relationships for a tag.\nIf `related_resource` is `tag-group`, the request will return the `tag_group_id` of the tag group to which the tag belongs.\nIf `related_resource` is set to `campaigns`, `flows`, `lists`, or `segments`, the request will return the IDs of all associated resources of that type.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`\n`Lists Read`\n`Segments Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flows",
                "lists",
                "segments",
                "tag-groups"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagTagGroupRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read",
          "Lists Read",
          "Segments Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag_relationships",
        "summary": "Create Tag Relationships",
        "description": "Associate a tag with other resources. Any given resource cannot be associated with more than **100** tags.\nThe `related_resource` can be one of `campaigns`, `flows`, `lists`, or `segments`.\nUse the request body to pass in the ID(s) of the related resource(s) that will be associated with the tag.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`\n`Lists Write`\n`Segments Write`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flows",
                "lists",
                "segments",
                "tag-groups"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Write",
          "Lists Write",
          "Segments Write",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_relationships",
        "summary": "Delete Tag Relationships",
        "description": "Remove a tag's association with other resources.\nThe `related_resource` can be one of `campaigns`, `flows`, `lists`, or `segments`.\nUse the request body to pass in the ID(s) of the related resource(s) whose association with the tag will be removed.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`\n`Lists Write`\n`Segments Write`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flows",
                "lists",
                "segments",
                "tag-groups"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Write",
          "Lists Write",
          "Segments Write",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        }
      }
    },
    "/api/tag-groups/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_tag_group_relationships",
        "summary": "Get Tag Group Relationships",
        "description": "When `related_resource` is `tags`, returns the tag IDs of all tags inside the given tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "tags"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupTagRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/templates/": {
      "get": {
        "operationId": "get_templates",
        "summary": "Get Templates",
        "description": "Get all templates in an account.\nFilter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated`\nReturns a maximum of 20 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Read`",
        "parameters": [
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "company_id",
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Templates Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_template",
        "summary": "Create Template",
        "description": "Create a new custom HTML template.\nIf there are 1,000 or more templates in an account, creation will fail as there is a limit of 1,000 templates that can be created via the API.\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Templates Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/templates/{id}/": {
      "get": {
        "operationId": "get_template",
        "summary": "Get Template",
        "description": "Get a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of template",
            "schema": {
              "type": "string",
              "description": "The ID of template"
            },
            "in": "path"
          },
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "company_id",
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Templates Read"
        ],
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_template",
        "summary": "Update Template",
        "description": "Update a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of template",
            "schema": {
              "type": "string",
              "description": "The ID of template"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Templates Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_template",
        "summary": "Delete Template",
        "description": "Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of template",
            "schema": {
              "type": "string",
              "description": "The ID of template"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Templates Write"
        ],
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/template-render/": {
      "post": {
        "operationId": "create_template_render",
        "summary": "Create Template Render",
        "description": "Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).\n* `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.\n\nEmail templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.\n\nEx. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Templates Read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Templates Read"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRenderQuery"
              }
            }
          }
        }
      }
    },
    "/api/template-clone/": {
      "post": {
        "operationId": "create_template_clone",
        "summary": "Create Template Clone",
        "description": "Create a clone of a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Templates Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Templates Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCloneQuery"
              }
            }
          }
        }
      }
    },
    "/client/subscriptions/": {
      "post": {
        "operationId": "create_client_subscription",
        "summary": "Create Client Subscription",
        "description": "Create a new subscription for the given list ID and channel:\n\n* Email `email`\n* SMS `phone_number`\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/profile-subscription-bulk-create-jobs](https://developers.klaviyo.com/en/reference/subscribe_profiles)<br><br>*Rate limits*:<br>Burst: `100/s`<br>Steady: `100/m`\n\n**Scopes:**\n`Subscriptions Write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your company ID.",
            "schema": {
              "type": "string",
              "example": "COMPANY_ID",
              "description": "Your company ID."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "100/s",
          "steady": "100/m"
        },
        "x-klaviyo-scopes": [
          "Subscriptions Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteSubscriptionCreateQuery"
              }
            }
          },
          "description": "Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object."
        }
      }
    },
    "/client/events/": {
      "post": {
        "operationId": "create_client_event",
        "summary": "Create Client Event",
        "description": "Create a new event to track a profile's activity.\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create events from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Events Write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "ID of the Company to create event",
            "schema": {
              "type": "string",
              "example": "YOUR_COMPANY_ID",
              "description": "ID of the Company to create event"
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Events Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQuery"
              }
            }
          },
          "description": "Event to create."
        }
      }
    },
    "/client/profiles/": {
      "post": {
        "operationId": "create_client_profile",
        "summary": "Create or Update Client Profile",
        "description": "Create and update properties about a profile without tracking an associated event.\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`Profiles Write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-01-24"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Write"
        ],
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteProfileCreateQuery"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetCatalogItemResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedVariants"
            }
          }
        }
      },
      "GetCatalogItemResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "url": {
                    "type": "string"
                  },
                  "image_full_url": {
                    "type": "string"
                  },
                  "image_thumbnail_url": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "custom_metadata": {
                    "type": "object"
                  },
                  "published": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-variant"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedVariants"
            }
          }
        }
      },
      "GetCatalogVariantResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "inventory_policy": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                    },
                    "inventory_quantity": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "image_full_url": {
                      "type": "string"
                    },
                    "image_thumbnail_url": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "custom_metadata": {
                      "type": "object"
                    },
                    "published": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetCatalogVariantResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "inventory_policy": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                  },
                  "inventory_quantity": {
                    "type": "number"
                  },
                  "price": {
                    "type": "number"
                  },
                  "url": {
                    "type": "string"
                  },
                  "image_full_url": {
                    "type": "string"
                  },
                  "image_thumbnail_url": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "custom_metadata": {
                    "type": "object"
                  },
                  "published": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetCatalogCategoryResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "external_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetCatalogCategoryResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category"
                ]
              },
              "id": {
                "type": "string",
                "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetCatalogCategoryItemListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetCatalogItemCategoryListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetEventResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "event"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "The Event ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "metric_id": {
                      "type": "string",
                      "description": "The Metric ID"
                    },
                    "profile_id": {
                      "type": "string",
                      "description": "Profile ID of the associated profile, if available"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "Event timestamp in seconds"
                    },
                    "event_properties": {
                      "type": "object",
                      "description": "Event properties, can include attribution data, identifiers and extra properties"
                    },
                    "datetime": {
                      "type": "string",
                      "description": "Event timestamp in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "uuid": {
                      "type": "string",
                      "description": "A unique identifier for the event, this can be used as a cursor in pagination"
                    }
                  },
                  "required": [
                    "metric_id"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "metrics": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "metric"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "profiles": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "profile"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IncludedMetrics"
                },
                {
                  "$ref": "#/components/schemas/IncludedProfiles"
                }
              ]
            }
          }
        }
      },
      "GetEventResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "event"
                ]
              },
              "id": {
                "type": "string",
                "description": "The Event ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "metric_id": {
                    "type": "string",
                    "description": "The Metric ID"
                  },
                  "profile_id": {
                    "type": "string",
                    "description": "Profile ID of the associated profile, if available"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "Event timestamp in seconds"
                  },
                  "event_properties": {
                    "type": "object",
                    "description": "Event properties, can include attribution data, identifiers and extra properties"
                  },
                  "datetime": {
                    "type": "string",
                    "description": "Event timestamp in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "uuid": {
                    "type": "string",
                    "description": "A unique identifier for the event, this can be used as a cursor in pagination"
                  }
                },
                "required": [
                  "metric_id"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "metrics": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "metric"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "profiles": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "profile"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IncludedMetrics"
                },
                {
                  "$ref": "#/components/schemas/IncludedProfiles"
                }
              ]
            }
          }
        }
      },
      "GetMetricResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "metric"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "The Metric ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the metric"
                    },
                    "created": {
                      "type": "string",
                      "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "integration": {
                      "type": "object",
                      "description": "The integration associated with the event"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "ProfileLocation": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "example": "89 E 42nd St",
            "description": "First line of street address"
          },
          "address2": {
            "type": "string",
            "example": "1st floor",
            "description": "Second line of street address"
          },
          "city": {
            "type": "string",
            "example": "New York",
            "description": "City name"
          },
          "country": {
            "type": "string",
            "example": "United States",
            "description": "Country name"
          },
          "latitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "40.7128",
            "description": "Latitude coordinate. We recommend providing a precision of four decimal places."
          },
          "longitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "74.0060",
            "description": "Longitude coordinate. We recommend providing a precision of four decimal places."
          },
          "region": {
            "type": "string",
            "example": "NY",
            "description": "Region within a country, such as state or province"
          },
          "zip": {
            "type": "string",
            "example": "10017",
            "description": "Zip code"
          },
          "timezone": {
            "type": "string",
            "example": "America/New_York",
            "description": "Time zone name. We recommend using time zones from the IANA Time Zone Database."
          }
        }
      },
      "GetProfileResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "sarah.mason@klaviyo-demo.com",
                      "description": "Individual's email address"
                    },
                    "phone_number": {
                      "type": "string",
                      "example": "+15005550006",
                      "description": "Individual's phone number in E.164 format"
                    },
                    "external_id": {
                      "type": "string",
                      "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                      "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
                    },
                    "anonymous_id": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "Sarah",
                      "description": "Individual's first name"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Mason",
                      "description": "Individual's last name"
                    },
                    "organization": {
                      "type": "string",
                      "example": "Klaviyo",
                      "description": "Name of the company or organization within the company for whom the individual works"
                    },
                    "title": {
                      "type": "string",
                      "example": "Engineer",
                      "description": "Individual's job title"
                    },
                    "image": {
                      "type": "string",
                      "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                      "description": "URL pointing to the location of a profile image"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "last_event_date": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "location": {
                      "$ref": "#/components/schemas/ProfileLocation"
                    },
                    "properties": {
                      "type": "object",
                      "example": {
                        "pseudonym": "Dr. Octopus"
                      },
                      "description": "An object containing key/value pairs for any custom properties assigned to this profile"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetEventProfilesRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetMetricResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "metric"
                ]
              },
              "id": {
                "type": "string",
                "description": "The Metric ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric"
                  },
                  "created": {
                    "type": "string",
                    "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "integration": {
                    "type": "object",
                    "description": "The integration associated with the event"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetListResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "list"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "Y6nRLr",
                  "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Newsletter",
                      "description": "A helpful name to label the list"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetListResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "list"
                ]
              },
              "id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Newsletter",
                    "description": "A helpful name to label the list"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetListTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetListRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetSegmentResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "segment"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Repeat Purchasers",
                      "description": "A helpful name to label the segment "
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetSegmentResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "segment"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Repeat Purchasers",
                    "description": "A helpful name to label the segment "
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetSegmentTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetSegmentRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetProfileResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "sarah.mason@klaviyo-demo.com",
                      "description": "Individual's email address"
                    },
                    "phone_number": {
                      "type": "string",
                      "example": "+15005550006",
                      "description": "Individual's phone number in E.164 format"
                    },
                    "external_id": {
                      "type": "string",
                      "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                      "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
                    },
                    "anonymous_id": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "Sarah",
                      "description": "Individual's first name"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Mason",
                      "description": "Individual's last name"
                    },
                    "organization": {
                      "type": "string",
                      "example": "Klaviyo",
                      "description": "Name of the company or organization within the company for whom the individual works"
                    },
                    "title": {
                      "type": "string",
                      "example": "Engineer",
                      "description": "Individual's job title"
                    },
                    "image": {
                      "type": "string",
                      "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                      "description": "URL pointing to the location of a profile image"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "last_event_date": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "location": {
                      "$ref": "#/components/schemas/ProfileLocation"
                    },
                    "properties": {
                      "type": "object",
                      "example": {
                        "pseudonym": "Dr. Octopus"
                      },
                      "description": "An object containing key/value pairs for any custom properties assigned to this profile"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "lists": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "list"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "segments": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "segment"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IncludedLists"
                },
                {
                  "$ref": "#/components/schemas/IncludedSegments"
                }
              ]
            }
          }
        }
      },
      "GetProfileResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "profile"
                ]
              },
              "id": {
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com",
                    "description": "Individual's email address"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "+15005550006",
                    "description": "Individual's phone number in E.164 format"
                  },
                  "external_id": {
                    "type": "string",
                    "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                    "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
                  },
                  "anonymous_id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Sarah",
                    "description": "Individual's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Mason",
                    "description": "Individual's last name"
                  },
                  "organization": {
                    "type": "string",
                    "example": "Klaviyo",
                    "description": "Name of the company or organization within the company for whom the individual works"
                  },
                  "title": {
                    "type": "string",
                    "example": "Engineer",
                    "description": "Individual's job title"
                  },
                  "image": {
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                    "description": "URL pointing to the location of a profile image"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "last_event_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation"
                  },
                  "properties": {
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    },
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "list"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "segment"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IncludedLists"
                },
                {
                  "$ref": "#/components/schemas/IncludedSegments"
                }
              ]
            }
          }
        }
      },
      "GetListResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "list"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "Y6nRLr",
                  "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Newsletter",
                      "description": "A helpful name to label the list"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetSegmentResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "segment"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Repeat Purchasers",
                      "description": "A helpful name to label the segment "
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetProfileSegmentRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "segment"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetFlowResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "trigger_type": {
                      "type": "string"
                    }
                  }
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "flow-actions": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "flow-action"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedFlowActions"
            }
          }
        }
      },
      "GetFlowResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "trigger_type": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flow-actions": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "flow-action"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedFlowActions"
            }
          }
        }
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "SMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "GetFlowActionResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow-action"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "settings": {
                      "type": "object"
                    },
                    "tracking_options": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/EmailTrackingOptions"
                        },
                        {
                          "$ref": "#/components/schemas/SMSTrackingOptions"
                        }
                      ]
                    },
                    "send_options": {
                      "$ref": "#/components/schemas/SendOptions"
                    },
                    "render_options": {
                      "$ref": "#/components/schemas/SMSRenderOptions"
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetFlowTagRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetFlowTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetFlowActionResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow-action"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "action_type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "settings": {
                    "type": "object"
                  },
                  "tracking_options": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptions"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptions"
                      }
                    ]
                  },
                  "send_options": {
                    "$ref": "#/components/schemas/SendOptions"
                  },
                  "render_options": {
                    "$ref": "#/components/schemas/SMSRenderOptions"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flow-messages": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "flow-message"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "flows": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "flow"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IncludedFlowMessages"
                },
                {
                  "$ref": "#/components/schemas/IncludedFlows"
                }
              ]
            }
          }
        }
      },
      "GetFlowResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "trigger_type": {
                    "type": "string"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_name": {
            "type": "string"
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_name"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media": {
            "type": "string"
          }
        },
        "required": [
          "body",
          "media"
        ]
      },
      "GetFlowMessageResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "flow-message"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "channel": {
                      "type": "string"
                    },
                    "content": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/EmailMessageContent"
                        },
                        {
                          "$ref": "#/components/schemas/SMSMessageContent"
                        }
                      ]
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    }
                  },
                  "required": [
                    "name",
                    "channel",
                    "content"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetFlowActionFlowMessageRelationshipResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow-message"
                ]
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetFlowMessageResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow-message"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "channel": {
                    "type": "string"
                  },
                  "content": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailMessageContent"
                      },
                      {
                        "$ref": "#/components/schemas/SMSMessageContent"
                      }
                    ]
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "name",
                  "channel",
                  "content"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flow-action": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "flow-action"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedFlowAction"
            }
          }
        }
      },
      "GetFlowActionResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow-action"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "action_type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "settings": {
                    "type": "object"
                  },
                  "tracking_options": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptions"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptions"
                      }
                    ]
                  },
                  "send_options": {
                    "$ref": "#/components/schemas/SendOptions"
                  },
                  "render_options": {
                    "$ref": "#/components/schemas/SMSRenderOptions"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetFlowMessageFlowActionRelationshipResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow-action"
                ]
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "AudiencesSubObject": {
        "type": "object",
        "properties": {
          "included": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Y6nRLr"
            ],
            "description": "A list of included audiences"
          },
          "excluded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "UTd5ui"
            ],
            "description": "An optional list of excluded audiences"
          }
        }
      },
      "SendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean",
            "description": "Use smart sending. Defaults to True"
          },
          "ignore_unsubscribes": {
            "type": "boolean",
            "description": "Ignore unsubscribes. Defaults to False"
          }
        }
      },
      "UTMParamsSubObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "utm_medium",
            "description": "Name of the UTM param"
          },
          "value": {
            "type": "string",
            "example": "campaign",
            "description": "Value of the UTM param. Can be templated data."
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "TrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_tracking_opens": {
            "type": "boolean",
            "description": "Whether the campaign is tracking open events. If not specified, uses company defaults."
          },
          "is_tracking_clicks": {
            "type": "boolean",
            "description": "Whether the campaign is tracking click events. If not specified, uses company defaults."
          },
          "is_add_utm": {
            "type": "boolean",
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used."
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            },
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults."
          }
        }
      },
      "StaticScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-12-15T12:00:00",
            "description": "The time to send at"
          },
          "is_local": {
            "type": "boolean",
            "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False."
          },
          "send_past_recipients_immediately": {
            "type": "boolean",
            "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False."
          }
        },
        "required": [
          "datetime"
        ]
      },
      "ThrottledScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The time to send at"
          },
          "throttle_percentage": {
            "type": "integer",
            "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]"
          }
        },
        "required": [
          "datetime",
          "throttle_percentage"
        ]
      },
      "STOScheduleOptions": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The day to send on"
          }
        },
        "required": [
          "date"
        ]
      },
      "SendStrategySubObject": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "example": "static",
            "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate', 'smart_send_time']"
          },
          "options_static": {
            "$ref": "#/components/schemas/StaticScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method."
          },
          "options_throttled": {
            "$ref": "#/components/schemas/ThrottledScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method."
          },
          "options_sto": {
            "$ref": "#/components/schemas/STOScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'smart_send_time' method."
          }
        },
        "required": [
          "method"
        ]
      },
      "ContentSubObject": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Buy our product!",
            "description": "The subject of the message"
          },
          "preview_text": {
            "type": "string",
            "example": "My preview text",
            "description": "Preview text associated with the message"
          },
          "from_email": {
            "type": "string",
            "example": "store@my-company.com",
            "description": "The email the message should be sent from"
          },
          "from_label": {
            "type": "string",
            "example": "My Company",
            "description": "The label associated with the from_email"
          },
          "template_id": {
            "type": "string",
            "example": "RipRmi",
            "description": "The ID of the template associated to the message"
          },
          "template_name": {
            "type": "string",
            "example": "My email template",
            "description": "The name of the template associated to the message"
          }
        }
      },
      "SendTimeSubObject": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The datetime that the message is to be sent"
          },
          "is_local": {
            "type": "boolean",
            "description": "Whether that datetime is to be a local datetime for the recipient"
          }
        },
        "required": [
          "datetime",
          "is_local"
        ]
      },
      "GetTemplateResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "template"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "The ID of template"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "type": "string",
                      "example": "COMPANY_ID",
                      "description": "The ID of the company the template belongs to"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the template"
                    },
                    "editor_type": {
                      "type": "string",
                      "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n"
                    },
                    "html": {
                      "type": "string",
                      "description": "The rendered HTML of the template"
                    },
                    "text": {
                      "type": "string",
                      "description": "The template plain_text"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00",
                      "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                    }
                  },
                  "required": [
                    "company_id",
                    "name",
                    "editor_type",
                    "html"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetTemplateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "template"
                ]
              },
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "string",
                    "example": "COMPANY_ID",
                    "description": "The ID of the company the template belongs to"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the template"
                  },
                  "editor_type": {
                    "type": "string",
                    "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n"
                  },
                  "html": {
                    "type": "string",
                    "description": "The rendered HTML of the template"
                  },
                  "text": {
                    "type": "string",
                    "description": "The template plain_text"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "company_id",
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "example": "/data",
            "default": "/data"
          }
        },
        "required": [
          "pointer"
        ]
      },
      "CatalogJobErrorPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "detail",
          "source"
        ]
      },
      "GetCatalogItemCreateJobResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedItems"
            }
          }
        }
      },
      "GetCatalogItemCreateJobResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item-bulk-create-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-item"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedItems"
            }
          }
        }
      },
      "GetCatalogItemUpdateJobResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedItems"
            }
          }
        }
      },
      "GetCatalogItemUpdateJobResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item-bulk-update-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-item"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedItems"
            }
          }
        }
      },
      "GetCatalogItemDeleteJobResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-item"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetCatalogItemDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item-bulk-delete-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-item"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetCatalogVariantCreateJobResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedVariants"
            }
          }
        }
      },
      "GetCatalogVariantCreateJobResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant-bulk-create-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-variant"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedVariants"
            }
          }
        }
      },
      "GetCatalogVariantUpdateJobResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedVariants"
            }
          }
        }
      },
      "GetCatalogVariantUpdateJobResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant-bulk-update-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-variant"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedVariants"
            }
          }
        }
      },
      "GetCatalogVariantDeleteJobResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-variant-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "variants": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-variant"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetCatalogVariantDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant-bulk-delete-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-variant"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetCatalogCategoryCreateJobResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-create-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedCategories"
            }
          }
        }
      },
      "GetCatalogCategoryCreateJobResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category-bulk-create-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-category"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedCategories"
            }
          }
        }
      },
      "GetCatalogCategoryUpdateJobResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-update-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedCategories"
            }
          }
        }
      },
      "GetCatalogCategoryUpdateJobResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category-bulk-update-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-category"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedCategories"
            }
          }
        }
      },
      "GetCatalogCategoryDeleteJobResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category-bulk-delete-job"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "cancelled",
                        "complete",
                        "processing",
                        "queued"
                      ],
                      "description": "The valid top level statuses for an asynchronous query"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "completed_count": {
                      "type": "integer"
                    },
                    "failed_count": {
                      "type": "integer"
                    },
                    "completed_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-11-08T00:00:00"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogJobErrorPayload"
                      }
                    }
                  },
                  "required": [
                    "job_id",
                    "status",
                    "created_at",
                    "total_count"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "catalog-category"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category-bulk-delete-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-category"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetTagGroupResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                  "description": "The Tag Group ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag Group",
                      "description": "The Tag Group name"
                    },
                    "exclusive": {
                      "type": "boolean",
                      "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                    },
                    "default": {
                      "type": "boolean",
                      "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetTagTagGroupRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetTagGroupTagRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CatalogItemCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
              },
              "title": {
                "type": "string"
              },
              "price": {
                "type": "number",
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)"
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default"
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-category"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogItemResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "url": {
                    "type": "string"
                  },
                  "image_full_url": {
                    "type": "string"
                  },
                  "image_thumbnail_url": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "custom_metadata": {
                    "type": "object"
                  },
                  "published": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogVariantCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default"
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
              },
              "inventory_quantity": {
                "type": "number"
              },
              "price": {
                "type": "number",
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "sku",
              "inventory_policy",
              "inventory_quantity",
              "price",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogVariantCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogVariantResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "inventory_policy": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                  },
                  "inventory_quantity": {
                    "type": "number"
                  },
                  "price": {
                    "type": "number"
                  },
                  "url": {
                    "type": "string"
                  },
                  "image_full_url": {
                    "type": "string"
                  },
                  "image_thumbnail_url": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "custom_metadata": {
                    "type": "object"
                  },
                  "published": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogCategoryCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default"
              }
            },
            "required": [
              "external_id",
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogCategoryResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category"
                ]
              },
              "id": {
                "type": "string",
                "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogCategoryItemOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-item"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CatalogItemCategoryOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "catalog-category"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "_MetricCreateQuery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Viewed Product",
            "description": "Name of the event. Must be less than 128 characters."
          },
          "service": {
            "type": "string",
            "description": "This is for advanced usage. For api requests, this should use the default, which is set to api."
          }
        },
        "required": [
          "name"
        ]
      },
      "EventCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "event"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "example": {
                  "$email": "matt.kemp@klaviyo-demo.com"
                },
                "description": "\nProperties of the profile that triggered this event. The profile must contain an\nidentifier. The $email and/or $phone_number can be used as the identify the profile.\nOther key value pairs can be used to create segments. For example, to create a list of\npeople on trial plans, include a profile's plan type in the profile. The profile\nsupports special fields. The fields include: $email (string), $first_name (string),\n$last_name (string), $phone_number (string), $city (string), $region (string; state or\nother region), $country (string), $zip (string), $image (string; url to a photo of a\nperson), and $consent (list of strings; eg: ['sms', 'email', 'web', 'directmail',\n'mobile']).\n"
              },
              "metric": {
                "$ref": "#/components/schemas/_MetricCreateQuery",
                "example": {
                  "name": "Viewed Product"
                },
                "description": "The associated metric for the event. An account can have up to 200 unique metrics."
              },
              "properties": {
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                },
                "description": "\n Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be references later. For example, HTML templates are\nuseful on a segment, but itself is not used in creating a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.\n"
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "\nWhen this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.\n"
              },
              "value": {
                "type": "number",
                "example": 9.99,
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase."
              },
              "unique_id": {
                "type": "string",
                "description": "\nA unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.\n"
              }
            },
            "required": [
              "profile",
              "metric",
              "properties"
            ]
          }
        }
      },
      "EventCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryAsSubResource"
          }
        }
      },
      "MetricAggregateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "metric-aggregate"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "type": "string",
                "example": "0rG4eQ",
                "description": "The metric ID used in the aggregation."
              },
              "page_cursor": {
                "type": "string",
                "description": "Optional pagination cursor to iterate over large result sets"
              },
              "measurements": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "count",
                    "sum_value",
                    "unique"
                  ],
                  "description": "Supported measurements for aggregation"
                },
                "example": "count",
                "description": "Measurement key, e.g. `unique`, `sum_value`, `count`"
              },
              "interval": {
                "type": "string",
                "enum": [
                  "day",
                  "hour",
                  "month",
                  "week"
                ],
                "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                "example": "day"
              },
              "page_size": {
                "type": "integer",
                "example": 500,
                "default": 500,
                "description": "Alter the maximum number of returned rows in a single page of aggregation results"
              },
              "by": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "$attributed_flow",
                    "$attributed_message",
                    "$attributed_variation",
                    "$campaign_channel",
                    "$flow",
                    "$flow_channel",
                    "$message",
                    "$message_send_cohort",
                    "$variation",
                    "$variation_send_cohort",
                    "Bounce Type",
                    "Campaign Name",
                    "Client Canonical",
                    "Client Name",
                    "Client Type",
                    "Email Domain",
                    "Failure Source",
                    "Failure Type",
                    "From Number",
                    "From Phone Region",
                    "List",
                    "Message Name",
                    "Message Type",
                    "Method",
                    "Subject",
                    "To Number",
                    "To Phone Region",
                    "URL",
                    "form_id"
                  ],
                  "description": "Supported dimensions for grouping and filtering"
                },
                "example": "$message",
                "description": "Optional attribute(s) used for partitioning by the aggregation function"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              },
              "filter": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "greater-or-equal(datetime,2022-12-01T00:00:00)",
                  "less-than(datetime,2022-12-08T00:00:00"
                ],
                "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field."
              },
              "timezone": {
                "type": "string",
                "example": "America/New_York",
                "default": "UTC",
                "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive."
              },
              "sort": {
                "type": "string",
                "enum": [
                  "$attributed_channel",
                  "-$attributed_channel",
                  "$attributed_flow",
                  "-$attributed_flow",
                  "$attributed_message",
                  "-$attributed_message",
                  "$attributed_variation",
                  "-$attributed_variation",
                  "$campaign_channel",
                  "-$campaign_channel",
                  "$flow",
                  "-$flow",
                  "$flow_channel",
                  "-$flow_channel",
                  "$message",
                  "-$message",
                  "$message_send_cohort",
                  "-$message_send_cohort",
                  "$variation",
                  "-$variation",
                  "$variation_send_cohort",
                  "-$variation_send_cohort",
                  "Bounce Type",
                  "-Bounce Type",
                  "Campaign Name",
                  "-Campaign Name",
                  "Client Canonical",
                  "-Client Canonical",
                  "Client Name",
                  "-Client Name",
                  "Client Type",
                  "-Client Type",
                  "Email Domain",
                  "-Email Domain",
                  "Failure Source",
                  "-Failure Source",
                  "Failure Type",
                  "-Failure Type",
                  "From Number",
                  "-From Number",
                  "From Phone Region",
                  "-From Phone Region",
                  "List",
                  "-List",
                  "Message Name",
                  "-Message Name",
                  "Message Type",
                  "-Message Type",
                  "Method",
                  "-Method",
                  "Subject",
                  "-Subject",
                  "To Number",
                  "-To Number",
                  "To Phone Region",
                  "-To Phone Region",
                  "URL",
                  "-URL",
                  "count",
                  "-count",
                  "form_id",
                  "-form_id",
                  "sum_value",
                  "-sum_value",
                  "unique",
                  "-unique"
                ],
                "description": "Provide a sort key (e.g. -$message)"
              }
            },
            "required": [
              "metric_id",
              "measurements",
              "interval",
              "filter"
            ]
          }
        }
      },
      "MetricAggregateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricAggregateQueryAsSubResource"
          }
        }
      },
      "MetricAggregateRowDTO": {
        "type": "object",
        "properties": {
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of dimensions associated with this set of measurements"
          },
          "measurements": {
            "type": "object",
            "description": "Dictionary of measurement_key, values"
          }
        },
        "required": [
          "dimensions",
          "measurements"
        ]
      },
      "PostMetricAggregateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "metric-aggregate"
                ]
              },
              "id": {
                "type": "string",
                "description": "Ephemeral ID associated with the aggregation query"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "dates": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": "The dates of the query range"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MetricAggregateRowDTO"
                    },
                    "description": "Aggregation result data"
                  }
                },
                "required": [
                  "dates",
                  "data"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "ListCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCreateQueryAsSubResource"
          }
        }
      },
      "PostListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "list"
                ]
              },
              "id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Newsletter",
                    "description": "A helpful name to label the list"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "ListMembersAddQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ProfileCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          }
        }
      },
      "ProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileCreateQueryAsSubResource"
          }
        }
      },
      "PostProfileResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "profile"
                ]
              },
              "id": {
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com",
                    "description": "Individual's email address"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "+15005550006",
                    "description": "Individual's phone number in E.164 format"
                  },
                  "external_id": {
                    "type": "string",
                    "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                    "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
                  },
                  "anonymous_id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Sarah",
                    "description": "Individual's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Mason",
                    "description": "Individual's last name"
                  },
                  "organization": {
                    "type": "string",
                    "example": "Klaviyo",
                    "description": "Name of the company or organization within the company for whom the individual works"
                  },
                  "title": {
                    "type": "string",
                    "example": "Engineer",
                    "description": "Individual's job title"
                  },
                  "image": {
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                    "description": "URL pointing to the location of a profile image"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "last_event_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation"
                  },
                  "properties": {
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    },
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CampaignCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "channel": {
                "type": "string",
                "example": "email",
                "description": "The type of campaign (email or sms, for example)"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy."
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptionsSubObject",
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "$ref": "#/components/schemas/TrackingOptionsSubObject",
                "description": "The tracking options associated with the campaign"
              }
            },
            "required": [
              "name",
              "channel",
              "audiences",
              "send_strategy",
              "send_options"
            ]
          }
        }
      },
      "CampaignCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCreateQueryAsSubResource"
          }
        }
      },
      "CampaignCloneQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The campaign ID to be cloned"
              },
              "new_name": {
                "type": "string",
                "example": "My cloned campaign's new name",
                "description": "The name for the new cloned campaign"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCloneQueryAsSubResource"
          }
        }
      },
      "CampaignMessageAssignTemplateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-message"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The message ID to be assigned to"
              },
              "template_id": {
                "type": "string",
                "example": "RipRmi",
                "description": "The template ID to assign"
              }
            },
            "required": [
              "id",
              "template_id"
            ]
          }
        }
      },
      "CampaignMessageAssignTemplateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryAsSubResource"
          }
        }
      },
      "CampaignSendJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-send-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the campaign to send"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignSendJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobCreateQueryAsSubResource"
          }
        }
      },
      "TemplateCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": "Restricted to CODE"
              },
              "html": {
                "type": "string",
                "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        ",
                "description": "The HTML contents of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext version of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            },
            "required": [
              "name",
              "editor_type"
            ]
          }
        }
      },
      "TemplateCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCreateQueryAsSubResource"
          }
        }
      },
      "PostTemplateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "template"
                ]
              },
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "string",
                    "example": "COMPANY_ID",
                    "description": "The ID of the company the template belongs to"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the template"
                  },
                  "editor_type": {
                    "type": "string",
                    "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n"
                  },
                  "html": {
                    "type": "string",
                    "description": "The rendered HTML of the template"
                  },
                  "text": {
                    "type": "string",
                    "description": "The template plain_text"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "company_id",
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TemplateRenderQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "context": {
                "type": "object",
                "example": {
                  "first_name": "Jane",
                  "last_name": "Smith"
                },
                "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/115005084927-Template-tags-and-variable-syntax-reference-classic-editor-) for more details."
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            },
            "required": [
              "id",
              "context"
            ]
          }
        }
      },
      "TemplateRenderQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateRenderQueryAsSubResource"
          }
        }
      },
      "TemplateCloneQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template to be cloned"
              },
              "name": {
                "type": "string",
                "example": "Clone of Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Any subset of TemplateResponse fields"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "TemplateCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCloneQueryAsSubResource"
          }
        }
      },
      "CatalogItemCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
                }
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogItemCreateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item-bulk-create-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-item"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogItemUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
                }
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogItemUpdateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item-bulk-update-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-item"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogItemDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemDeleteQueryAsSubResource"
                }
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogItemDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item-bulk-delete-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-item"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogVariantCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
                }
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogVariantCreateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant-bulk-create-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-variant"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogVariantUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
                }
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogVariantUpdateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant-bulk-update-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-variant"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogVariantDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantDeleteQueryAsSubResource"
                }
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogVariantDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant-bulk-delete-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-variant"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogCategoryCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
                }
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogCategoryCreateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category-bulk-create-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-category"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
                }
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogCategoryUpdateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category-bulk-update-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-category"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteQueryAsSubResource"
                }
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category-bulk-delete-job"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The valid top level statuses for an asynchronous query"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_count": {
                    "type": "integer"
                  },
                  "completed_count": {
                    "type": "integer"
                  },
                  "failed_count": {
                    "type": "integer"
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogJobErrorPayload"
                    }
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "catalog-category"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              },
              "tag_group_id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The ID of the Tag Group to associate the Tag with. If this field is not specified, the Tag will be associated with the company's Default Tag Group."
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagCreateQueryAsSubResource"
          }
        }
      },
      "PostTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagGroupCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag-group"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupCreateQueryAsSubResource"
          }
        }
      },
      "PostTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagSegmentOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "segment"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Suppression": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "matt-kemp@klaviyo-demo.com",
            "description": "The email of the profile to suppress / unsuppress."
          }
        },
        "required": [
          "email"
        ]
      },
      "SuppressionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-suppression-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be created."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "SuppressionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "UnsuppressionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-unsuppression-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be removed."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "UnsuppressionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "SubscriptionChannels": {
        "type": "object",
        "properties": {
          "email": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARKETING"
              ],
              "description": "The communication types supported by email subscriptions."
            },
            "example": [
              "MARKETING"
            ],
            "description": "The communication types to subscribe to on the \"EMAIL\" Channel. Currently supports \"MARKETING\"."
          },
          "sms": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARKETING"
              ],
              "description": "The communication types supported by SMS subscriptions."
            },
            "example": [
              "MARKETING"
            ],
            "description": "The communication types to subscribe to on the \"SMS\" Channel. Currently supports \"MARKETING\"."
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "channels": {
            "$ref": "#/components/schemas/SubscriptionChannels",
            "description": "When provided, this will provide consent for the indicated message types on the specified channels. If omitted, we will subscribe the profile to all message types on the channels corresponding to the provided identifiers."
          },
          "email": {
            "type": "string",
            "example": "matt-kemp@klaviyo-demo.com",
            "description": "The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted."
          },
          "phone_number": {
            "type": "string",
            "example": "+15005550006",
            "description": "The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted."
          },
          "profile_id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "The ID of the profile to subscribe. If provided, this will be used to perform the lookup."
          }
        }
      },
      "SubscriptionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-subscription-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "The list to add the newly subscribed profiles to"
              },
              "custom_source": {
                "type": "string",
                "example": "Marketing Event",
                "description": "A custom method detail or source to store on the consent records."
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Subscription"
                },
                "description": "One or more subscriptions to be created."
              }
            },
            "required": [
              "list_id",
              "subscriptions"
            ]
          }
        }
      },
      "SubscriptionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "UnsubscriptionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-unsubscription-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Optional, the list to remove the profiles from"
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "[\"matt-kemp@klaviyo-demo.com\", \"sarah.mason@klaviyo-demo.com\"",
                "description": "The emails to unsubscribe if any."
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "[\"+15005550006\",\"+15005550007\"]",
                "description": "The phone numbers to unsubscribe if any."
              }
            }
          }
        }
      },
      "UnsubscriptionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "DataPrivacyCreateDeletionJobQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "data-privacy-deletion-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile_id": {
                "type": "string",
                "example": "01F2VWQ645BES947MP1BPAKVMB",
                "description": "The ID of the profile to delete. This is the `id` field on the profile object."
              },
              "email": {
                "type": "string",
                "example": "matt.kemp@klaviyo-demo.com",
                "description": "The email address of the profile to delete."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "The phone number of the profile to delete."
              }
            }
          }
        }
      },
      "DataPrivacyCreateDeletionJobQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryAsSubResource"
          }
        }
      },
      "OnsiteSubscriptionCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscription"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "The list ID to add the newly subscribed profile to."
              },
              "custom_source": {
                "type": "string",
                "example": "Homepage footer signup form",
                "description": "A custom method detail or source to store on the consent records for this subscription."
              },
              "email": {
                "type": "string",
                "example": "matt.kemp@klaviyo-demo.com",
                "description": "Email address to create subscription and email consent record for."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Phone number to create subscription and SMS consent record for, in E.164 format."
              },
              "properties": {
                "type": "object",
                "example": {
                  "first_name": "Matt",
                  "last_name": "Kemp",
                  "favorite_color": "Blue"
                },
                "description": "Profile properties to set on the newly subscribed profile."
              }
            },
            "required": [
              "list_id"
            ]
          }
        }
      },
      "OnsiteSubscriptionCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryAsSubResource"
          }
        }
      },
      "_OnsiteProfileMetaIdentifiers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "email": {
            "type": "string",
            "example": "sarah.mason@klaviyo-demo.com",
            "description": "Individual's email address"
          },
          "phone_number": {
            "type": "string",
            "example": "+15005550006",
            "description": "Individual's phone number in E.164 format"
          },
          "external_id": {
            "type": "string",
            "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
            "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
          },
          "anonymous_id": {
            "type": "string"
          },
          "_kx": {
            "type": "string",
            "example": "J8fjcn003Wy6b-3ILNlOyZXabW6dcFwTyeuxrowMers%3D.McN66",
            "description": "\nAlso known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.\n"
          }
        }
      },
      "_OnsiteProfileMeta": {
        "type": "object",
        "properties": {
          "identifiers": {
            "$ref": "#/components/schemas/_OnsiteProfileMetaIdentifiers"
          }
        },
        "required": [
          "identifiers"
        ]
      },
      "OnsiteProfileCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_OnsiteProfileMeta"
          }
        }
      },
      "OnsiteProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteProfileCreateQueryAsSubResource"
          }
        }
      },
      "CatalogItemUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "price": {
                "type": "number",
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)"
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-category"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
          }
        }
      },
      "PatchCatalogItemResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-item"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "url": {
                    "type": "string"
                  },
                  "image_full_url": {
                    "type": "string"
                  },
                  "image_thumbnail_url": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "custom_metadata": {
                    "type": "object"
                  },
                  "published": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogVariantUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
              },
              "inventory_quantity": {
                "type": "number"
              },
              "price": {
                "type": "number",
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "CatalogVariantUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
          }
        }
      },
      "PatchCatalogVariantResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-variant"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "inventory_policy": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                  },
                  "inventory_quantity": {
                    "type": "number"
                  },
                  "price": {
                    "type": "number"
                  },
                  "url": {
                    "type": "string"
                  },
                  "image_full_url": {
                    "type": "string"
                  },
                  "image_thumbnail_url": {
                    "type": "string"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "custom_metadata": {
                    "type": "object"
                  },
                  "published": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
          }
        }
      },
      "PatchCatalogCategoryResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "catalog-category"
                ]
              },
              "id": {
                "type": "string",
                "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "ListPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPartialUpdateQueryAsSubResource"
          }
        }
      },
      "PatchListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "list"
                ]
              },
              "id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Newsletter",
                    "description": "A helpful name to label the list"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "SegmentPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "segment"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "SegmentPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentPartialUpdateQueryAsSubResource"
          }
        }
      },
      "PatchSegmentResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "segment"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Repeat Purchasers",
                    "description": "A helpful name to label the segment "
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "ProfilePartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          }
        }
      },
      "ProfilePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfilePartialUpdateQueryAsSubResource"
          }
        }
      },
      "PatchProfileResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "profile"
                ]
              },
              "id": {
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com",
                    "description": "Individual's email address"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "+15005550006",
                    "description": "Individual's phone number in E.164 format"
                  },
                  "external_id": {
                    "type": "string",
                    "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                    "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
                  },
                  "anonymous_id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Sarah",
                    "description": "Individual's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Mason",
                    "description": "Individual's last name"
                  },
                  "organization": {
                    "type": "string",
                    "example": "Klaviyo",
                    "description": "Name of the company or organization within the company for whom the individual works"
                  },
                  "title": {
                    "type": "string",
                    "example": "Engineer",
                    "description": "Individual's job title"
                  },
                  "image": {
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                    "description": "URL pointing to the location of a profile image"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "last_event_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation"
                  },
                  "properties": {
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    },
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "FlowUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              }
            },
            "required": [
              "status"
            ]
          }
        }
      },
      "FlowUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowUpdateQueryAsSubResource"
          }
        }
      },
      "PatchFlowResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "flow"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "trigger_type": {
                    "type": "string"
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CampaignPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "id": {
            "type": "string",
            "description": "The campaign ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptionsSubObject",
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "$ref": "#/components/schemas/TrackingOptionsSubObject",
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with"
              }
            }
          }
        }
      },
      "CampaignPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignPartialUpdateQueryAsSubResource"
          }
        }
      },
      "CampaignMessagePartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-message"
            ]
          },
          "id": {
            "type": "string",
            "description": "The message ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "example": "My message name",
                "description": "The label or name on the message"
              },
              "content": {
                "$ref": "#/components/schemas/ContentSubObject",
                "description": "Additional attributes relating to the content of the message"
              }
            }
          }
        }
      },
      "CampaignMessagePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryAsSubResource"
          }
        }
      },
      "CampaignSendJobPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-send-job"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of the currently sending campaign to cancel or revert"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "example": "cancel",
                "description": "The action you would like to take with this send job from among 'cancel' and 'revert'"
              }
            },
            "required": [
              "action"
            ]
          }
        }
      },
      "CampaignSendJobPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryAsSubResource"
          }
        }
      },
      "TemplateUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "html": {
                "type": "string",
                "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          ",
                "description": "The HTML of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            }
          }
        }
      },
      "TemplateUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateUpdateQueryAsSubResource"
          }
        }
      },
      "PatchTemplateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "template"
                ]
              },
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "string",
                    "example": "COMPANY_ID",
                    "description": "The ID of the company the template belongs to"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the template"
                  },
                  "editor_type": {
                    "type": "string",
                    "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n"
                  },
                  "html": {
                    "type": "string",
                    "description": "The rendered HTML of the template"
                  },
                  "text": {
                    "type": "string",
                    "description": "The template plain_text"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "company_id",
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagUpdateQueryAsSubResource"
          }
        }
      },
      "PatchTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagGroupUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag-group"
            ]
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupUpdateQueryAsSubResource"
          }
        }
      },
      "PatchTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogItemDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          }
        }
      },
      "CatalogVariantDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          }
        }
      },
      "CatalogCategoryDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          }
        }
      },
      "ListMembersDeleteQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "profile"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "DeleteTemplateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "template"
                ]
              },
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "string",
                    "example": "COMPANY_ID",
                    "description": "The ID of the company the template belongs to"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the template"
                  },
                  "editor_type": {
                    "type": "string",
                    "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n"
                  },
                  "html": {
                    "type": "string",
                    "description": "The rendered HTML of the template"
                  },
                  "text": {
                    "type": "string",
                    "description": "The template plain_text"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "company_id",
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "DeleteTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "DeleteTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "IncludedVariants": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
              },
              "inventory_quantity": {
                "type": "number"
              },
              "price": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedMetrics": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "metric"
            ]
          },
          "id": {
            "type": "string",
            "description": "The Metric ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric"
              },
              "created": {
                "type": "string",
                "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "integration": {
                "type": "object",
                "description": "The integration associated with the event"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedProfiles": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "\nA unique identifier used by customers to associate Klaviyo profiles with profiles in\nan external system, such as a point-of-sale system. Format varies based on the external system.\n"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedLists": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedSegments": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "segment"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Repeat Purchasers",
                "description": "A helpful name to label the segment "
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlowActions": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-action"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "settings": {
                "type": "object"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions"
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlowMessages": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-message"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlows": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "archived": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "trigger_type": {
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlowAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-action"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "settings": {
                "type": "object"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions"
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedItems": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "price": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedCategories": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Client Error"
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Server Error"
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2023-01-24/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "tags": [
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Subscriptions",
      "description": "subscriptions"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    },
    {
      "name": "Client",
      "description": "client"
    },
    {
      "name": "Data Privacy",
      "description": "data privacy"
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
