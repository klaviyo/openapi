{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API",
    "version": "2024-02-15",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "License",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "paths": {
    "/api/accounts/": {
      "get": {
        "operationId": "get_accounts",
        "summary": "Get Accounts",
        "description": "Retrieve the account(s) associated with a given private API key. This will return 1 account object within the array.\n\nYou can use this to retrieve account-specific data (contact information, timezone, currency, Public API key, etc.) or test if a Private API Key belongs to the correct account prior to performing subsequent actions with the API.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`accounts:read`",
        "parameters": [
          {
            "name": "fields[account]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contact_information",
                  "contact_information.default_sender_name",
                  "contact_information.default_sender_email",
                  "contact_information.website_url",
                  "contact_information.organization_name",
                  "contact_information.street_address",
                  "contact_information.street_address.address1",
                  "contact_information.street_address.address2",
                  "contact_information.street_address.city",
                  "contact_information.street_address.region",
                  "contact_information.street_address.country",
                  "contact_information.street_address.zip",
                  "industry",
                  "timezone",
                  "preferred_currency",
                  "public_api_key"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Accounts"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "accounts:read"
        ]
      }
    },
    "/api/accounts/{id}/": {
      "get": {
        "operationId": "get_account",
        "summary": "Get Account",
        "description": "Retrieve a single account object by its account ID. You can only request the account by which the private API key was generated.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`accounts:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the account",
            "required": true,
            "schema": {
              "description": "The ID of the account",
              "type": "string",
              "example": "AbC123"
            }
          },
          {
            "name": "fields[account]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contact_information",
                  "contact_information.default_sender_name",
                  "contact_information.default_sender_email",
                  "contact_information.website_url",
                  "contact_information.organization_name",
                  "contact_information.street_address",
                  "contact_information.street_address.address1",
                  "contact_information.street_address.address2",
                  "contact_information.street_address.city",
                  "contact_information.street_address.region",
                  "contact_information.street_address.country",
                  "contact_information.street_address.zip",
                  "industry",
                  "timezone",
                  "preferred_currency",
                  "public_api_key"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Accounts"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "accounts:read"
        ]
      }
    },
    "/api/campaigns/": {
      "get": {
        "operationId": "get_campaigns",
        "summary": "Get Campaigns",
        "description": "Returns some or all campaigns based on filters.\n\nA channel filter is required to list campaigns. Please provide either:\n`?filter=equals(messages.channel,'email')` to list email campaigns, or\n`?filter=equals(messages.channel,'sms')` to list SMS campaigns.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`messages.channel`: `equals`<br>`name`: `contains`<br>`status`: `any`, `equals`<br>`archived`: `equals`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`scheduled_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "required": true,
            "schema": {
              "type": "string",
              "example": "equals(messages.channel,'sms')"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign-messages",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "id",
                "-id",
                "name",
                "-name",
                "scheduled_at",
                "-scheduled_at",
                "updated_at",
                "-updated_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      },
      "post": {
        "operationId": "create_campaign",
        "summary": "Create Campaign",
        "description": "Creates a campaign given a set of parameters, then returns it.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Creates a campaign from parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaigns/{id}/": {
      "get": {
        "operationId": "get_campaign",
        "summary": "Get Campaign",
        "description": "Returns a specific campaign based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The campaign ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The campaign ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign-messages",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      },
      "patch": {
        "operationId": "update_campaign",
        "summary": "Update Campaign",
        "description": "Update a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The campaign ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The campaign ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Update a campaign and return it",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      },
      "delete": {
        "operationId": "delete_campaign",
        "summary": "Delete Campaign",
        "description": "Delete a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The campaign ID to be deleted",
            "required": true,
            "schema": {
              "description": "The campaign ID to be deleted",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaign-messages/{id}/": {
      "get": {
        "operationId": "get_campaign_message",
        "summary": "Get Campaign Message",
        "description": "Returns a specific message based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The message ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The message ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign",
                  "template"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Messages"
      },
      "patch": {
        "operationId": "update_campaign_message",
        "summary": "Update Campaign Message",
        "description": "Update a campaign message<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The message ID to be retrieved",
            "required": true,
            "schema": {
              "description": "The message ID to be retrieved",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Update a message and return it",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessagePartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaign-send-jobs/{id}/": {
      "get": {
        "operationId": "get_campaign_send_job",
        "summary": "Get Campaign Send Job",
        "description": "Get a campaign send job<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign to send",
            "required": true,
            "schema": {
              "description": "The ID of the campaign to send",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-send-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Jobs"
      },
      "patch": {
        "operationId": "update_campaign_send_job",
        "summary": "Update Campaign Send Job",
        "description": "Permanently cancel the campaign, setting the status to CANCELED or\nrevert the campaign, setting the status back to DRAFT<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the currently sending campaign to cancel or revert",
            "required": true,
            "schema": {
              "description": "The ID of the currently sending campaign to cancel or revert",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Permanently cancel the campaign, setting the status to CANCELED or\nrevert the campaign, setting the status back to DRAFT",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-recipient-estimation-jobs/{id}/": {
      "get": {
        "operationId": "get_campaign_recipient_estimation_job",
        "summary": "Get Campaign Recipient Estimation Job",
        "description": "Retrieve the status of a recipient estimation job triggered\nwith the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign to get recipient estimation status",
            "required": true,
            "schema": {
              "description": "The ID of the campaign to get recipient estimation status",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-recipient-estimation-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignRecipientEstimationJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-recipient-estimations/{id}/": {
      "get": {
        "operationId": "get_campaign_recipient_estimation",
        "summary": "Get Campaign Recipient Estimation",
        "description": "Get the estimated recipient count for a campaign with the provided campaign ID.\nYou can refresh this count by using the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the campaign for which to get the estimated number of recipients",
            "required": true,
            "schema": {
              "description": "The ID of the campaign for which to get the estimated number of recipients",
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-recipient-estimation]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "estimated_recipient_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignRecipientEstimationResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaign-clone/": {
      "post": {
        "operationId": "create_campaign_clone",
        "summary": "Create Campaign Clone",
        "description": "Clones an existing campaign, returning a new campaign based on the original with a new ID and name.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Clones a campaign from an existing campaign",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCloneQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaign-message-assign-template/": {
      "post": {
        "operationId": "create_campaign_message_assign_template",
        "summary": "Assign Campaign Message Template",
        "description": "Creates a non-reusable version of the template and assigns it to the message.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Takes a reusable template, clones it, and assigns the non-reusable clone to the message.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessageAssignTemplateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Messages"
      }
    },
    "/api/campaign-send-jobs/": {
      "post": {
        "operationId": "create_campaign_send_job",
        "summary": "Create Campaign Send Job",
        "description": "Trigger a campaign to send asynchronously<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Trigger the campaign to send asynchronously",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-recipient-estimation-jobs/": {
      "post": {
        "operationId": "create_campaign_recipient_estimation_job",
        "summary": "Create Campaign Recipient Estimation Job",
        "description": "Trigger an asynchronous job to update the estimated number of recipients\nfor the given campaign ID. Use the `Get Campaign Recipient Estimation\nJob` endpoint to retrieve the status of this estimation job. Use the\n`Get Campaign Recipient Estimation` endpoint to retrieve the estimated\nrecipient count for a given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Trigger an asynchronous job to update the estimated number of recipients\nfor the given campaign ID. Use the `Get Campaign Recipient Estimation\nJob` endpoint to retrieve the status of this estimation job. Use the\n`Get Campaign Recipient Estimation` endpoint to retrieve the estimated\nrecipient count for a given campaign.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignRecipientEstimationJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "x-klaviyo-subtag": "Jobs"
      }
    },
    "/api/campaign-messages/{id}/relationships/campaign/": {
      "get": {
        "operationId": "get_campaign_message_relationships_campaign",
        "summary": "Get Campaign Message Relationships Campaign",
        "description": "Returns the ID of the related campaign<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageCampaignRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/campaign-messages/{id}/campaign/": {
      "get": {
        "operationId": "get_campaign_message_campaign",
        "summary": "Get Campaign Message Campaign",
        "description": "Return the related campaign<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaign-messages/{id}/relationships/template/": {
      "get": {
        "operationId": "get_campaign_message_relationships_template",
        "summary": "Get Campaign Message Relationships Template",
        "description": "Returns the ID of the related template<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageTemplateRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "templates:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/campaign-messages/{id}/template/": {
      "get": {
        "operationId": "get_campaign_message_template",
        "summary": "Get Campaign Message Template",
        "description": "Return the related template<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "templates:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaigns/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_campaign_relationships_tags",
        "summary": "Get Campaign Relationships Tags",
        "description": "Returns the IDs of all tags associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/campaigns/{id}/tags/": {
      "get": {
        "operationId": "get_campaign_tags",
        "summary": "Get Campaign Tags",
        "description": "Return all tags that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/campaigns/{id}/relationships/campaign-messages/": {
      "get": {
        "operationId": "get_campaign_relationships_campaign_messages",
        "summary": "Get Campaign Relationships Campaign Messages",
        "description": "Returns the IDs of all messages associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessagesRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/campaigns/{id}/campaign-messages/": {
      "get": {
        "operationId": "get_campaign_campaign_messages",
        "summary": "Get Campaign Campaign Messages",
        "description": "Return all messages that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[campaign-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[campaign]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign",
                  "template"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "x-klaviyo-subtag": "Campaigns"
      }
    },
    "/api/catalog-items/": {
      "get": {
        "operationId": "get_catalog_items",
        "summary": "Get Catalog Items",
        "description": "Get all catalog items in an account.\n\nCatalog items can be sorted by the following fields, in ascending and descending order:\n`created`\n\nCurrently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category.id`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "create_catalog_item",
        "summary": "Create Catalog Item",
        "description": "Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-items/{id}/": {
      "get": {
        "operationId": "get_catalog_item",
        "summary": "Get Catalog Item",
        "description": "Get a specific catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "patch": {
        "operationId": "update_catalog_item",
        "summary": "Update Catalog Item",
        "description": "Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "delete": {
        "operationId": "delete_catalog_item",
        "summary": "Delete Catalog Item",
        "description": "Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-variants/": {
      "get": {
        "operationId": "get_catalog_variants",
        "summary": "Get Catalog Variants",
        "description": "Get all variants in an account.\n\nVariants can be sorted by the following fields, in ascending and descending order:\n`created`\n\nCurrently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.\n\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "create_catalog_variant",
        "summary": "Create Catalog Variant",
        "description": "Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variants/{id}/": {
      "get": {
        "operationId": "get_catalog_variant",
        "summary": "Get Catalog Variant",
        "description": "Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            }
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "patch": {
        "operationId": "update_catalog_variant",
        "summary": "Update Catalog Variant",
        "description": "Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "delete": {
        "operationId": "delete_catalog_variant",
        "summary": "Delete Catalog Variant",
        "description": "Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-categories/": {
      "get": {
        "operationId": "get_catalog_categories",
        "summary": "Get Catalog Categories",
        "description": "Get all catalog categories in an account.\n\nCatalog categories can be sorted by the following fields, in ascending and descending order:\n`created`\n\nCurrently, the only supported integration type is `$custom`, and the only supported catalog type is `$default`.\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "create_catalog_category",
        "summary": "Create Catalog Category",
        "description": "Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-categories/{id}/": {
      "get": {
        "operationId": "get_catalog_category",
        "summary": "Get Catalog Category",
        "description": "Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "patch": {
        "operationId": "update_catalog_category",
        "summary": "Update Catalog Category",
        "description": "Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "delete": {
        "operationId": "delete_catalog_category",
        "summary": "Delete Catalog Category",
        "description": "Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "required": true,
            "schema": {
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-item-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_items_jobs",
        "summary": "Get Create Items Jobs",
        "description": "Get all catalog item bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "spawn_create_items_job",
        "summary": "Spawn Create Items Job",
        "description": "Create a catalog item bulk create job to create a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_items_job",
        "summary": "Get Create Items Job",
        "description": "Get a catalog item bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_items_jobs",
        "summary": "Get Update Items Jobs",
        "description": "Get all catalog item bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "spawn_update_items_job",
        "summary": "Spawn Update Items Job",
        "description": "Create a catalog item bulk update job to update a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_items_job",
        "summary": "Get Update Items Job",
        "description": "Get a catalog item bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_items_jobs",
        "summary": "Get Delete Items Jobs",
        "description": "Get all catalog item bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      },
      "post": {
        "operationId": "spawn_delete_items_job",
        "summary": "Spawn Delete Items Job",
        "description": "Create a catalog item bulk delete job to delete a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-item-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_items_job",
        "summary": "Get Delete Items Job",
        "description": "Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-variant-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_variants_jobs",
        "summary": "Get Create Variants Jobs",
        "description": "Get all catalog variant bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "spawn_create_variants_job",
        "summary": "Spawn Create Variants Job",
        "description": "Create a catalog variant bulk create job to create a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_variants_job",
        "summary": "Get Create Variants Job",
        "description": "Get a catalog variant bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_variants_jobs",
        "summary": "Get Update Variants Jobs",
        "description": "Get all catalog variant bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "spawn_update_variants_job",
        "summary": "Spawn Update Variants Job",
        "description": "Create a catalog variant bulk update job to update a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_variants_job",
        "summary": "Get Update Variants Job",
        "description": "Get a catalog variate bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_variants_jobs",
        "summary": "Get Delete Variants Jobs",
        "description": "Get all catalog variant bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      },
      "post": {
        "operationId": "spawn_delete_variants_job",
        "summary": "Spawn Delete Variants Job",
        "description": "Create a catalog variant bulk delete job to delete a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-variant-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_variants_job",
        "summary": "Get Delete Variants Job",
        "description": "Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-category-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_categories_jobs",
        "summary": "Get Create Categories Jobs",
        "description": "Get all catalog category bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "spawn_create_categories_job",
        "summary": "Spawn Create Categories Job",
        "description": "Create a catalog category bulk create job to create a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_categories_job",
        "summary": "Get Create Categories Job",
        "description": "Get a catalog category bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_categories_jobs",
        "summary": "Get Update Categories Jobs",
        "description": "Get all catalog category bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "spawn_update_categories_job",
        "summary": "Spawn Update Categories Job",
        "description": "Create a catalog category bulk update job to update a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_categories_job",
        "summary": "Get Update Categories Job",
        "description": "Get a catalog category bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_categories_jobs",
        "summary": "Get Delete Categories Jobs",
        "description": "Get all catalog category bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      },
      "post": {
        "operationId": "spawn_delete_categories_job",
        "summary": "Spawn Delete Categories Job",
        "description": "Create a catalog category bulk delete job to delete a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-category-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_categories_job",
        "summary": "Get Delete Categories Job",
        "description": "Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/back-in-stock-subscriptions/": {
      "post": {
        "operationId": "create_back_in_stock_subscription",
        "summary": "Create Back In Stock Subscription",
        "description": "Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.\n\nThis endpoint is specifically designed to be called from server-side applications. To create subscriptions from client-side contexts, use [POST /client/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_client_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerBISSubscriptionCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write",
          "profiles:write"
        ],
        "x-klaviyo-subtag": "Back In Stock"
      }
    },
    "/api/catalog-categories/{id}/items/": {
      "get": {
        "operationId": "get_catalog_category_items",
        "summary": "Get Catalog Category Items",
        "description": "Get all items in a category with the given category ID.\n\nItems can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[catalog-item]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category.id`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Items"
      }
    },
    "/api/catalog-items/{id}/variants/": {
      "get": {
        "operationId": "get_catalog_item_variants",
        "summary": "Get Catalog Item Variants",
        "description": "Get all variants related to the given item ID.\n\nVariants can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[catalog-variant]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Variants"
      }
    },
    "/api/catalog-items/{id}/categories/": {
      "get": {
        "operationId": "get_catalog_item_categories",
        "summary": "Get Catalog Item Categories",
        "description": "Get all catalog categories that an item with the given item ID is in.\n\nCatalog categories can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[catalog-category]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Categories"
      }
    },
    "/api/catalog-categories/{id}/relationships/items/": {
      "get": {
        "operationId": "get_catalog_category_relationships_items",
        "summary": "Get Catalog Category Relationships Items",
        "description": "Get all items in the given category ID.\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryItemListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "post": {
        "operationId": "create_catalog_category_relationships_items",
        "summary": "Create Catalog Category Relationships Items",
        "description": "Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "patch": {
        "operationId": "update_catalog_category_relationships_items",
        "summary": "Update Catalog Category Relationships Items",
        "description": "Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "delete": {
        "operationId": "delete_catalog_category_relationships_items",
        "summary": "Delete Catalog Category Relationships Items",
        "description": "Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/catalog-items/{id}/relationships/categories/": {
      "get": {
        "operationId": "get_catalog_item_relationships_categories",
        "summary": "Get Catalog Item Relationships Categories",
        "description": "Get all catalog categories that a particular item is in.\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCategoryListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "post": {
        "operationId": "create_catalog_item_relationships_categories",
        "summary": "Create Catalog Item Relationships Categories",
        "description": "Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "patch": {
        "operationId": "update_catalog_item_relationships_categories",
        "summary": "Update Catalog Item Relationships Categories",
        "description": "Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "delete": {
        "operationId": "delete_catalog_item_relationships_categories",
        "summary": "Delete Catalog Item Relationships Categories",
        "description": "Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/coupons/": {
      "get": {
        "operationId": "get_coupons",
        "summary": "Get Coupons",
        "description": "Get all coupons in an account.\n\nTo learn more, see our [Coupons API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_coupons_api).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      },
      "post": {
        "operationId": "create_coupon",
        "summary": "Create Coupon",
        "description": "Creates a new coupon.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`coupons:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "coupons:write"
        ]
      }
    },
    "/api/coupons/{id}/": {
      "get": {
        "operationId": "get_coupon",
        "summary": "Get Coupon",
        "description": "Get a specific coupon with the given coupon ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "required": true,
            "schema": {
              "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      },
      "patch": {
        "operationId": "update_coupon",
        "summary": "Update Coupon",
        "description": "*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`coupons:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "required": true,
            "schema": {
              "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "coupons:write"
        ]
      },
      "delete": {
        "operationId": "delete_coupon",
        "summary": "Delete Coupon",
        "description": "Delete the coupon with the given coupon ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`coupons:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "required": true,
            "schema": {
              "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
              "type": "string",
              "example": "10OFF"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "coupons:write"
        ]
      }
    },
    "/api/coupon-codes/": {
      "get": {
        "operationId": "get_coupon_codes",
        "summary": "Get Coupon Codes",
        "description": "Gets a list of coupon codes associated with a coupon/coupons or a profile/profiles.\n\nA coupon/coupons or a profile/profiles must be provided as required filter params.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`expires_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`<br>`coupon.id`: `any`, `equals`<br>`profile.id`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "coupon"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      },
      "post": {
        "operationId": "create_coupon_code",
        "summary": "Create Coupon Code",
        "description": "Synchronously creates a coupon code for the given coupon.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCodeCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCouponCodeResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      }
    },
    "/api/coupon-codes/{id}/": {
      "get": {
        "operationId": "get_coupon_code",
        "summary": "Get Coupon Code",
        "description": "Returns a Coupon Code specified by the given identifier.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "required": true,
            "schema": {
              "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
              "type": "string",
              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
            }
          },
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "coupon"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      },
      "patch": {
        "operationId": "update_coupon_code",
        "summary": "Update Coupon Code",
        "description": "Updates a coupon code specified by the given identifier synchronously. We allow updating the 'status' and\n'expires_at' of coupon codes.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "required": true,
            "schema": {
              "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
              "type": "string",
              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCodeUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCouponCodeResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      },
      "delete": {
        "operationId": "delete_coupon_code",
        "summary": "Delete Coupon Code",
        "description": "Deletes a coupon code specified by the given identifier synchronously. If a profile has been assigned to the\ncoupon code, an exception will be raised<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "required": true,
            "schema": {
              "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
              "type": "string",
              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      }
    },
    "/api/coupon-code-bulk-create-jobs/": {
      "get": {
        "operationId": "get_coupon_code_bulk_create_jobs",
        "summary": "Get Coupon Code Bulk Create Jobs",
        "description": "Get all coupon code bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "fields[coupon-code-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      },
      "post": {
        "operationId": "spawn_coupon_code_bulk_create_job",
        "summary": "Spawn Coupon Code Bulk Create Job",
        "description": "Create a coupon-code-bulk-create-job to bulk create a list of coupon codes.\n\nMax number of jobs queued at once we allow for is 100.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponCodeCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCouponCodeCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:write"
        ]
      }
    },
    "/api/coupon-code-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_coupon_code_bulk_create_job",
        "summary": "Get Coupon Code Bulk Create Job",
        "description": "Get a coupon code bulk create job with the given job ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[coupon-code-bulk-create-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "coupon-codes"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      }
    },
    "/api/coupon-codes/{id}/coupon/": {
      "get": {
        "operationId": "get_coupon_for_coupon_code",
        "summary": "Get Coupon For Coupon Code",
        "description": "Gets a list of coupon codes associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[coupon]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "description"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      }
    },
    "/api/coupon-codes/{id}/relationships/coupon/": {
      "get": {
        "operationId": "get_coupon_relationships_coupon_codes",
        "summary": "Get Coupon Relationships Coupon Codes",
        "description": "Gets the coupon relationship associated with the given coupon code id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupons:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeRelationshipCouponResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupons:read"
        ]
      }
    },
    "/api/coupons/{id}/coupon-codes/": {
      "get": {
        "operationId": "get_coupon_codes_for_coupon",
        "summary": "Get Coupon Codes For Coupon",
        "description": "Gets a list of coupon codes associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[coupon-code]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "unique_code",
                  "expires_at",
                  "status"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`expires_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`<br>`coupon.id`: `any`, `equals`<br>`profile.id`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponCodeResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      }
    },
    "/api/coupons/{id}/relationships/coupon-codes/": {
      "get": {
        "operationId": "get_coupon_code_relationships_coupon",
        "summary": "Get Coupon Code Relationships Coupon",
        "description": "Gets a list of coupon code relationships associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`coupon-codes:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponRelationshipCouponCodesListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Coupons"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "coupon-codes:read"
        ]
      }
    },
    "/api/data-privacy-deletion-jobs/": {
      "post": {
        "operationId": "request_profile_deletion",
        "summary": "Request Profile Deletion",
        "description": "Request a deletion for the profiles corresponding to one of the following identifiers: `email`, `phone_number`, or `id`. If multiple identifiers are provided, we will return an error.\n\nAll profiles that match the provided identifier will be deleted.\n\nThe deletion occurs asynchronously; however, once it has completed, the deleted profile will appear on the [Deleted Profiles page](https://www.klaviyo.com/account/deleted).\n\nFor more information on the deletion process, please refer to our [Help Center docs on how to handle GDPR and CCPA deletion requests](https://help.klaviyo.com/hc/en-us/articles/360004217631-How-to-Handle-GDPR-Requests#record-gdpr-and-ccpa%20%20-deletion-requests2).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`data-privacy:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Data Privacy"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "data-privacy:write"
        ]
      }
    },
    "/api/events/": {
      "get": {
        "operationId": "get_events",
        "summary": "Get Events",
        "description": "Get all events in an account\n\nRequests can be sorted by the following fields:\n`datetime`, `timestamp`\n\nReturns a maximum of 200 events per page.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`",
        "parameters": [
          {
            "name": "fields[event]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`metric_id`: `equals`<br>`profile_id`: `equals`<br>`profile`: `has`<br>`datetime`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "attributions",
                  "metric",
                  "profile"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "datetime",
                "-datetime",
                "timestamp",
                "-timestamp"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read"
        ]
      },
      "post": {
        "operationId": "create_event",
        "summary": "Create Event",
        "description": "Create a new event to track a profile's activity.\n\nSuccessful response indicates that the event was validated and submitted for processing, but does not guarantee that processing is complete.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQueryV2"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:write"
        ]
      }
    },
    "/api/events/{id}/": {
      "get": {
        "operationId": "get_event",
        "summary": "Get Event",
        "description": "Get an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event",
            "required": true,
            "schema": {
              "description": "ID of the event",
              "type": "string"
            }
          },
          {
            "name": "fields[event]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "attributions",
                  "metric",
                  "profile"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "events:read"
        ]
      }
    },
    "/api/events/{id}/metric/": {
      "get": {
        "operationId": "get_event_metric",
        "summary": "Get Event Metric",
        "description": "Get the metric for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "metrics:read"
        ]
      }
    },
    "/api/events/{id}/profile/": {
      "get": {
        "operationId": "get_event_profile",
        "summary": "Get Event Profile",
        "description": "Get the profile associated with an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "profiles:read"
        ]
      }
    },
    "/api/events/{id}/relationships/metric/": {
      "get": {
        "operationId": "get_event_relationships_metric",
        "summary": "Get Event Relationships Metric",
        "description": "Get a list of related Metrics for an Event<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventMetricsRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "metrics:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/events/{id}/relationships/profile/": {
      "get": {
        "operationId": "get_event_relationships_profile",
        "summary": "Get Event Relationships Profile",
        "description": "Get profile [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventProfilesRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Events"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:read",
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/flows/": {
      "get": {
        "operationId": "get_flows",
        "summary": "Get Flows",
        "description": "Get all flows in an account.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`status`: `equals`<br>`archived`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`trigger_type`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "status",
                "-status",
                "trigger_type",
                "-trigger_type",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flows/{id}/": {
      "get": {
        "operationId": "get_flow",
        "summary": "Get Flow",
        "description": "Get a flow with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions",
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      },
      "patch": {
        "operationId": "update_flow",
        "summary": "Update Flow Status",
        "description": "Update the status of a flow with the given flow ID, and all actions in that flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Flow to update. Ex: XVTP5Q",
            "required": true,
            "schema": {
              "description": "ID of the Flow to update. Ex: XVTP5Q",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write"
        ]
      }
    },
    "/api/flow-actions/{id}/": {
      "get": {
        "operationId": "get_flow_action",
        "summary": "Get Flow Action",
        "description": "Get a flow action from a flow with the given flow action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow",
                  "flow-messages"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-messages/{id}/": {
      "get": {
        "operationId": "get_flow_message",
        "summary": "Get Flow Message",
        "description": "Get the flow message of a flow with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-action",
                  "template"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flows/{id}/flow-actions/": {
      "get": {
        "operationId": "get_flow_flow_actions",
        "summary": "Get Flow Flow Actions",
        "description": "Get all flow actions associated with the given flow ID.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`action_type`: `any`, `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "action_type",
                "-action_type",
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flows/{id}/relationships/flow-actions/": {
      "get": {
        "operationId": "get_flow_relationships_flow_actions",
        "summary": "Get Flow Relationships Flow Actions",
        "description": "Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow actions associated with the given flow ID.\n\nFlow action relationships can be sorted by the following fields, in ascending and descending order:\n`id`,  `status`, `created`, `updated`\n\nUse filters to narrow your results.\n\nReturns a maximum of 50 flow action relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`action_type`: `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowFlowActionRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/flows/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_flow_relationships_tags",
        "summary": "Get Flow Relationships Tags",
        "description": "Return the tag IDs of all tags associated with the given flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/flows/{id}/tags/": {
      "get": {
        "operationId": "get_flow_tags",
        "summary": "Get Flow Tags",
        "description": "Return all tags associated with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ]
      }
    },
    "/api/flow-actions/{id}/flow/": {
      "get": {
        "operationId": "get_flow_action_flow",
        "summary": "Get Flow For Flow Action",
        "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-actions/{id}/relationships/flow/": {
      "get": {
        "operationId": "get_flow_action_relationships_flow",
        "summary": "Get Flow Action Relationships Flow",
        "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionFlowRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/flow-actions/{id}/flow-messages/": {
      "get": {
        "operationId": "get_flow_action_messages",
        "summary": "Get Flow Action Messages",
        "description": "Get all flow messages associated with the given action ID.\n\nFlow messages can be sorted by the following fields, in ascending and descending order:\n\nascending: `id`,  `name`, `created`, `updated`\ndescending: `-id`,  `-name`, `-created`, `-updated`\n\nReturns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-message]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-actions/{id}/relationships/flow-messages/": {
      "get": {
        "operationId": "get_flow_action_relationships_messages",
        "summary": "Get Flow Action Relationships Messages",
        "description": "Get all relationships for flow messages associated with the given flow action ID.\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 50. Min: 1. Max: 50.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionFlowMessageRelationshipResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/flow-messages/{id}/flow-action/": {
      "get": {
        "operationId": "get_flow_message_action",
        "summary": "Get Flow Action For Message",
        "description": "Get the flow action for a flow message with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[flow-action]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-messages/{id}/relationships/flow-action/": {
      "get": {
        "operationId": "get_flow_message_relationships_action",
        "summary": "Get Flow Message Relationships Action",
        "description": "Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message's flow action, given the flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageFlowActionRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/flow-messages/{id}/relationships/template/": {
      "get": {
        "operationId": "get_flow_message_relationships_template",
        "summary": "Get Flow Message Relationships Template",
        "description": "Returns the ID of the related template<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageTemplateRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/flow-messages/{id}/template/": {
      "get": {
        "operationId": "get_flow_message_template",
        "summary": "Get Flow Message Template",
        "description": "Return the related template<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/images/": {
      "get": {
        "operationId": "get_images",
        "summary": "Get Images",
        "description": "Get all images in an account.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:read`",
        "parameters": [
          {
            "name": "fields[image]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`format`: `any`, `equals`<br>`name`: `any`, `contains`, `ends-with`, `equals`, `starts-with`<br>`size`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`hidden`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "format",
                "-format",
                "id",
                "-id",
                "name",
                "-name",
                "size",
                "-size",
                "updated_at",
                "-updated_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "images:read"
        ]
      },
      "post": {
        "operationId": "upload_image_from_url",
        "summary": "Upload Image From URL",
        "description": "Import an image from a url or data uri.\n\nIf you want to upload an image from a file, use the Upload Image From File endpoint instead.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `100/m`<br>Daily: `100/d`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "100/m",
          "daily": "100/d"
        },
        "x-klaviyo-scopes": [
          "images:write"
        ]
      }
    },
    "/api/images/{id}/": {
      "get": {
        "operationId": "get_image",
        "summary": "Get Image",
        "description": "Get the image with the given image ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the image",
            "required": true,
            "schema": {
              "description": "The ID of the image",
              "type": "string",
              "example": "7"
            }
          },
          {
            "name": "fields[image]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "images:read"
        ]
      },
      "patch": {
        "operationId": "update_image",
        "summary": "Update Image",
        "description": "Update the image with the given image ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the image",
            "required": true,
            "schema": {
              "description": "The ID of the image",
              "type": "string",
              "example": "7"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagePartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "images:write"
        ]
      }
    },
    "/api/image-upload/": {
      "post": {
        "operationId": "upload_image_from_file",
        "summary": "Upload Image From File",
        "description": "Upload an image from a file.\n\nIf you want to import an image from an existing url or a data uri, use the Upload Image From URL endpoint instead.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `100/m`<br>Daily: `100/d`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ImageUploadQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Images"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "100/m",
          "daily": "100/d"
        },
        "x-klaviyo-scopes": [
          "images:write"
        ]
      }
    },
    "/api/lists/": {
      "get": {
        "operationId": "get_lists",
        "summary": "Get Lists",
        "description": "Get all lists in an account.\n\nFilter to request a subset of all lists. Lists can be filtered by `id`, `name`, `created`, and `updated` fields.\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListListResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ]
      },
      "post": {
        "operationId": "create_list",
        "summary": "Create List",
        "description": "Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostListCreateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write"
        ]
      }
    },
    "/api/lists/{id}/": {
      "get": {
        "operationId": "get_list",
        "summary": "Get List",
        "description": "Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[list]=profile_count` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-02-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "additional-fields[list]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'profile_count'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process",
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListRetrieveResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ]
      },
      "patch": {
        "operationId": "update_list",
        "summary": "Update List",
        "description": "Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchListPartialUpdateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write"
        ]
      },
      "delete": {
        "operationId": "delete_list",
        "summary": "Delete List",
        "description": "Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
              "type": "string",
              "example": "Y6nRLr"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write"
        ]
      }
    },
    "/api/lists/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_list_relationships_tags",
        "summary": "Get List Relationships Tags",
        "description": "Returns the tag IDs of all tags associated with the given list.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/lists/{id}/tags/": {
      "get": {
        "operationId": "get_list_tags",
        "summary": "Get List Tags",
        "description": "Return all tags associated with the given list ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "tags:read"
        ]
      }
    },
    "/api/lists/{id}/relationships/profiles/": {
      "get": {
        "operationId": "get_list_relationships_profiles",
        "summary": "Get List Relationships Profiles",
        "description": "Get profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 1000.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 1000,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "post": {
        "operationId": "create_list_relationships",
        "summary": "Add Profile To List",
        "description": "Add a profile to a list with the given list ID.\n\nIt is recommended that you use the [Subscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/subscribe_profiles) if you're trying to give a profile [consent](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api) to receive email marketing, SMS marketing, or both.\n\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersAddQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write"
        ]
      },
      "delete": {
        "operationId": "delete_list_relationships",
        "summary": "Remove Profile From List",
        "description": "Remove a profile from a list with the given list ID.\n\nThe provided profile will no longer receive marketing from this particular list once removed.\n\nRemoving a profile from a list will not impact the profile's [consent](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api) status or subscription status in general.\nTo update a profile's subscription status, please use the [Unsubscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/unsubscribe_profiles).\n\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersDeleteQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write"
        ]
      }
    },
    "/api/lists/{id}/profiles/": {
      "get": {
        "operationId": "get_list_profiles",
        "summary": "Get List Profiles",
        "description": "Get all profiles within a list with the given list ID.\n\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, `push_token`, and `joined_group_at` fields. Profiles can be sorted by the following fields, in ascending and descending order: `joined_group_at`<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[profile]=predictive_analytics` parameter in your API request:<br>Burst: `10/s`<br>Steady: `150/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-02-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "joined_group_at",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListMemberResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ]
      }
    },
    "/api/metrics/": {
      "get": {
        "operationId": "get_metrics",
        "summary": "Get Metrics",
        "description": "Get all metrics in an account.\n\nRequests can be filtered by the following fields:\nintegration `name`, integration `category`\n\nReturns a maximum of 200 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`integration.name`: `equals`<br>`integration.category`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ]
      }
    },
    "/api/metrics/{id}/": {
      "get": {
        "operationId": "get_metric",
        "summary": "Get Metric",
        "description": "Get a metric with the given metric ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Metric ID",
            "required": true,
            "schema": {
              "description": "Metric ID",
              "type": "string"
            }
          },
          {
            "name": "fields[metric]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ]
      }
    },
    "/api/metric-aggregates/": {
      "post": {
        "operationId": "query_metric_aggregates",
        "summary": "Query Metric Aggregates",
        "description": "Query and aggregate event data associated with a metric, including native Klaviyo metrics, integration-specific metrics, and custom events. Queries must be passed in the JSON body of your `POST` request.\n\nResults can be filtered and grouped by time, event, or profile dimensions.\n\nTo learn more about how to use this endpoint, check out our new [Using the Query Metric Aggregates Endpoint guide](https://developers.klaviyo.com/en/docs/using-the-query-metric-aggregates-endpoint).\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets)\n* `sort`: sort results by a specified field, such as `\"-timestamp\"`\n* `page_cursor`: results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/reference/api_overview#pagination)\n* `page_size`: limit the number of returned results per page\n* `by`: optional attributes used to group by the aggregation function\n    * When using `by` attributes, an empty `dimensions` response is expected when the counts for the events do not have the associated dimension requested by the set `by` attribute. For example, a query including `\"by\": [\"$flow\"]` will return an empty dimensions response for counts of metrics not associated with a `$flow`\n* `measurement`: the measurement key supports the following values:\n    * `\"sum_value\"`: perform a summation of the `_Event Value_`, optionally partitioned over any dimension provided in the `by` field\n    * `\"count\"`: counts the number of events associated to a metric, optionally partitioned over any dimension provided in the `by` field\n    * `\"unique\"` counts the number of unique customers associated to a metric, optionally partitioned over any dimension provided in the `by` field\n* `interval`: aggregation interval, such as `\"hour\"`,`\"day\"`,`\"week\"`, and `\"month\"`\n* `metric_id`: the metric ID used in the aggregation\n* `filter`: list of filters for specific fields, must include time range using ISO 8601 format (`\"YYYY-MM-DDTHH:MM:SS.mmmmmm\"`)\n    * The time range can be filtered by providing a `greater-or-equal` filter on the datetime field, such as `\"greater-or-equal(datetime,2021-07-01T00:00:00)\"` and a `less-than` filter on the same datetime field, such as `\"less-than(datetime,2022-07-01T00:00:00)\"`\n    * The time range may span a maximum of one year. Time range dates may be set to a maximum of 5 years prior to the current date\n    * Filter the list of supported aggregate dimensions using the common filter syntax, such as `\"equals(URL,\\\"https://www.klaviyo.com/\\\")\"`\n* `timezone`: the timezone used when processing the query. Case sensitive. This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones)\n    * While the payload accepts a timezone, the response datetimes returned will be in UTC.\n\nFor a comprehensive list of native Klaviyo metrics and their associated attributes for grouping and filtering, please refer to the [metrics attributes guide](https://developers.klaviyo.com/en/docs/supported_metrics_and_attributes).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Retrieve Metric Aggregations",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricAggregateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostMetricAggregateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ]
      }
    },
    "/api/profiles/": {
      "get": {
        "operationId": "get_profiles",
        "summary": "Get Profiles",
        "description": "Get all profiles in an account.\n\nProfiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `updated`, `email`, `subscriptions.email.marketing.suppression.timestamp`, `subscriptions.email.marketing.list_suppressions.timestamp`<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[profile]=predictive_analytics` parameter in your API request:<br>Burst: `10/s`<br>Steady: `150/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-02-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`external_id`: `any`, `equals`<br>`_kx`: `equals`<br>`created`: `greater-than`, `less-than`<br>`updated`: `greater-than`, `less-than`<br>`subscriptions.email.marketing.suppression.timestamp` : `greater-than`, `greater-or-equal`, `less-than`, `less-or-equal`<br>`subscriptions.email.marketing.suppression.reason` : `equals`<br>`subscriptions.email.marketing.list_suppressions.list_id` : `equals`<br>`subscriptions.email.marketing.list_suppressions.reason` : `equals`<br>`subscriptions.email.marketing.list_suppressions.timestamp` : `greater-than`, `greater-or-equal`, `less-than`, `less-or-equal`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "email",
                "-email",
                "id",
                "-id",
                "updated",
                "-updated",
                "subscriptions.email.marketing.list_suppressions.timestamp",
                "-subscriptions.email.marketing.list_suppressions.timestamp",
                "subscriptions.email.marketing.suppression.timestamp",
                "-subscriptions.email.marketing.suppression.timestamp"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ]
      },
      "post": {
        "operationId": "create_profile",
        "summary": "Create Profile",
        "description": "Create a new profile.\n\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account,\nyou'll need to include at least one other identifier attribute (`email` or `external_id`)\nin addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profiles/{id}/": {
      "get": {
        "operationId": "get_profile",
        "summary": "Get Profile",
        "description": "Get the profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists",
                  "segments"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ]
      },
      "patch": {
        "operationId": "update_profile",
        "summary": "Update Profile",
        "description": "Update the profile with the given profile ID.\n\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account,\nyou'll need to include at least one other identifier attribute (`email` or `external_id`)\nin addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "required": true,
            "schema": {
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilePartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profile-bulk-import-jobs/": {
      "get": {
        "operationId": "get_bulk_profile_import_jobs",
        "summary": "Get Bulk Profile Import Jobs",
        "description": "Get all bulk profile import jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "fields[profile-bulk-import-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "started_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      },
      "post": {
        "operationId": "spawn_bulk_profile_import_job",
        "summary": "Spawn Bulk Profile Import Job",
        "description": "Create a bulk profile import job to create or update a batch of profiles.\n\nAccepts up to 10,000 profiles per request. The maximum allowed payload size is 5MB.\n\nTo learn more, see our [Bulk Profile Import API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_bulk_profile_import_api).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileImportJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileImportJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      }
    },
    "/api/profile-bulk-import-jobs/{job_id}/": {
      "get": {
        "operationId": "get_bulk_profile_import_job",
        "summary": "Get Bulk Profile Import Job",
        "description": "Get a bulk profile import job with the given job ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "ID of the job to retrieve.",
            "required": true,
            "schema": {
              "description": "ID of the job to retrieve.",
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH"
            }
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile-bulk-import-job]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "expires_at",
                  "started_at"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      }
    },
    "/api/profile-import/": {
      "post": {
        "operationId": "create_or_update_profile",
        "summary": "Create or Update Profile",
        "description": "Given a set of profile attributes and optionally an ID, create or update a profile.\n\nReturns 201 if a new profile was created, 200 if an existing profile was updated.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpsertQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "201": {
            "description": "Profile Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profile-merge/": {
      "post": {
        "operationId": "merge_profiles",
        "summary": "Merge Profiles",
        "description": "Merge a given related profile into a profile with the given profile ID.\n\nThe profile provided under `relationships` (the \"source\" profile) will be merged into the profile provided by the ID in the base data object (the \"destination\" profile).\nThis endpoint queues an asynchronous task which will merge data from the source profile into the destination profile, deleting the source profile in the process. This endpoint accepts only one source profile.\n\nTo learn more about how profile data is preserved or overwritten during a merge, please [visit our Help Center](https://help.klaviyo.com/hc/en-us/articles/115005073847#merge-2-profiles3).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileMergeQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileMergeResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/api/profile-suppression-bulk-create-jobs/": {
      "post": {
        "operationId": "suppress_profiles",
        "summary": "Suppress Profiles",
        "description": "Manually suppress one or more profiles. Such profiles will have `USER_SUPPRESSED` as their suppression reason. Manually suppressed profiles _will not_ receive email marketing. Learn more about [suppressed profiles](https://help.klaviyo.com/hc/en-us/articles/115005246108-Understanding-suppressed-email-profiles#what-is-a-suppressed-profile-1).\nLearn about [collecting consent and best practices](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api).\n\nNot supported for SMS marketing.\n\nMaximum number of profile can be submitted for suppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found with the given email, one will be created and immediately suppressed.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuppressionCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write",
          "subscriptions:write"
        ]
      }
    },
    "/api/profile-suppression-bulk-delete-jobs/": {
      "post": {
        "operationId": "unsuppress_profiles",
        "summary": "Unsuppress Profiles",
        "description": "Unsuppress one or more profiles, this will remove any Manual Suppressions (USER_SUPPRESSED) on these profiles. A profile may receive email marketing after a manual suppression is removed so long as they have not revoked [consent](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api), i.e. unsubscribed.\n\nNot supported for SMS marketing. Only manual suppressions (USER_SUPPRESSED) will be removed. `UNSUBSCRIBE` and `SPAM_REPORT` suppressions are removed whenever a [profile resubscribes](https://developers.klaviyo.com/en/reference/subscribe_profiles).\n`INVALID_EMAIL` and `HARD_BOUNCE` suppressions cannot be removed by the API.\n\nMaximum number of profile can be submitted for unsuppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not\nfound with the given email, no action will be taken.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuppressionDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:write"
        ]
      }
    },
    "/api/profile-subscription-bulk-create-jobs/": {
      "post": {
        "operationId": "subscribe_profiles",
        "summary": "Subscribe Profiles",
        "description": "Subscribe one or more profiles to email marketing, SMS marketing, or both. If the provided list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message.\nLearn more about [consent in this guide](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api).\n\nIf a list is not provided, the opt-in process used will be determined by the [account-level default opt-in setting](https://www.klaviyo.com/settings/account/api-keys).\n\nTo add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/reference/create_list_relationships).\n\nThis API will remove any `UNSUBSCRIBE`, `SPAM_REPORT` or `USER_SUPPRESSED` suppressions from the provided profiles. Learn more about [suppressed profiles](https://help.klaviyo.com/hc/en-us/articles/115005246108-Understanding-suppressed-email-profiles#what-is-a-suppressed-profile-1).\n\nMaximum number of profiles can be submitted for subscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to the provided list. Either email or phone number is required. Both may be specified to subscribe to both channels.\nIf a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write",
          "subscriptions:write"
        ]
      }
    },
    "/api/profile-subscription-bulk-delete-jobs/": {
      "post": {
        "operationId": "unsubscribe_profiles",
        "summary": "Unsubscribe Profiles",
        "description": "Unsubscribe one or more profiles to email marketing, SMS marketing, or both. Learn more about [consent in this guide](https://developers.klaviyo.com/en/docs/collect_email_and_sms_consent_via_api).\n\nTo remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/reference/delete_list_relationships).\n\nMaximum number of profile can be submitted for unsubscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`lists:write`\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be removed from the provided list.\nEither email or phone number is required. If a profile cannot be found matching the given identifier(s), a new profile will be created and then unsubscribed.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDeleteJobCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "profiles:write",
          "subscriptions:write"
        ]
      }
    },
    "/api/push-tokens/": {
      "post": {
        "operationId": "create_push_token",
        "summary": "Create or Update Push Token",
        "description": "Create or update a push token.\n\nThis endpoint can be used to migrate push tokens from another platform to Klaviyo. Please use our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)) to create push tokens from users' devices.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`\n`push-tokens:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write",
          "push-tokens:write"
        ]
      }
    },
    "/api/profiles/{id}/lists/": {
      "get": {
        "operationId": "get_profile_lists",
        "summary": "Get Profile Lists",
        "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ]
      }
    },
    "/api/profiles/{id}/relationships/lists/": {
      "get": {
        "operationId": "get_profile_relationships_lists",
        "summary": "Get Profile Relationships Lists",
        "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/profiles/{id}/segments/": {
      "get": {
        "operationId": "get_profile_segments",
        "summary": "Get Profile Segments",
        "description": "Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ]
      }
    },
    "/api/profiles/{id}/relationships/segments/": {
      "get": {
        "operationId": "get_profile_relationships_segments",
        "summary": "Get Profile Relationships Segments",
        "description": "Get segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/lists/": {
      "get": {
        "operationId": "get_bulk_profile_import_job_lists",
        "summary": "Get Bulk Profile Import Job Lists",
        "description": "Get list for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[list]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "opt_in_process"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/relationships/lists/": {
      "get": {
        "operationId": "get_bulk_profile_import_job_relationships_lists",
        "summary": "Get Bulk Profile Import Job Relationships Lists",
        "description": "Get list relationship for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`lists:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "lists:read"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/profiles/": {
      "get": {
        "operationId": "get_bulk_profile_import_job_profiles",
        "summary": "Get Bulk Profile Import Job Profiles",
        "description": "Get profiles for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/relationships/profiles/": {
      "get": {
        "operationId": "get_bulk_profile_import_job_relationships_profiles",
        "summary": "Get Bulk Profile Import Job Relationships Profiles",
        "description": "Get profile relationships for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileImportJobProfileRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      }
    },
    "/api/profile-bulk-import-jobs/{id}/import-errors/": {
      "get": {
        "operationId": "get_bulk_profile_import_job_import_errors",
        "summary": "Get Bulk Profile Import Job Errors",
        "description": "Get import errors for the bulk profile import job with the given ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[import-error]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "title",
                  "detail",
                  "source",
                  "source.pointer",
                  "original_payload"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImportErrorResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "x-klaviyo-subtag": "Bulk Profile Imports"
      }
    },
    "/api/campaign-values-reports/": {
      "post": {
        "operationId": "query_campaign_values",
        "summary": "Query Campaign Values",
        "description": "Returns the requested campaign analytics values data<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "page_cursor",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignValuesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignValuesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ]
      }
    },
    "/api/flow-values-reports/": {
      "post": {
        "operationId": "query_flow_values",
        "summary": "Query Flow Values",
        "description": "Returns the requested flow analytics values data<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "page_cursor",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowValuesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFlowValuesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/flow-series-reports/": {
      "post": {
        "operationId": "query_flow_series",
        "summary": "Query Flow Series",
        "description": "Returns the requested flow analytics series data<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `2/m`<br>Daily: `225/d`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "page_cursor",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowSeriesRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFlowSeriesResponseDTO"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Reporting"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "2/m",
          "daily": "225/d"
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ]
      }
    },
    "/api/segments/": {
      "get": {
        "operationId": "get_segments",
        "summary": "Get Segments",
        "description": "Get all segments in an account.\n\nFilter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields.\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentListResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ]
      }
    },
    "/api/segments/{id}/": {
      "get": {
        "operationId": "get_segment",
        "summary": "Get Segment",
        "description": "Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[segment]=profile_count` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-02-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[segment]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'profile_count'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[segment]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "profile_count"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRetrieveResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ]
      },
      "patch": {
        "operationId": "update_segment",
        "summary": "Update Segment",
        "description": "Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`segments:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentPartialUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchSegmentPartialUpdateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-scopes": [
          "segments:write"
        ]
      }
    },
    "/api/segments/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_segment_relationships_tags",
        "summary": "Get Segment Relationships Tags",
        "description": "If `related_resource` is `tags`, returns the tag IDs of all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/segments/{id}/tags/": {
      "get": {
        "operationId": "get_segment_tags",
        "summary": "Get Segment Tags",
        "description": "Return all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ]
      }
    },
    "/api/segments/{id}/relationships/profiles/": {
      "get": {
        "operationId": "get_segment_relationships_profiles",
        "summary": "Get Segment Relationships Profiles",
        "description": "Get all profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for the given segment ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 1000.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 1000,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/segments/{id}/profiles/": {
      "get": {
        "operationId": "get_segment_profiles",
        "summary": "Get Segment Profiles",
        "description": "Get all profiles within a segment with the given segment ID.\n\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, `push_token`, and `joined_group_at` fields. Profiles can be sorted by the following fields, in ascending and descending order: `joined_group_at`<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "description": "Request additional fields not included by default in the response. Supported values: 'subscriptions', 'predictive_analytics'",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "predictive_analytics"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[profile]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "location.ip",
                  "properties",
                  "joined_group_at",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.can_receive_email_marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.consent_timestamp",
                  "subscriptions.email.marketing.last_updated",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppression",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.can_receive_sms_marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.consent_timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "subscriptions.sms.marketing.last_updated",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`push_token`: `any`, `equals`<br>`_kx`: `equals`<br>`joined_group_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Default: 20. Min: 1. Max: 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "joined_group_at",
                "-joined_group_at"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentMemberResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ]
      }
    },
    "/api/tags/": {
      "get": {
        "operationId": "get_tags",
        "summary": "Get Tags",
        "description": "List all tags in an account.\n\nTags can be filtered by `name`, and sorted by `name` or `id` in ascending or descending order.\n\nReturns a maximum of 50 tags per request, which can be paginated with\n[cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tags"
      },
      "post": {
        "operationId": "create_tag",
        "summary": "Create Tag",
        "description": "Create a tag. An account cannot have more than **500** unique tags.\n\nA tag belongs to a single tag group. If the `tag_group_id` is not specified,\nthe tag is added to the account's default tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tags"
      }
    },
    "/api/tags/{id}/": {
      "get": {
        "operationId": "get_tag",
        "summary": "Get Tag",
        "description": "Retrieve the tag with the given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tags"
      },
      "patch": {
        "operationId": "update_tag",
        "summary": "Update Tag",
        "description": "Update the tag with the given tag ID.\n\nOnly a tag's `name` can be changed. A tag cannot be moved from one tag group to another.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tags"
      },
      "delete": {
        "operationId": "delete_tag",
        "summary": "Delete Tag",
        "description": "Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag ID",
            "required": true,
            "schema": {
              "description": "The Tag ID",
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tags"
      }
    },
    "/api/tag-groups/": {
      "get": {
        "operationId": "get_tag_groups",
        "summary": "Get Tag Groups",
        "description": "List all tag groups in an account. Every account has one default tag group.\n\nTag groups can be filtered by `name`, `exclusive`, and `default`, and sorted by `name` or `id` in ascending or descending order.\n\nReturns a maximum of 25 tag groups per request, which can be paginated with\n[cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`exclusive`: `equals`<br>`default`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      },
      "post": {
        "operationId": "create_tag_group",
        "summary": "Create Tag Group",
        "description": "Create a tag group. An account cannot have more than **50** unique tag groups.\n\nIf `exclusive` is not specified `true` or `false`, the tag group defaults to non-exclusive.\n\nIf a tag group is non-exclusive, any given related resource (campaign, flow, etc.)\ncan be linked to multiple tags from that tag group.\nIf a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      }
    },
    "/api/tag-groups/{id}/": {
      "get": {
        "operationId": "get_tag_group",
        "summary": "Get Tag Group",
        "description": "Retrieve the tag group with the given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      },
      "patch": {
        "operationId": "update_tag_group",
        "summary": "Update Tag Group",
        "description": "Update the tag group with the given tag group ID.\n\nOnly a tag group's `name` can be changed. A tag group's `exclusive` or `default` value cannot be changed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      },
      "delete": {
        "operationId": "delete_tag_group",
        "summary": "Delete Tag Group",
        "description": "Delete the tag group with the given tag group ID.\n\nAny tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tag Group ID",
            "required": true,
            "schema": {
              "description": "The Tag Group ID",
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      }
    },
    "/api/tags/{id}/relationships/flows/": {
      "get": {
        "operationId": "get_tag_relationships_flows",
        "summary": "Get Tag Relationships Flows",
        "description": "Returns the IDs of all flows associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagFlowRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "post": {
        "operationId": "create_tag_relationships_flows",
        "summary": "Create Tag Relationships Flows",
        "description": "Associate a tag with one or more flows. Any flow cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the flow(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagFlowOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "delete": {
        "operationId": "delete_tag_relationships_flows",
        "summary": "Delete Tag Relationships Flows",
        "description": "Remove a tag's association with one or more flows.\n\n\nUse the request body to pass in the ID(s) of the flows(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagFlowOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "flows:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/tags/{id}/relationships/campaigns/": {
      "get": {
        "operationId": "get_tag_relationships_campaigns",
        "summary": "Get Tag Relationships Campaigns",
        "description": "Returns the IDs of all campaigns associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagCampaignRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "post": {
        "operationId": "create_tag_relationships_campaigns",
        "summary": "Create Tag Relationships Campaigns",
        "description": "Associate a tag with one or more campaigns. Any campaign cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the campaign(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCampaignOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "delete": {
        "operationId": "delete_tag_relationships_campaigns",
        "summary": "Delete Tag Relationships Campaigns",
        "description": "Remove a tag's association with one or more campaigns.\n\n\nUse the request body to pass in the ID(s) of the campaign(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCampaignOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "campaigns:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/tags/{id}/relationships/lists/": {
      "get": {
        "operationId": "get_tag_relationships_lists",
        "summary": "Get Tag Relationships Lists",
        "description": "Returns the IDs of all lists associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "post": {
        "operationId": "create_tag_relationships_lists",
        "summary": "Create Tag Relationships Lists",
        "description": "Associate a tag with one or more lists. Any list cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the lists(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagListOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "delete": {
        "operationId": "delete_tag_relationships_lists",
        "summary": "Delete Tag Relationships Lists",
        "description": "Remove a tag's association with one or more lists.\n\n\nUse the request body to pass in the ID(s) of the list(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`lists:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagListOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "lists:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/tags/{id}/relationships/segments/": {
      "get": {
        "operationId": "get_tag_relationships_segments",
        "summary": "Get Tag Relationships Segments",
        "description": "Returns the IDs of all segments associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "post": {
        "operationId": "create_tag_relationships_segments",
        "summary": "Create Tag Relationships Segments",
        "description": "Associate a tag with one or more segments. Any segment cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the segments(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      },
      "delete": {
        "operationId": "delete_tag_relationships_segments",
        "summary": "Delete Tag Relationships Segments",
        "description": "Remove a tag's association with one or more segments.\n\n\nUse the request body to pass in the ID(s) of the segments(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "segments:write",
          "tags:write"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/tags/{id}/relationships/tag-group/": {
      "get": {
        "operationId": "get_tag_relationships_tag_group",
        "summary": "Get Tag Relationships Tag Group",
        "description": "Returns the id of the tag group related to the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagTagGroupRelationshipsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/tag-groups/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_tag_group_relationships_tags",
        "summary": "Get Tag Group Relationships Tags",
        "description": "Returns the tag IDs of all tags inside the given tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupTagRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Relationships"
      }
    },
    "/api/tags/{id}/tag-group/": {
      "get": {
        "operationId": "get_tag_tag_group",
        "summary": "Get Tag Tag Group",
        "description": "Returns the tag group resource for a given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag-group]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tags"
      }
    },
    "/api/tag-groups/{id}/tags/": {
      "get": {
        "operationId": "get_tag_group_tags",
        "summary": "Get Tag Group Tags",
        "description": "Return the tags for a given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields[tag]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "x-klaviyo-subtag": "Tag Groups"
      }
    },
    "/api/templates/": {
      "get": {
        "operationId": "get_templates",
        "summary": "Get Templates",
        "description": "Get all templates in an account.\n\nFilter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated`\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sorting",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      },
      "post": {
        "operationId": "create_template",
        "summary": "Create Template",
        "description": "Create a new custom HTML template.\n\nIf there are 1,000 or more templates in an account, creation will fail as there is a limit of 1,000 templates\nthat can be created via the API.\n\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCreateQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      }
    },
    "/api/templates/{id}/": {
      "get": {
        "operationId": "get_template",
        "summary": "Get Template",
        "description": "Get a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of template",
            "required": true,
            "schema": {
              "description": "The ID of template",
              "type": "string"
            }
          },
          {
            "name": "fields[template]",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "explode": false
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      },
      "patch": {
        "operationId": "update_template",
        "summary": "Update Template",
        "description": "Update a template with the given template ID. Does not currently update drag & drop templates.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of template",
            "required": true,
            "schema": {
              "description": "The ID of template",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateUpdateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      },
      "delete": {
        "operationId": "delete_template",
        "summary": "Delete Template",
        "description": "Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of template",
            "required": true,
            "schema": {
              "description": "The ID of template",
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      }
    },
    "/api/template-render/": {
      "post": {
        "operationId": "create_template_render",
        "summary": "Create Template Render",
        "description": "Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).\n\n* `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.\n\nEmail templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.\n\nEx. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRenderQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ]
      }
    },
    "/api/template-clone/": {
      "post": {
        "operationId": "create_template_clone",
        "summary": "Create Template Clone",
        "description": "Create a clone of a template with the given template ID.\n\nIf there are 1,000 or more templates in an account, cloning will fail as there is a limit of 1,000 templates\nthat can be created via the API.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCloneQuery"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Templates"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "templates:write"
        ]
      }
    },
    "/client/subscriptions/": {
      "post": {
        "operationId": "create_client_subscription",
        "summary": "Create Client Subscription",
        "description": "*Rate limits*:<br>Burst: `100/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "description": "Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number\nattributes respectively. One of either email or phone_number must be provided. To create a subscription and consent\nrecord for only one channel but still include the other channel as a profile property the consent channel can\nbe provided as a top level attribute and the other channel can be included in the properties object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteSubscriptionCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "100/s",
          "steady": "700/m"
        },
        "x-klaviyo-scopes": [
          "subscriptions:write"
        ]
      }
    },
    "/client/push-tokens/": {
      "post": {
        "operationId": "create_client_push_token",
        "summary": "Create or Update Client Push Token",
        "description": "Create or update a push token.\n\nThis endpoint is designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)).\nYou must have push notifications enabled to use this endpoint.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": []
      }
    },
    "/client/push-token-unregister/": {
      "post": {
        "operationId": "unregister_client_push_token",
        "summary": "Unregister Client Push Token",
        "description": "Unregister a push token.\n\nThis endpoint is designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)).\nYou must have push notifications enabled to use this endpoint.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenUnregisterQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": []
      }
    },
    "/client/events/": {
      "post": {
        "operationId": "create_client_event",
        "summary": "Create Client Event",
        "description": "Create a new event to track a profile's activity.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create events from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQueryV2"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "events:write"
        ]
      }
    },
    "/client/profiles/": {
      "post": {
        "operationId": "create_client_profile",
        "summary": "Create or Update Client Profile",
        "description": "Create and update properties about a profile without tracking an associated event.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteProfileCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ]
      }
    },
    "/client/event-bulk-create/": {
      "post": {
        "operationId": "bulk_create_client_events",
        "summary": "Bulk Create Client Events",
        "description": "Create new events to track a profile's activity.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only.\n\nAccepts a maximum of `1000` events per request.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsBulkCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "events:write"
        ]
      }
    },
    "/client/back-in-stock-subscriptions/": {
      "post": {
        "operationId": "create_client_back_in_stock_subscription",
        "summary": "Create Client Back In Stock Subscription",
        "description": "Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "company_id",
            "in": "query",
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "required": true,
            "schema": {
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
              "type": "string",
              "example": "PUBLIC_API_KEY"
            }
          },
          {
            "name": "revision",
            "in": "header",
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "required": true,
            "schema": {
              "type": "string",
              "default": "2024-02-15"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientBISSubscriptionCreateQuery"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-pre-release": "None",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-scopes": [
          "catalogs:write",
          "profiles:write"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CouponResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "type": "string",
            "example": "10OFF"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                "type": "string",
                "example": "10OFF"
              },
              "description": {
                "description": "A description of the coupon.",
                "type": "string",
                "example": "10% off for purchases over $50"
              }
            },
            "required": [
              "external_id"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCouponResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCouponCodeRelationshipCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponEnum"
              },
              "id": {
                "description": "The parent coupon ID for the given coupon code.",
                "type": "string",
                "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                "type": "string",
                "example": "ASD325FHK324UJDOI2M3JNES99"
              },
              "expires_at": {
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01T00:00:00Z"
              },
              "status": {
                "description": "The current status of the coupon code.",
                "type": "string",
                "example": "UNASSIGNED",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "VERSION_NOT_ACTIVE"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCouponCodeResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "coupon": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CouponEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "10OFF"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponResponseObjectResource"
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCouponCodeResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "coupon": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/CouponEnum"
                              },
                              "id": {
                                "type": "string",
                                "example": "10OFF"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "profile": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCouponCodeResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "coupon": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCouponRelationshipCouponCodesListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CouponCodeEnum"
                },
                "id": {
                  "description": "A list of coupon code IDs that are in the given coupon.",
                  "type": "string",
                  "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1"
              },
              "title": {
                "description": "The title of the catalog item.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)"
              },
              "description": {
                "description": "A description of the catalog item.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                "type": "number",
                "example": 42
              },
              "url": {
                "description": "URL pointing to the location of the catalog item on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item.",
                "type": "string",
                "example": "https://via.placeholder.com/300"
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ]
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                }
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item is published.",
                "type": "boolean",
                "example": true
              },
              "created": {
                "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogItemResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item variant in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              },
              "title": {
                "description": "The title of the catalog item variant.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium"
              },
              "description": {
                "description": "A description of the catalog item variant.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
              },
              "sku": {
                "description": "The SKU of the catalog item variant.",
                "type": "string",
                "example": "OBS-MD"
              },
              "inventory_policy": {
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "type": "integer",
                "example": 2,
                "enum": [
                  0,
                  1,
                  2
                ]
              },
              "inventory_quantity": {
                "description": "The quantity of the catalog item variant currently in stock.",
                "type": "number",
                "example": 25
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                "type": "number",
                "example": 42
              },
              "url": {
                "description": "URL pointing to the location of the catalog item variant on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/300"
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ]
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                }
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item variant is published.",
                "type": "boolean",
                "example": true
              },
              "created": {
                "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogVariantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog category in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL"
              },
              "name": {
                "description": "The name of the catalog category.",
                "type": "string",
                "example": "Sample Data Category Apparel"
              },
              "updated": {
                "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogCategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "description": "A pointer to the source of the error in the request payload.",
            "type": "string",
            "example": "/data",
            "default": "/data"
          }
        },
        "required": [
          "pointer"
        ]
      },
      "APIJobErrorPayload": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the error.",
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94"
          },
          "code": {
            "description": "A code for classifying the error type.",
            "type": "string",
            "example": "invalid"
          },
          "title": {
            "description": "A high-level message about the error.",
            "type": "string",
            "example": "Invalid input"
          },
          "detail": {
            "description": "Specific details about the error.",
            "type": "string",
            "example": "The payload provided in the request is invalid."
          },
          "source": {
            "description": "Additional information on the source of the error.",
            "$ref": "#/components/schemas/ErrorSource"
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "detail",
          "source"
        ]
      },
      "CouponCodeCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCouponCodeCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CouponCodeCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "coupon-codes": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CouponCodeEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created coupon codes.",
                                    "type": "string",
                                    "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCouponCodeCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CouponCodeCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "coupon-codes": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CouponCodeEnum"
                                },
                                "id": {
                                  "description": "IDs of the created coupon codes.",
                                  "type": "string",
                                  "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponCodeResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogCategoryItemListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "description": "A list of catalog item IDs that are in the given category.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCatalogItemCategoryListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "description": "A list of catalog category IDs representing the categories the item is in",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "EventResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "id": {
            "description": "The Event ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "timestamp": {
                "description": "Event timestamp in seconds",
                "type": "integer"
              },
              "event_properties": {
                "description": "Event properties, can include identifiers and extra properties",
                "type": "object"
              },
              "datetime": {
                "description": "Event timestamp in ISO8601 format (YYYY-MM-DDTHH:MM:SS+hh:mm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T01:23:45+00:00"
              },
              "uuid": {
                "description": "A unique identifier for the event, this can be used as a cursor in pagination",
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetEventResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profile": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ProfileEnum"
                                },
                                "id": {
                                  "description": "Profile ID of the associated profile, if available",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "metric": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/MetricEnum"
                                },
                                "id": {
                                  "description": "The Metric ID",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "attributions": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/AttributionEnum"
                                  },
                                  "id": {
                                    "description": "Attributions for this event",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/MetricResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetEventResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profile": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/ProfileEnum"
                              },
                              "id": {
                                "description": "Profile ID of the associated profile, if available",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "metric": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/MetricEnum"
                              },
                              "id": {
                                "description": "The Metric ID",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "attributions": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/AttributionEnum"
                                },
                                "id": {
                                  "description": "Attributions for this event",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AttributionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/MetricResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "id": {
            "description": "The Metric ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the metric",
                "type": "string"
              },
              "created": {
                "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string"
              },
              "updated": {
                "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string"
              },
              "integration": {
                "description": "The integration associated with the event",
                "type": "object"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetMetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileLocation": {
        "type": "object",
        "properties": {
          "address1": {
            "description": "First line of street address",
            "type": "string",
            "example": "89 E 42nd St"
          },
          "address2": {
            "description": "Second line of street address",
            "type": "string",
            "example": "1st floor"
          },
          "city": {
            "description": "City name",
            "type": "string",
            "example": "New York"
          },
          "country": {
            "description": "Country name",
            "type": "string",
            "example": "United States"
          },
          "latitude": {
            "description": "Latitude coordinate. We recommend providing a precision of four decimal places.",
            "example": "40.7128",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "longitude": {
            "description": "Longitude coordinate. We recommend providing a precision of four decimal places.",
            "example": "74.0060",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "region": {
            "description": "Region within a country, such as state or province",
            "type": "string",
            "example": "NY"
          },
          "zip": {
            "description": "Zip code",
            "type": "string",
            "example": "10017"
          },
          "timezone": {
            "description": "Time zone name. We recommend using time zones from the IANA Time Zone Database.",
            "type": "string",
            "example": "America/New_York"
          },
          "ip": {
            "description": "IP Address",
            "type": "string",
            "example": "127.0.0.1"
          }
        }
      },
      "EmailMarketingSuppression": {
        "type": "object",
        "properties": {
          "reason": {
            "description": "The reason the profile was suppressed from the list.",
            "type": "string",
            "example": "HARD_BOUNCE"
          },
          "timestamp": {
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          }
        },
        "required": [
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketingListSuppression": {
        "type": "object",
        "properties": {
          "list_id": {
            "description": "The ID of list to which the suppression applies.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "reason": {
            "description": "The reason the profile was suppressed from the list.",
            "type": "string",
            "example": "USER_SUPPRESSED"
          },
          "timestamp": {
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          }
        },
        "required": [
          "list_id",
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketing": {
        "type": "object",
        "properties": {
          "can_receive_email_marketing": {
            "description": "Whether or not this profile has implicit consent to receive email marketing. True if it does profile does not have any global suppressions.",
            "type": "boolean"
          },
          "consent": {
            "description": "The consent status for email marketing.",
            "type": "string",
            "example": "SUBSCRIBED"
          },
          "consent_timestamp": {
            "description": "The timestamp when consent was recorded or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          },
          "last_updated": {
            "description": "The timestamp when a field on the email marketing object was last modified.",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          },
          "method": {
            "description": "The method by which the profile was subscribed to email marketing.",
            "type": "string",
            "example": "PREFERENCE_PAGE"
          },
          "method_detail": {
            "description": "Additional details about the method by which the profile was subscribed to email marketing. This may be empty if no details were provided.",
            "type": "string",
            "example": "mydomain.com/signup",
            "default": ""
          },
          "custom_method_detail": {
            "description": "Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided.",
            "type": "string",
            "example": "marketing drive"
          },
          "double_optin": {
            "description": "Whether the profile was subscribed to email marketing using a double opt-in.",
            "type": "boolean",
            "example": "True"
          },
          "suppression": {
            "description": "The global email marketing suppression for this profile.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingSuppression"
            }
          },
          "list_suppressions": {
            "description": "The list suppressions for this profile.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingListSuppression"
            }
          }
        },
        "required": [
          "can_receive_email_marketing",
          "consent"
        ]
      },
      "EmailChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The email marketing subscription.",
            "$ref": "#/components/schemas/EmailMarketing"
          }
        }
      },
      "SMSMarketing": {
        "type": "object",
        "properties": {
          "can_receive_sms_marketing": {
            "description": "Whether or not this profile is subscribed to receive SMS marketing.",
            "type": "boolean"
          },
          "consent": {
            "description": "The consent status for SMS marketing.",
            "type": "string",
            "example": "SUBSCRIBED"
          },
          "consent_timestamp": {
            "description": "The timestamp when consent was recorded or updated for SMS marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          },
          "method": {
            "description": "The method by which the profile was subscribed to SMS marketing.",
            "type": "string",
            "example": "TEXT"
          },
          "method_detail": {
            "description": "Additional details about the method which the profile was subscribed to SMS marketing. This may be empty if no details were provided.",
            "type": "string",
            "example": "JOIN",
            "default": ""
          },
          "last_updated": {
            "description": "The timestamp when the SMS consent record was last modified, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00"
          }
        },
        "required": [
          "can_receive_sms_marketing",
          "consent",
          "consent_timestamp",
          "method",
          "last_updated"
        ]
      },
      "SMSChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The SMS marketing subscription.",
            "$ref": "#/components/schemas/SMSMarketing"
          }
        }
      },
      "Subscriptions": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email channel subscription.",
            "$ref": "#/components/schemas/EmailChannel"
          },
          "sms": {
            "description": "The SMS channel subscription.",
            "$ref": "#/components/schemas/SMSChannel"
          }
        }
      },
      "PredictiveAnalytics": {
        "type": "object",
        "properties": {
          "historic_clv": {
            "description": "Total value of all historically placed orders",
            "type": "number",
            "example": 93.87
          },
          "predicted_clv": {
            "description": "Predicted value of all placed orders in the next 365 days",
            "type": "number",
            "example": 27.24
          },
          "total_clv": {
            "description": "Sum of historic and predicted CLV",
            "type": "number",
            "example": 121.11
          },
          "historic_number_of_orders": {
            "description": "Number of already placed orders",
            "type": "integer",
            "example": 2
          },
          "predicted_number_of_orders": {
            "description": "Predicted number of placed orders in the next 365 days",
            "type": "number",
            "example": 0.54
          },
          "average_days_between_orders": {
            "description": "Average number of days between orders (None if only one order has been placed)",
            "type": "number",
            "example": 189
          },
          "average_order_value": {
            "description": "Average value of placed orders",
            "type": "number",
            "example": 46.94
          },
          "churn_probability": {
            "description": "Probability the customer has churned",
            "type": "number",
            "example": 0.89
          },
          "expected_date_of_next_order": {
            "description": "Expected date of next order, as calculated at the time of their most recent order",
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00"
          }
        }
      },
      "ProfileResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah"
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason"
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Klaviyo"
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Engineer"
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
              },
              "created": {
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "last_event_date": {
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "attributes",
          "links"
        ]
      },
      "GetProfileResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ProfileEnum"
                  },
                  "attributes": {
                    "properties": {
                      "subscriptions": {
                        "$ref": "#/components/schemas/Subscriptions"
                      },
                      "predictive_analytics": {
                        "$ref": "#/components/schemas/PredictiveAnalytics"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetEventMetricsRelationshipListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MetricEnum"
              },
              "id": {
                "description": "Related Metric ID",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetEventProfilesRelationshipListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "description": "Related Profile ID",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMetricResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ListListResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter"
              },
              "created": {
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "opt_in_process": {
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetListListResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ListRetrieveResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter"
              },
              "created": {
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "opt_in_process": {
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetListRetrieveResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ListRetrieveResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profiles": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ListEnum"
                  },
                  "attributes": {
                    "properties": {
                      "profile_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetListTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "description": "The Tag ID",
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag name",
                "type": "string",
                "example": "My Tag"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetTagResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tag-group": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "campaigns": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flows": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ListMemberResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah"
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason"
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Klaviyo"
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Engineer"
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
              },
              "created": {
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "last_event_date": {
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                }
              },
              "joined_group_at": {
                "description": "The datetime when this profile most recently joined the list.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "joined_group_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "attributes",
          "links"
        ]
      },
      "GetListMemberResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListMemberResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions"
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SegmentListResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the segment",
                "type": "string",
                "example": "Repeat Purchasers"
              },
              "created": {
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetSegmentListResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SegmentRetrieveResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the segment",
                "type": "string",
                "example": "Repeat Purchasers"
              },
              "created": {
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetSegmentRetrieveResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SegmentRetrieveResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profiles": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/SegmentEnum"
                  },
                  "attributes": {
                    "properties": {
                      "profile_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetSegmentTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetSegmentRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentMemberResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah"
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason"
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Klaviyo"
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Engineer"
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
              },
              "created": {
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "last_event_date": {
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                }
              },
              "joined_group_at": {
                "description": "The datetime when this profile most recently joined the segment.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "joined_group_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "attributes",
          "links"
        ]
      },
      "GetSegmentMemberResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentMemberResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions"
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetProfileResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions"
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetProfileResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ListEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/SegmentEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ProfileEnum"
                  },
                  "attributes": {
                    "properties": {
                      "subscriptions": {
                        "$ref": "#/components/schemas/Subscriptions"
                      },
                      "predictive_analytics": {
                        "$ref": "#/components/schemas/PredictiveAnalytics"
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ListResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter"
              },
              "created": {
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "opt_in_process": {
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetProfileListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the segment",
                "type": "string",
                "example": "Repeat Purchasers"
              },
              "created": {
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetSegmentResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetProfileSegmentRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileImportJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "started_at": {
                "description": "Date and time the job started processing in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetProfileImportJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileImportJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ListEnum"
                                  },
                                  "id": {
                                    "description": "List to add the profiles to",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "import-errors": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetProfileImportJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileImportJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ListEnum"
                                },
                                "id": {
                                  "description": "List to add the profiles to",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "profiles": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "import-errors": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileImportJobListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "subscriptions": {
                          "$ref": "#/components/schemas/Subscriptions"
                        },
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetProfileImportJobProfileRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ImportErrorResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImportErrorEnum"
          },
          "id": {
            "description": "Unique identifier for the error.",
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "code": {
                "description": "A code for classifying the error type.",
                "type": "string",
                "example": "invalid"
              },
              "title": {
                "description": "A high-level message about the error.",
                "type": "string",
                "example": "Invalid input"
              },
              "detail": {
                "description": "Specific details about the error.",
                "type": "string",
                "example": "The payload provided in the request is invalid."
              },
              "source": {
                "description": "Additional information on the source of the error.",
                "$ref": "#/components/schemas/ErrorSource"
              },
              "original_payload": {
                "type": "object"
              }
            },
            "required": [
              "code",
              "title",
              "detail",
              "source"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetImportErrorResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportErrorResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "FlowResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "archived": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "trigger_type": {
                "description": "Corresponds to the object which triggered the flow.",
                "type": "string",
                "enum": [
                  "Added to List",
                  "Date Based",
                  "Low Inventory",
                  "Metric",
                  "Price Drop",
                  "Unconfigured"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-actions": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowActionEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetFlowResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-actions": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowActionEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "SMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "FlowActionResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowActionEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "settings": {
                "type": "object"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions"
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowActionResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-messages": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetFlowFlowActionRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowActionEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "flow-messages": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowMessageEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-actions": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionFlowRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_label": {
            "type": "string"
          },
          "reply_to_email": {
            "type": "string"
          },
          "cc_email": {
            "type": "string"
          },
          "bcc_email": {
            "type": "string"
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_label"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media_url": {
            "type": "string"
          }
        },
        "required": [
          "body"
        ]
      },
      "FlowMessageResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowMessageEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetFlowMessageResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-action": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "template": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetFlowActionFlowMessageRelationshipResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowMessageEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowMessageResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-action": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowActionEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "template": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowActionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-messages": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowMessageFlowActionRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowActionEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetFlowMessageTemplateRelationshipResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string"
              },
              "editor_type": {
                "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor",
                "type": "string"
              },
              "html": {
                "description": "The rendered HTML of the template",
                "type": "string"
              },
              "text": {
                "description": "The template plain_text",
                "type": "string"
              },
              "created": {
                "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "editor_type",
              "html"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetTemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "AudiencesSubObject": {
        "type": "object",
        "properties": {
          "included": {
            "description": "A list of included audiences",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Y6nRLr"
            ]
          },
          "excluded": {
            "description": "An optional list of excluded audiences",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "UTd5ui"
            ]
          }
        }
      },
      "EmailSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "description": "Use smart sending. Defaults to True",
            "type": "boolean"
          }
        }
      },
      "SMSSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "description": "Use smart sending. Defaults to True",
            "type": "boolean"
          }
        }
      },
      "UTMParamsSubObject": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the UTM param",
            "type": "string",
            "example": "utm_medium"
          },
          "value": {
            "description": "Value of the UTM param. Can be templated data.",
            "type": "string",
            "example": "campaign"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_add_utm": {
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used.",
            "type": "boolean"
          },
          "utm_params": {
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            }
          },
          "is_tracking_clicks": {
            "description": "Whether the campaign is tracking click events. If not specified, uses company defaults.",
            "type": "boolean"
          },
          "is_tracking_opens": {
            "description": "Whether the campaign is tracking open events. If not specified, uses company defaults.",
            "type": "boolean"
          }
        }
      },
      "SMSTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_add_utm": {
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used.",
            "type": "boolean"
          },
          "utm_params": {
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            }
          }
        }
      },
      "StaticScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "description": "The time to send at",
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00"
          },
          "is_local": {
            "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False.",
            "type": "boolean"
          },
          "send_past_recipients_immediately": {
            "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False.",
            "type": "boolean"
          }
        },
        "required": [
          "datetime"
        ]
      },
      "ThrottledScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "description": "The time to send at",
            "type": "string",
            "format": "date-time"
          },
          "throttle_percentage": {
            "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]",
            "type": "integer"
          }
        },
        "required": [
          "datetime",
          "throttle_percentage"
        ]
      },
      "STOScheduleOptions": {
        "type": "object",
        "properties": {
          "date": {
            "description": "The day to send on",
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "date"
        ]
      },
      "SendStrategySubObject": {
        "type": "object",
        "properties": {
          "method": {
            "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate', 'smart_send_time']",
            "type": "string",
            "example": "static"
          },
          "options_static": {
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method.",
            "$ref": "#/components/schemas/StaticScheduleOptions"
          },
          "options_throttled": {
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method.",
            "$ref": "#/components/schemas/ThrottledScheduleOptions"
          },
          "options_sto": {
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'smart_send_time' method.",
            "$ref": "#/components/schemas/STOScheduleOptions"
          }
        },
        "required": [
          "method"
        ]
      },
      "CampaignResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "description": "The campaign ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The campaign name",
                "type": "string"
              },
              "status": {
                "description": "The current status of the campaign",
                "type": "string"
              },
              "archived": {
                "description": "Whether the campaign has been archived or not",
                "type": "boolean"
              },
              "audiences": {
                "description": "The audiences to be included and/or excluded from the campaign",
                "$ref": "#/components/schemas/AudiencesSubObject"
              },
              "send_options": {
                "description": "Options to use when sending a campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ]
              },
              "tracking_options": {
                "description": "The tracking options associated with the campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ]
              },
              "send_strategy": {
                "description": "The send strategy the campaign will send with",
                "$ref": "#/components/schemas/SendStrategySubObject"
              },
              "created_at": {
                "description": "The datetime when the campaign was created",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "scheduled_at": {
                "description": "The datetime when the campaign was scheduled for future sending",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated_at": {
                "description": "The datetime when the campaign was last updated by a user or the system",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "send_time": {
                "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "status",
              "archived",
              "audiences",
              "send_options",
              "tracking_options",
              "send_strategy",
              "created_at",
              "scheduled_at",
              "updated_at",
              "send_time"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "campaign-messages": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CampaignMessageEnum"
                                  },
                                  "id": {
                                    "description": "The message(s) associated with the campaign",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCampaignResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign-messages": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CampaignMessageEnum"
                                },
                                "id": {
                                  "description": "The message(s) associated with the campaign",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailContentSubObject": {
        "type": "object",
        "properties": {
          "subject": {
            "description": "The subject of the message",
            "type": "string",
            "example": "Buy our product!"
          },
          "preview_text": {
            "description": "Preview text associated with the message",
            "type": "string",
            "example": "My preview text"
          },
          "from_email": {
            "description": "The email the message should be sent from",
            "type": "string",
            "example": "store@my-company.com"
          },
          "from_label": {
            "description": "The label associated with the from_email",
            "type": "string",
            "example": "My Company"
          },
          "reply_to_email": {
            "description": "Optional Reply-To email address",
            "type": "string",
            "example": "reply-to@my-company.com"
          },
          "cc_email": {
            "description": "Optional CC email address",
            "type": "string",
            "example": "cc@my-company.com"
          },
          "bcc_email": {
            "description": "Optional BCC email address",
            "type": "string",
            "example": "bcc@my-company.com"
          }
        }
      },
      "SMSContentSubObject": {
        "type": "object",
        "properties": {
          "body": {
            "description": "The message body",
            "type": "string",
            "example": "My preview sms"
          },
          "media_url": {
            "description": "URL for included media",
            "type": "string"
          }
        }
      },
      "SendTimeSubObject": {
        "type": "object",
        "properties": {
          "datetime": {
            "description": "The datetime that the message is to be sent",
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00"
          },
          "is_local": {
            "description": "Whether that datetime is to be a local datetime for the recipient",
            "type": "boolean"
          }
        },
        "required": [
          "datetime",
          "is_local"
        ]
      },
      "RenderOptionsSubObject": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_org_prefix": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_info_link": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_opt_out_language": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "CampaignMessageResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "description": "The message ID",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "description": "The label or name on the message",
                "type": "string"
              },
              "channel": {
                "description": "The channel the message is to be sent on",
                "type": "string"
              },
              "content": {
                "description": "Additional attributes relating to the content of the message",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObject"
                  }
                ]
              },
              "send_times": {
                "description": "The list of appropriate Send Time Sub-objects associated with the message",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SendTimeSubObject"
                }
              },
              "render_options": {
                "description": "Additional options for rendering the message",
                "$ref": "#/components/schemas/RenderOptionsSubObject"
              },
              "created_at": {
                "description": "The datetime when the message was created",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated_at": {
                "description": "The datetime when the message was last updated",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "label",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignMessageResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/CampaignEnum"
                              },
                              "id": {
                                "description": "The parent campaign id",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "template": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "description": "The associated template id",
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessageCampaignRelationshipListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign-messages": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessageTemplateRelationshipListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignTagRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessagesRelationshipListResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignMessageEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetCampaignMessageResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "campaign": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CampaignEnum"
                                },
                                "id": {
                                  "description": "The parent campaign id",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "template": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TemplateEnum"
                                },
                                "id": {
                                  "description": "The associated template id",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CampaignSendJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "description": "The ID of the campaign to send",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the send job",
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignSendJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignRecipientEstimationJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
          },
          "id": {
            "description": "The ID of the campaign used for estimating recipients",
            "type": "string",
            "example": "01GMRWDSA0ARTAKE1SFX8JGXAY"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the recipient estimation job",
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignRecipientEstimationJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignRecipientEstimationResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationEnum"
          },
          "id": {
            "description": "The ID of the campaign for which to get the estimated number of recipients",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "estimated_recipient_count": {
                "description": "The estimated number of unique recipients the campaign will send to",
                "type": "integer"
              }
            },
            "required": [
              "estimated_recipient_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCampaignRecipientEstimationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTemplateResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CatalogItemCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created catalog items.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogItemCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "description": "IDs of the created catalog items.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemUpdateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the updated catalog items.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogItemUpdateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "description": "IDs of the updated catalog items.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemDeleteJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogItemDeleteJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogItemDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created catalog variants.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogVariantCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "description": "IDs of the created catalog variants.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantUpdateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the updated catalog variants.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogVariantUpdateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "description": "IDs of the updated catalog variants.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantDeleteJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogVariantDeleteJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogVariantDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryCreateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogCategoryEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the created catalog categories.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogCategoryCreateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                                },
                                "id": {
                                  "description": "IDs of the created catalog categories.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryUpdateJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogCategoryEnum"
                                  },
                                  "id": {
                                    "description": "IDs of the updated catalog categories.",
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogCategoryUpdateJobResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                                },
                                "id": {
                                  "description": "IDs of the updated catalog categories.",
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryDeleteJobResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "id": {
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status of the asynchronous job.",
                "type": "string",
                "example": "processing",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ]
              },
              "created_at": {
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "total_count": {
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                "type": "integer",
                "example": 10
              },
              "completed_count": {
                "description": "The total number of operations that have been completed by the job.",
                "type": "integer",
                "example": 9,
                "default": 0
              },
              "failed_count": {
                "description": "The total number of operations that have failed as part of the job.",
                "type": "integer",
                "example": 1,
                "default": 0
              },
              "completed_at": {
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "errors": {
                "description": "Array of errors encountered during the processing of the job.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                }
              },
              "expires_at": {
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetCatalogCategoryDeleteJobResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagResponseCollectionCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tag-group": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagGroupEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "id"
                              ]
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "campaigns": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flows": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupResponseObjectResource"
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetTagResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tag-group": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TagGroupEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id"
                            ]
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        },
                        "required": [
                          "data"
                        ]
                      },
                      "lists": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "campaigns": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flows": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "description": "The Tag Group ID",
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag Group name",
                "type": "string",
                "example": "My Tag Group"
              },
              "exclusive": {
                "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                "type": "boolean"
              },
              "default": {
                "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "exclusive",
              "default"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetTagGroupResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagGroupResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagGroupResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagFlowRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "description": "The IDs of all flows that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagCampaignRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "description": "The IDs of all campaigns that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagListRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "description": "The IDs of all lists that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagSegmentRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "description": "The IDs of all segments that are associated with the Tag",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagTagGroupRelationshipsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The ID of the Tag Group the Tag is associated with",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              }
            },
            "required": [
              "type",
              "id"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTagGroupTagRelationshipsResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "description": "The IDs of the Tags that are associated with the Tag Group",
                  "type": "string",
                  "example": [
                    "abcd1234-ef56-gh78-ij90-abcdef123456",
                    "klmn1234-op56-qr78-st90-klmnop123456"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "StreetAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "example": "125 Summer Street"
          },
          "address2": {
            "type": "string",
            "example": "5th Floor"
          },
          "city": {
            "type": "string",
            "example": "Boston"
          },
          "region": {
            "description": "State, province, or region.",
            "type": "string",
            "example": "MA"
          },
          "country": {
            "description": "Two-letter [ISO country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)",
            "type": "string",
            "example": "US"
          },
          "zip": {
            "type": "string",
            "example": "04323"
          }
        },
        "required": [
          "address1",
          "address2",
          "city",
          "region",
          "country",
          "zip"
        ]
      },
      "ContactInformation": {
        "type": "object",
        "properties": {
          "default_sender_name": {
            "description": "This field is used to auto-populate the default sender name on flow and campaign emails.",
            "type": "string",
            "example": "Klaviyo Demo"
          },
          "default_sender_email": {
            "description": "This field is used to auto-populate the default sender email address on flow and campaign emails.",
            "type": "string",
            "example": "contact@klaviyo-demo.com"
          },
          "website_url": {
            "type": "string",
            "example": "https://www.klaviyo.com"
          },
          "organization_name": {
            "type": "string",
            "example": "Klaviyo Demo"
          },
          "street_address": {
            "description": "Street address for your organization.",
            "$ref": "#/components/schemas/StreetAddress"
          }
        },
        "required": [
          "default_sender_name",
          "default_sender_email",
          "website_url",
          "organization_name",
          "street_address"
        ]
      },
      "AccountResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AccountEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "contact_information": {
                "description": "Contact information for the account. This is used in email footers by default to comply with the CAN-SPAM act.",
                "$ref": "#/components/schemas/ContactInformation"
              },
              "industry": {
                "description": "The kind of business and/or types of goods that the business sells. This is leveraged in Klaviyo analytics and guidance.",
                "type": "string",
                "example": "Software / SaaS"
              },
              "timezone": {
                "description": "The account's timezone is used when displaying dates and times. This is an IANA timezone. See [the full list here ](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).",
                "type": "string",
                "example": "US/Eastern"
              },
              "preferred_currency": {
                "description": "The preferred currency for the account. This is the currency used for currency-based metrics in dashboards, analytics, coupons, and templates.",
                "type": "string",
                "example": "USD"
              },
              "public_api_key": {
                "description": "The Public API Key can be used for client-side API calls. [More info here](https://developers.klaviyo.com/en/docs/retrieve_api_credentials).",
                "type": "string",
                "example": "AbC123"
              }
            },
            "required": [
              "contact_information",
              "industry",
              "timezone",
              "preferred_currency",
              "public_api_key"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetAccountResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetAccountResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "ImageResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "description": "The ID of the image",
            "type": "string",
            "example": "7"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "hidden": {
                "type": "boolean"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "image_url",
              "format",
              "size",
              "hidden",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "GetImageResponseCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GetImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImageResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                "type": "string",
                "example": "10OFF"
              },
              "description": {
                "description": "A description of the coupon.",
                "type": "string",
                "example": "10% off for purchases over $50"
              }
            },
            "required": [
              "external_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CouponCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponEnum"
              },
              "id": {
                "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
                "type": "string",
                "example": "10OFF"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                    "type": "string",
                    "example": "10OFF"
                  },
                  "description": {
                    "description": "A description of the coupon.",
                    "type": "string",
                    "example": "10% off for purchases over $50"
                  }
                },
                "required": [
                  "external_id"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                "type": "string",
                "example": "ASD325FHK324UJDOI2M3JNES99"
              },
              "expires_at": {
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01T00:00:00Z"
              }
            },
            "required": [
              "unique_code"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "coupon": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CouponEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "10OFF"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "coupon"
            ]
          }
        },
        "required": [
          "type",
          "attributes",
          "relationships"
        ]
      },
      "CouponCodeCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCouponCodeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponCodeEnum"
              },
              "id": {
                "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
                "type": "string",
                "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "unique_code": {
                    "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                    "type": "string",
                    "example": "ASD325FHK324UJDOI2M3JNES99"
                  },
                  "expires_at": {
                    "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-01T00:00:00Z"
                  },
                  "status": {
                    "description": "The current status of the coupon code.",
                    "type": "string",
                    "example": "UNASSIGNED",
                    "enum": [
                      "ASSIGNED_TO_PROFILE",
                      "DELETING",
                      "PROCESSING",
                      "UNASSIGNED",
                      "VERSION_NOT_ACTIVE"
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "coupon": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CouponEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "10OFF"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/ProfileEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1"
              },
              "integration_type": {
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "type": "string",
                "example": "$custom",
                "default": "$custom",
                "enum": [
                  "$custom"
                ]
              },
              "title": {
                "description": "The title of the catalog item.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)"
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                "type": "number",
                "example": 42
              },
              "catalog_type": {
                "description": "The type of catalog. Currently only \"$default\" is supported.",
                "type": "string",
                "example": "$default",
                "default": "$default"
              },
              "description": {
                "description": "A description of the catalog item.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
              },
              "url": {
                "description": "URL pointing to the location of the catalog item on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item.",
                "type": "string",
                "example": "https://via.placeholder.com/300"
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ]
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                }
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item is published.",
                "type": "boolean",
                "example": true,
                "default": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "description": "A list of catalog category IDs representing the categories the item is in",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemEnum"
              },
              "id": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1"
                  },
                  "title": {
                    "description": "The title of the catalog item.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample)"
                  },
                  "description": {
                    "description": "A description of the catalog item.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                    "type": "number",
                    "example": 42
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300"
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ]
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    }
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item is published.",
                    "type": "boolean",
                    "example": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog item variant in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              },
              "catalog_type": {
                "description": "The type of catalog. Currently only \"$default\" is supported.",
                "type": "string",
                "example": "$default",
                "default": "$default"
              },
              "integration_type": {
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "type": "string",
                "example": "$custom",
                "default": "$custom",
                "enum": [
                  "$custom"
                ]
              },
              "title": {
                "description": "The title of the catalog item variant.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium"
              },
              "description": {
                "description": "A description of the catalog item variant.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
              },
              "sku": {
                "description": "The SKU of the catalog item variant.",
                "type": "string",
                "example": "OBS-MD"
              },
              "inventory_policy": {
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "type": "integer",
                "example": 2,
                "default": 0,
                "enum": [
                  0,
                  1,
                  2
                ]
              },
              "inventory_quantity": {
                "description": "The quantity of the catalog item variant currently in stock.",
                "type": "number",
                "example": 25
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                "type": "number",
                "example": 42
              },
              "url": {
                "description": "URL pointing to the location of the catalog item variant on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/300"
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ]
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                }
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item variant is published.",
                "type": "boolean",
                "example": true,
                "default": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "sku",
              "inventory_quantity",
              "price",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "item": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogItemEnum"
                      },
                      "id": {
                        "description": "The original catalog item ID for which this is a variant.",
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "item"
            ]
          }
        },
        "required": [
          "type",
          "attributes",
          "relationships"
        ]
      },
      "CatalogVariantCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantEnum"
              },
              "id": {
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item variant in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                  },
                  "title": {
                    "description": "The title of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample) Variant Medium"
                  },
                  "description": {
                    "description": "A description of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                  },
                  "sku": {
                    "description": "The SKU of the catalog item variant.",
                    "type": "string",
                    "example": "OBS-MD"
                  },
                  "inventory_policy": {
                    "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                    "type": "integer",
                    "example": 2,
                    "enum": [
                      0,
                      1,
                      2
                    ]
                  },
                  "inventory_quantity": {
                    "description": "The quantity of the catalog item variant currently in stock.",
                    "type": "number",
                    "example": 25
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                    "type": "number",
                    "example": 42
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item variant on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300"
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ]
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    }
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item variant is published.",
                    "type": "boolean",
                    "example": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CatalogItemEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "description": "The ID of the catalog category in an external system.",
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL"
              },
              "name": {
                "description": "The name of the catalog category.",
                "type": "string",
                "example": "Sample Data Category Apparel"
              },
              "integration_type": {
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "type": "string",
                "example": "$custom",
                "default": "$custom",
                "enum": [
                  "$custom"
                ]
              },
              "catalog_type": {
                "description": "The type of catalog. Currently only \"$default\" is supported.",
                "type": "string",
                "example": "$default",
                "default": "$default"
              }
            },
            "required": [
              "external_id",
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "description": "A list of catalog item IDs that are in the given category.",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryEnum"
              },
              "id": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog category in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-CATEGORY-APPAREL"
                  },
                  "name": {
                    "description": "The name of the catalog category.",
                    "type": "string",
                    "example": "Sample Data Category Apparel"
                  },
                  "updated": {
                    "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "coupon-codes": {
                "description": "Array of coupon codes to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "coupon-codes"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CouponCodeCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCouponCodeCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "coupon-codes": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CouponCodeEnum"
                            },
                            "id": {
                              "description": "IDs of the created coupon codes.",
                              "type": "string",
                              "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryItemOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "description": "A list of catalog item IDs that are in the given category.",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCategoryOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "description": "A list of catalog category IDs representing the categories the item is in",
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileIdentifierDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "anonymous_id": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ServerBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s).",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ]
              },
              "profile": {
                "type": "object",
                "example": {
                  "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "email": "sarah.mason@klaviyo-demo.com",
                  "phone_number": "+15005550006",
                  "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                },
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "channels"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "description": "The catalog variant ID for which the profile is subscribing to back in stock notifications. This ID is made up of the integration type, catalog ID, and and the external ID of the variant like so: `integrationType:::catalogId:::externalId`. If the integration you are using is not set up for multi-catalog storage, the 'catalogId' will be `$default`. For Shopify `$shopify:::$default:::33001893429341`",
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variant"
            ]
          }
        },
        "required": [
          "type",
          "attributes",
          "relationships"
        ]
      },
      "ServerBISSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServerBISSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "_MetricCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "attributes": {
            "properties": {
              "name": {
                "description": "Name of the event. Must be less than 128 characters.",
                "type": "string",
                "example": "Viewed Product"
              },
              "service": {
                "description": "This is for advanced usage. For api requests, this should use the default, which is set to api.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileMetaPatchProperties": {
        "type": "object",
        "properties": {
          "append": {
            "description": "Append a simple value or values to this property array",
            "type": "object",
            "example": {
              "skus": "92538"
            }
          },
          "unappend": {
            "description": "Remove a simple value or values from this property array",
            "type": "object",
            "example": {
              "skus": "40571"
            }
          },
          "unset": {
            "description": "Remove a key or keys (and their values) completely from properties",
            "example": "skus",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        }
      },
      "OnsiteProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "description": "Specify one or more patch operations to apply to existing property data",
            "example": {
              "append": {
                "skus": [
                  "92538",
                  "40571"
                ]
              }
            },
            "$ref": "#/components/schemas/ProfileMetaPatchProperties"
          }
        }
      },
      "OnsiteProfileCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "anonymous_id": {
                "type": "string"
              },
              "_kx": {
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.",
                "type": "string",
                "example": "J8fjcn003Wy6b-3ILNlOyZXabW6dcFwTyeuxrowMers%3D.McN66"
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah"
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason"
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Klaviyo"
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Engineer"
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/OnsiteProfileMeta"
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventCreateQueryV2ResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "properties": {
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be referenced later. For example, HTML templates are\nuseful on a segment but are not used to create a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.",
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                }
              },
              "time": {
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "value": {
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase.",
                "type": "number",
                "example": 9.99
              },
              "unique_id": {
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.",
                "type": "string"
              },
              "metric": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/_MetricCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              },
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "properties",
              "metric",
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventCreateQueryV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryV2ResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricAggregateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricAggregateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "description": "The metric ID used in the aggregation.",
                "type": "string",
                "example": "0rG4eQ"
              },
              "page_cursor": {
                "description": "Optional pagination cursor to iterate over large result sets",
                "type": "string"
              },
              "measurements": {
                "description": "Measurement key, e.g. `unique`, `sum_value`, `count`",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "count",
                    "sum_value",
                    "unique"
                  ],
                  "description": "Supported measurements for aggregation"
                },
                "example": "count"
              },
              "interval": {
                "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                "type": "string",
                "example": "day",
                "default": "day",
                "enum": [
                  "day",
                  "hour",
                  "month",
                  "week"
                ]
              },
              "page_size": {
                "description": "Alter the maximum number of returned rows in a single page of aggregation results",
                "type": "integer",
                "example": 500,
                "default": 500
              },
              "by": {
                "description": "Optional attribute(s) used for partitioning by the aggregation function",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "$attributed_flow",
                    "$attributed_message",
                    "$attributed_variation",
                    "$campaign_channel",
                    "$flow",
                    "$flow_channel",
                    "$message",
                    "$message_send_cohort",
                    "$variation",
                    "$variation_send_cohort",
                    "Bounce Type",
                    "Campaign Name",
                    "Client Canonical",
                    "Client Name",
                    "Client Type",
                    "Email Domain",
                    "Failure Source",
                    "Failure Type",
                    "From Number",
                    "From Phone Region",
                    "List",
                    "Message Name",
                    "Message Type",
                    "Method",
                    "Subject",
                    "To Number",
                    "To Phone Region",
                    "URL",
                    "form_id"
                  ],
                  "description": "Supported dimensions for grouping and filtering"
                },
                "example": "$message"
              },
              "return_fields": {
                "description": "Provide fields to limit the returned data",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "filter": {
                "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "greater-or-equal(datetime,2022-12-01T00:00:00)",
                  "less-than(datetime,2022-12-08T00:00:00"
                ]
              },
              "timezone": {
                "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive.",
                "type": "string",
                "example": "America/New_York",
                "default": "UTC"
              },
              "sort": {
                "description": "Provide a sort key (e.g. -$message)",
                "type": "string",
                "enum": [
                  "$attributed_channel",
                  "-$attributed_channel",
                  "$attributed_flow",
                  "-$attributed_flow",
                  "$attributed_message",
                  "-$attributed_message",
                  "$attributed_variation",
                  "-$attributed_variation",
                  "$campaign_channel",
                  "-$campaign_channel",
                  "$flow",
                  "-$flow",
                  "$flow_channel",
                  "-$flow_channel",
                  "$message",
                  "-$message",
                  "$message_send_cohort",
                  "-$message_send_cohort",
                  "$variation",
                  "-$variation",
                  "$variation_send_cohort",
                  "-$variation_send_cohort",
                  "Bounce Type",
                  "-Bounce Type",
                  "Campaign Name",
                  "-Campaign Name",
                  "Client Canonical",
                  "-Client Canonical",
                  "Client Name",
                  "-Client Name",
                  "Client Type",
                  "-Client Type",
                  "Email Domain",
                  "-Email Domain",
                  "Failure Source",
                  "-Failure Source",
                  "Failure Type",
                  "-Failure Type",
                  "From Number",
                  "-From Number",
                  "From Phone Region",
                  "-From Phone Region",
                  "List",
                  "-List",
                  "Message Name",
                  "-Message Name",
                  "Message Type",
                  "-Message Type",
                  "Method",
                  "-Method",
                  "Subject",
                  "-Subject",
                  "To Number",
                  "-To Number",
                  "To Phone Region",
                  "-To Phone Region",
                  "URL",
                  "-URL",
                  "count",
                  "-count",
                  "form_id",
                  "-form_id",
                  "sum_value",
                  "-sum_value",
                  "unique",
                  "-unique"
                ]
              }
            },
            "required": [
              "metric_id",
              "measurements",
              "filter"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "MetricAggregateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricAggregateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricAggregateRowDTO": {
        "type": "object",
        "properties": {
          "dimensions": {
            "description": "List of dimensions associated with this set of measurements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "measurements": {
            "description": "Dictionary of measurement_key, values",
            "type": "object"
          }
        },
        "required": [
          "dimensions",
          "measurements"
        ]
      },
      "PostMetricAggregateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MetricAggregateEnum"
              },
              "id": {
                "description": "Ephemeral ID associated with the aggregation query",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "dates": {
                    "description": "The dates of the query range",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "data": {
                    "description": "Aggregation result data",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MetricAggregateRowDTO"
                    }
                  }
                },
                "required": [
                  "dates",
                  "data"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ListCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostListCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ListEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A helpful name to label the list",
                    "type": "string",
                    "example": "Newsletter"
                  },
                  "created": {
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "opt_in_process": {
                    "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                    "type": "string",
                    "enum": [
                      "double_opt_in",
                      "single_opt_in"
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListMembersAddQuery": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah"
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason"
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Klaviyo"
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Engineer"
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                }
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostProfileResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Individual's email address",
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com"
                  },
                  "phone_number": {
                    "description": "Individual's phone number in E.164 format",
                    "type": "string",
                    "example": "+15005550006"
                  },
                  "external_id": {
                    "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                    "type": "string",
                    "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                  },
                  "first_name": {
                    "description": "Individual's first name",
                    "type": "string",
                    "example": "Sarah"
                  },
                  "last_name": {
                    "description": "Individual's last name",
                    "type": "string",
                    "example": "Mason"
                  },
                  "organization": {
                    "description": "Name of the company or organization within the company for whom the individual works",
                    "type": "string",
                    "example": "Klaviyo"
                  },
                  "title": {
                    "description": "Individual's job title",
                    "type": "string",
                    "example": "Engineer"
                  },
                  "image": {
                    "description": "URL pointing to the location of a profile image",
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                  },
                  "created": {
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "last_event_date": {
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation"
                  },
                  "properties": {
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    }
                  },
                  "subscriptions": {
                    "$ref": "#/components/schemas/Subscriptions"
                  },
                  "predictive_analytics": {
                    "$ref": "#/components/schemas/PredictiveAnalytics"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "description": "Specify one or more patch operations to apply to existing property data",
            "example": {
              "append": {
                "skus": [
                  "92538",
                  "40571"
                ]
              }
            },
            "$ref": "#/components/schemas/ProfileMetaPatchProperties"
          }
        }
      },
      "ProfileUpsertQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "anonymous_id": {
                "description": "Id that can be used to identify a profile when other identifiers are not available",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
              },
              "_kx": {
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.",
                "type": "string",
                "example": "J8fjcn003Wy6b-3ILNlOyZXabW6dcFwTyeuxrowMers%3D.McN66"
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah"
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason"
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Klaviyo"
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Engineer"
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProfileMeta"
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileImportJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "Array of profiles to create or update",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "lists": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/ListEnum"
                        },
                        "id": {
                          "description": "Optional list to add the profiles to",
                          "type": "string",
                          "example": "VRgFBd"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileImportJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileImportJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostProfileImportJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "started_at": {
                    "description": "Date and time the job started processing in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "description": "List to add the profiles to",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "description": "IDs of the created/updated profiles",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "import-errors": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ImportErrorEnum"
                            },
                            "id": {
                              "description": "Errors encountering during import",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileUpsertQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileMergeQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileMergeEnum"
          },
          "id": {
            "description": "The ID of the destination profile to merge into",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/ProfileEnum"
                        },
                        "id": {
                          "description": "The ID of a source profile to merge into the destination profile",
                          "type": "string",
                          "example": "01GDDKASAP8TKDDA2GRZDSVP4I"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "relationships"
        ]
      },
      "ProfileMergeQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileMergeQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostProfileMergeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "description": "The ID of the destination profile that was merged into",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SMSContentSubObjectCreate": {
        "type": "object",
        "properties": {
          "body": {
            "description": "The message body",
            "type": "string",
            "example": "My preview sms"
          }
        }
      },
      "CampaignMessageCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "attributes": {
            "properties": {
              "channel": {
                "description": "The channel the message is to be sent on (email or sms, for example)",
                "type": "string",
                "example": "email"
              },
              "label": {
                "description": "The label or name on the message",
                "type": "string",
                "example": "My message name"
              },
              "content": {
                "description": "Additional attributes relating to the content of the message",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ]
              },
              "render_options": {
                "description": "Additional options for rendering the message",
                "$ref": "#/components/schemas/RenderOptionsSubObject"
              }
            },
            "required": [
              "channel"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The campaign name",
                "type": "string",
                "example": "My new campaign"
              },
              "audiences": {
                "description": "The audiences to be included and/or excluded from the campaign",
                "$ref": "#/components/schemas/AudiencesSubObject"
              },
              "send_strategy": {
                "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy.",
                "$ref": "#/components/schemas/SendStrategySubObject"
              },
              "send_options": {
                "description": "Options to use when sending a campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ]
              },
              "tracking_options": {
                "description": "The tracking options associated with the campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ]
              },
              "campaign-messages": {
                "description": "The message(s) associated with the campaign",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CampaignMessageCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "name",
              "audiences",
              "campaign-messages"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "description": "The campaign ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The campaign name",
                    "type": "string"
                  },
                  "status": {
                    "description": "The current status of the campaign",
                    "type": "string"
                  },
                  "archived": {
                    "description": "Whether the campaign has been archived or not",
                    "type": "boolean"
                  },
                  "audiences": {
                    "description": "The audiences to be included and/or excluded from the campaign",
                    "$ref": "#/components/schemas/AudiencesSubObject"
                  },
                  "send_options": {
                    "description": "Options to use when sending a campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                      }
                    ]
                  },
                  "tracking_options": {
                    "description": "The tracking options associated with the campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                      }
                    ]
                  },
                  "send_strategy": {
                    "description": "The send strategy the campaign will send with",
                    "$ref": "#/components/schemas/SendStrategySubObject"
                  },
                  "created_at": {
                    "description": "The datetime when the campaign was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "scheduled_at": {
                    "description": "The datetime when the campaign was scheduled for future sending",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated_at": {
                    "description": "The datetime when the campaign was last updated by a user or the system",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "send_time": {
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignMessageEnum"
                            },
                            "id": {
                              "description": "The message(s) associated with the campaign",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignCloneQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "description": "The campaign ID to be cloned",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "new_name": {
                "description": "The name for the new cloned campaign",
                "type": "string",
                "example": "My cloned campaign's new name"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignCloneQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCloneQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignMessageAssignTemplateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "description": "The message ID to be assigned to",
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "template": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TemplateEnum"
                      },
                      "id": {
                        "description": "The template ID to assign",
                        "type": "string",
                        "example": "RipRmi"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "template"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "relationships"
        ]
      },
      "CampaignMessageAssignTemplateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignMessageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignMessageEnum"
              },
              "id": {
                "description": "The message ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "description": "The label or name on the message",
                    "type": "string"
                  },
                  "channel": {
                    "description": "The channel the message is to be sent on",
                    "type": "string"
                  },
                  "content": {
                    "description": "Additional attributes relating to the content of the message",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailContentSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSContentSubObject"
                      }
                    ]
                  },
                  "send_times": {
                    "description": "The list of appropriate Send Time Sub-objects associated with the message",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    }
                  },
                  "render_options": {
                    "description": "Additional options for rendering the message",
                    "$ref": "#/components/schemas/RenderOptionsSubObject"
                  },
                  "created_at": {
                    "description": "The datetime when the message was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated_at": {
                    "description": "The datetime when the message was last updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CampaignEnum"
                          },
                          "id": {
                            "description": "The parent campaign id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "template": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TemplateEnum"
                          },
                          "id": {
                            "description": "The associated template id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignSendJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "description": "The ID of the campaign to send",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CampaignSendJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignSendJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignSendJobEnum"
              },
              "id": {
                "description": "The ID of the campaign to send",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "The status of the send job",
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignRecipientEstimationJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
          },
          "id": {
            "description": "The ID of the campaign to perform recipient estimation",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CampaignRecipientEstimationJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCampaignRecipientEstimationJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
              },
              "id": {
                "description": "The ID of the campaign used for estimating recipients",
                "type": "string",
                "example": "01GMRWDSA0ARTAKE1SFX8JGXAY"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "The status of the recipient estimation job",
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string",
                "example": "Monthly Newsletter Template"
              },
              "editor_type": {
                "description": "Restricted to CODE",
                "type": "string"
              },
              "html": {
                "description": "The HTML contents of the template",
                "type": "string",
                "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        "
              },
              "text": {
                "description": "The plaintext version of the template",
                "type": "string",
                "example": "hello world"
              }
            },
            "required": [
              "name",
              "editor_type"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "TemplateCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostTemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "description": "The ID of template",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the template",
                    "type": "string"
                  },
                  "editor_type": {
                    "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor",
                    "type": "string"
                  },
                  "html": {
                    "description": "The rendered HTML of the template",
                    "type": "string"
                  },
                  "text": {
                    "description": "The template plain_text",
                    "type": "string"
                  },
                  "created": {
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateRenderQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "context": {
                "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/4408802648731) for more details.",
                "type": "object",
                "example": {
                  "first_name": "Jane",
                  "last_name": "Smith"
                }
              }
            },
            "required": [
              "context"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TemplateRenderQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateRenderQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateCloneQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template to be cloned",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string",
                "example": "Clone of Monthly Newsletter Template"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TemplateCloneQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCloneQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "description": "Array of catalog items to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "items"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "description": "IDs of the created catalog items.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "description": "Array of catalog items to update.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "items"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemUpdateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "description": "IDs of the updated catalog items.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CatalogItemDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "description": "Array of catalog items to delete.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "items"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogItemDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogItemDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "description": "IDs of the deleted catalog items.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "description": "Array of catalog variants to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variants"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogVariantCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "description": "IDs of the created catalog variants.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "description": "The title of the catalog item variant.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium"
              },
              "description": {
                "description": "A description of the catalog item variant.",
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
              },
              "sku": {
                "description": "The SKU of the catalog item variant.",
                "type": "string",
                "example": "OBS-MD"
              },
              "inventory_policy": {
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "type": "integer",
                "example": 2,
                "enum": [
                  0,
                  1,
                  2
                ]
              },
              "inventory_quantity": {
                "description": "The quantity of the catalog item variant currently in stock.",
                "type": "number",
                "example": 25
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                "type": "number",
                "example": 42
              },
              "url": {
                "description": "URL pointing to the location of the catalog item variant on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/300"
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ]
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                }
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item variant is published.",
                "type": "boolean",
                "example": true
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CatalogVariantUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "description": "Array of catalog variants to update.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variants"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogVariantUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantUpdateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "description": "IDs of the updated catalog variants.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CatalogVariantDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "description": "Array of catalog variants to delete.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variants"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogVariantDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogVariantDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "description": "IDs of the deleted catalog variants.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "description": "Array of catalog categories to create.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "categories"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryCreateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "description": "IDs of the created catalog categories.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "description": "Array of catalog categories to update.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "categories"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryUpdateJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "description": "IDs of the updated catalog categories.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "CatalogCategoryDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "description": "Array of catalog categories to delete.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "categories"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CatalogCategoryDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
              },
              "id": {
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo.",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Status of the asynchronous job.",
                    "type": "string",
                    "example": "processing",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ]
                  },
                  "created_at": {
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "total_count": {
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress.",
                    "type": "integer",
                    "example": 10
                  },
                  "completed_count": {
                    "description": "The total number of operations that have been completed by the job.",
                    "type": "integer",
                    "example": 9,
                    "default": 0
                  },
                  "failed_count": {
                    "description": "The total number of operations that have failed as part of the job.",
                    "type": "integer",
                    "example": 1,
                    "default": 0
                  },
                  "completed_at": {
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "errors": {
                    "description": "Array of errors encountered during the processing of the job.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    }
                  },
                  "expires_at": {
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "description": "IDs of the deleted catalog categories.",
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag name",
                "type": "string",
                "example": "My Tag"
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "tag-group": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TagGroupEnum"
                      },
                      "id": {
                        "description": "The ID of the Tag Group to associate the Tag with. If this field is not specified, the Tag will be associated with the company's Default Tag Group.",
                        "type": "string",
                        "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "TagCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostTagResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagEnum"
              },
              "id": {
                "description": "The Tag ID",
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag name",
                    "type": "string",
                    "example": "My Tag"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tag-group": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TagGroupEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "campaigns": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "flows": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag Group name",
                "type": "string",
                "example": "My Tag Group"
              },
              "exclusive": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "TagGroupCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag Group name",
                    "type": "string",
                    "example": "My Tag Group"
                  },
                  "exclusive": {
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagFlowOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "description": "The IDs of the flows to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagCampaignOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "description": "The IDs of the campaigns to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagListOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "description": "The IDs of the lists to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagSegmentOp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "description": "The IDs of the segments to link or unlink with the given Tag ID",
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email of the profile to suppress.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "The profile(s) to create suppressions for.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email of the profile to unsuppress.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "The profile(s) to remove suppressions for.",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MarketingSubscriptionParameters": {
        "type": "object",
        "properties": {
          "consent": {
            "description": "The Consent status to subscribe to for the \"Marketing\" type. Currently supports \"SUBSCRIBED\".",
            "type": "string",
            "example": "SUBSCRIBED",
            "enum": [
              "SUBSCRIBED"
            ]
          },
          "consented_at": {
            "description": "The timestamp of when the profile's consent was gathered",
            "type": "string",
            "format": "date-time",
            "example": "2023-08-23T14:00:00-0400"
          }
        },
        "required": [
          "consent"
        ]
      },
      "EmailSubscriptionParameters": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The parameters to subscribe to on the \"EMAIL\" Channel. Currently supports \"MARKETING\".",
            "$ref": "#/components/schemas/MarketingSubscriptionParameters"
          }
        },
        "required": [
          "marketing"
        ]
      },
      "SMSSubscriptionParameters": {
        "type": "object",
        "properties": {
          "marketing": {
            "description": "The parameters to subscribe to on the \"SMS\" Channel. Currently supports \"MARKETING\".",
            "$ref": "#/components/schemas/MarketingSubscriptionParameters"
          }
        },
        "required": [
          "marketing"
        ]
      },
      "SubscriptionChannels": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The subscription parameters to subscribe to on the \"EMAIL\" Channel.",
            "$ref": "#/components/schemas/EmailSubscriptionParameters"
          },
          "sms": {
            "description": "The subscription parameters to subscribe to on the \"SMS\" Channel.",
            "$ref": "#/components/schemas/SMSSubscriptionParameters"
          }
        }
      },
      "ProfileSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "The ID of the profile to subscribe. If provided, this will be used to perform the lookup.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.",
                "type": "string",
                "example": "+15005550006"
              },
              "subscriptions": {
                "description": "When provided, this will provide consent for the indicated message types on the specified channels. If omitted, we will subscribe the profile to all message types on the channels corresponding to the provided identifiers.",
                "$ref": "#/components/schemas/SubscriptionChannels"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "description": "A custom method detail or source to store on the consent records.",
                "type": "string",
                "example": "Marketing Event"
              },
              "profiles": {
                "description": "The profile(s) to subscribe",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "The list to add the newly subscribed profiles to",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSubscriptionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "The email address to unsubscribe.",
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "The phone number to unsubscribe. This must be in E.164 format.",
                "type": "string",
                "example": "+15005550006"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "description": "The profile(s) to unsubscribe",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionDeleteQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "The list to remove the profiles from",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "DataPrivacyProfileQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataPrivacyCreateDeletionJobQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataPrivacyDeletionJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DataPrivacyProfileQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataPrivacyCreateDeletionJobQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "_DeviceMetadata": {
        "type": "object",
        "properties": {
          "device_id": {
            "description": "Relatively stable ID for the device. Will update on app uninstall and reinstall",
            "type": "string",
            "example": "1234567890"
          },
          "klaviyo_sdk": {
            "description": "The name of the SDK used to create the push token.",
            "type": "string",
            "example": "swift",
            "enum": [
              "android",
              "swift"
            ]
          },
          "sdk_version": {
            "description": "The version of the SDK used to create the push token",
            "type": "string",
            "example": "1.0.0"
          },
          "device_model": {
            "description": "The model of the device",
            "type": "string",
            "example": "iPhone12,1"
          },
          "os_name": {
            "description": "The name of the operating system on the device.",
            "type": "string",
            "example": "ios",
            "enum": [
              "android",
              "ios",
              "ipados",
              "macos",
              "tvos"
            ]
          },
          "os_version": {
            "description": "The version of the operating system on the device",
            "type": "string",
            "example": "14.0"
          },
          "manufacturer": {
            "description": "The manufacturer of the device",
            "type": "string",
            "example": "Apple"
          },
          "app_name": {
            "description": "The name of the app that created the push token",
            "type": "string",
            "example": "Klaviyo"
          },
          "app_version": {
            "description": "The version of the app that created the push token",
            "type": "string",
            "example": "1.0.0"
          },
          "app_build": {
            "description": "The build of the app that created the push token",
            "type": "string",
            "example": 1
          },
          "app_id": {
            "description": "The ID of the app that created the push token",
            "type": "string",
            "example": "com.klaviyo.app"
          },
          "environment": {
            "description": "The environment in which the push token was created",
            "type": "string",
            "example": "release",
            "enum": [
              "debug",
              "release"
            ]
          }
        }
      },
      "PushTokenCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "description": "A push token from APNS or FCM.",
                "type": "string",
                "example": "1234567890"
              },
              "platform": {
                "description": "The platform on which the push token was created.",
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ]
              },
              "enablement_status": {
                "description": "This is the enablement status for the individual push token.",
                "type": "string",
                "example": "AUTHORIZED",
                "default": "AUTHORIZED",
                "enum": [
                  "AUTHORIZED",
                  "DENIED",
                  "NOT_DETERMINED",
                  "PROVISIONAL",
                  "UNAUTHORIZED"
                ]
              },
              "vendor": {
                "description": "The vendor of the push token.",
                "type": "string",
                "example": "APNs",
                "enum": [
                  "apns",
                  "fcm"
                ]
              },
              "background": {
                "description": "The background state of the push token.",
                "type": "string",
                "example": "AVAILABLE",
                "default": "AVAILABLE",
                "enum": [
                  "AVAILABLE",
                  "DENIED",
                  "RESTRICTED"
                ]
              },
              "device_metadata": {
                "description": "Metadata about the device that created the push token",
                "$ref": "#/components/schemas/_DeviceMetadata"
              },
              "profile": {
                "description": "The profile associated with the push token to create/update",
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "token",
              "platform",
              "vendor",
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "PushTokenCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ImageCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added.",
                "type": "string"
              },
              "import_from_url": {
                "description": "An existing image url to import the image from. Alternatively, you may specify a base-64 encoded data-uri (`data:image/...`). Supported image formats: jpeg,png,gif. Maximum image size: 5MB.",
                "type": "string",
                "example": "https://www.example.com/example.jpg"
              },
              "hidden": {
                "description": "If true, this image is not shown in the asset library.",
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "import_from_url"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ImageCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImageCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ImageEnum"
              },
              "id": {
                "description": "The ID of the image",
                "type": "string",
                "example": "7"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "Timeframe": {
        "type": "object",
        "properties": {
          "key": {
            "description": "Pre-defined key that represents a set timeframe",
            "type": "string",
            "enum": [
              "last_12_months",
              "last_30_days",
              "last_365_days",
              "last_3_months",
              "last_7_days",
              "last_90_days",
              "last_month",
              "last_week",
              "last_year",
              "this_month",
              "this_week",
              "this_year",
              "today",
              "yesterday"
            ]
          }
        },
        "required": [
          "key"
        ]
      },
      "CustomTimeframe": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "CampaignValuesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "conversion_metric_id": {
                "description": "ID of the metric to be used for conversion statistics",
                "type": "string",
                "example": "RESQ6t"
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are send_channel, campaign_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.",
                "type": "string",
                "example": "and(equals(campaign_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))"
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "conversion_metric_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ValuesData": {
        "type": "object",
        "properties": {
          "groupings": {
            "description": "Applied groupings and the values for this object",
            "type": "object"
          },
          "statistics": {
            "description": "Requested statistics and their values results",
            "type": "object"
          }
        },
        "required": [
          "groupings",
          "statistics"
        ]
      },
      "PostCampaignValuesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignValuesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ValuesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "send_channel": "email",
                          "campaign_id": "01GMRWDSA0ARTAKE1SFX8JGXAY"
                        },
                        "statistics": {
                          "opens": 123,
                          "open_rate": 0.8253
                        }
                      },
                      {
                        "groupings": {
                          "send_channel": "email",
                          "campaign_id": "01GJTHNWVG93F3KNX71SJ4FDBB"
                        },
                        "statistics": {
                          "opens": 97,
                          "open_rate": 0.7562
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "results"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaigns": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowValuesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "conversion_metric_id": {
                "description": "ID of the metric to be used for conversion statistics",
                "type": "string",
                "example": "RESQ6t"
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are flow_id, send_channel, flow_message_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.",
                "type": "string",
                "example": "and(equals(flow_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))"
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "conversion_metric_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "FlowValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostFlowValuesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowValuesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ValuesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GMRWDSA0ARTAKE1SFX8JGXAY"
                        },
                        "statistics": {
                          "opens": 123,
                          "open_rate": 0.8253
                        }
                      },
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GJTHNWVG93F3KNX71SJ4FDBB"
                        },
                        "statistics": {
                          "opens": 97,
                          "open_rate": 0.7562
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "results"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flows": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "flow-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowMessageEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowSeriesRequestDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowSeriesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ]
              },
              "timeframe": {
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ]
              },
              "interval": {
                "description": "The interval used to aggregate data within the series request.\nIf hourly is used, the timeframe cannot be longer than 7 days.\nIf daily is used, the timeframe cannot be longer than 60 days.\nIf monthly is used, the timeframe cannot be longer than 52 weeks.",
                "type": "string",
                "example": "weekly",
                "enum": [
                  "daily",
                  "hourly",
                  "monthly",
                  "weekly"
                ]
              },
              "conversion_metric_id": {
                "description": "ID of the metric to be used for conversion statistics",
                "type": "string",
                "example": "RESQ6t"
              },
              "filter": {
                "description": "API filter string used to filter the query.\nAllowed filters are flow_id, send_channel, flow_message_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.",
                "type": "string",
                "example": "and(equals(flow_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))"
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "interval",
              "conversion_metric_id"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "FlowSeriesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowSeriesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "SeriesData": {
        "type": "object",
        "properties": {
          "groupings": {
            "description": "Applied groupings and the values for this object",
            "type": "object"
          },
          "statistics": {
            "description": "Requested statistics and their series result",
            "type": "object"
          }
        },
        "required": [
          "groupings",
          "statistics"
        ]
      },
      "PostFlowSeriesResponseDTO": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowSeriesReportEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "results": {
                    "description": "An array of all the returned values data.\nEach object in the array represents one unique grouping and the results for that grouping.\nEach value in the results array corresponds to the date time at the same index.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SeriesData"
                    },
                    "example": [
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GMRWDSA0ARTAKE1SFX8JGXAY"
                        },
                        "statistics": {
                          "opens": [
                            123,
                            156,
                            144
                          ],
                          "open_rate": [
                            0.8253,
                            0.8722,
                            0.8398
                          ]
                        }
                      },
                      {
                        "groupings": {
                          "flow_id": "XVTP5Q",
                          "send_channel": "email",
                          "flow_message_id": "01GJTHNWVG93F3KNX71SJ4FDBB"
                        },
                        "statistics": {
                          "opens": [
                            97,
                            98,
                            65
                          ],
                          "open_rate": [
                            0.7562,
                            0.761,
                            0.688
                          ]
                        }
                      }
                    ]
                  },
                  "date_times": {
                    "description": "An array of date times which correspond to the equivalent index in the results data.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "example": [
                      "2024-01-05T00:00:00+00:00",
                      "2024-01-06T00:00:00+00:00",
                      "2024-01-07T00:00:00+00:00"
                    ]
                  }
                },
                "required": [
                  "results",
                  "date_times"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flows": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "flow-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowMessageEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "OnsiteSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "description": "A custom method detail or source to store on the consent records for this subscription.",
                "type": "string",
                "example": "Homepage footer signup form"
              },
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "description": "The list ID to add the newly subscribed profile to.",
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "list"
            ]
          }
        },
        "required": [
          "type",
          "attributes",
          "relationships"
        ]
      },
      "OnsiteSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PushTokenUnregisterQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenUnregisterEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "description": "A push token from APNS or FCM.",
                "type": "string",
                "example": "1234567890"
              },
              "platform": {
                "description": "The platform on which the push token was created.",
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ]
              },
              "vendor": {
                "description": "The vendor of the push token.",
                "type": "string",
                "example": "apns",
                "enum": [
                  "apns",
                  "fcm"
                ]
              },
              "profile": {
                "description": "The profile associated with the push token to create/update",
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "token",
              "platform",
              "profile"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "PushTokenUnregisterQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenUnregisterQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "OnsiteProfileCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "_BaseEventCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "properties": {
              "properties": {
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be referenced later. For example, HTML templates are\nuseful on a segment but are not used to create a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.",
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                }
              },
              "time": {
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.",
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "value": {
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase.",
                "type": "number",
                "example": 9.99
              },
              "unique_id": {
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.",
                "type": "string"
              },
              "metric": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/_MetricCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "properties",
              "metric"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventsBulkCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventBulkCreateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              },
              "events": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/_BaseEventCreateQueryResourceObject"
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "profile",
              "events"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventsBulkCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventsBulkCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ClientBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s).",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ]
              },
              "profile": {
                "type": "object",
                "example": {
                  "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "email": "sarah.mason@klaviyo-demo.com",
                  "phone_number": "+15005550006",
                  "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                },
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "channels",
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "description": "The catalog variant ID for which the profile is subscribing to back in stock notifications. This ID is made up of the integration type, catalog ID, and and the external ID of the variant like so: `integrationType:::catalogId:::externalId`. If the integration you are using is not set up for multi-catalog storage, the 'catalogId' will be `$default`. For Shopify `$shopify:::$default:::33001893429341`",
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            },
            "required": [
              "variant"
            ]
          }
        },
        "required": [
          "type",
          "attributes",
          "relationships"
        ]
      },
      "ClientBISSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClientBISSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
            "type": "string",
            "example": "10OFF"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "description": {
                "description": "A description of the coupon.",
                "type": "string",
                "example": "10% off for purchases over $50"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CouponUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponEnum"
              },
              "id": {
                "description": "The internal id of a Coupon is equivalent to its external id stored within an integration.",
                "type": "string",
                "example": "10OFF"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "This is the id that is stored in an integration such as Shopify or Magento.",
                    "type": "string",
                    "example": "10OFF"
                  },
                  "description": {
                    "description": "A description of the coupon.",
                    "type": "string",
                    "example": "10% off for purchases over $50"
                  }
                },
                "required": [
                  "external_id"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The API status of our coupon codes.",
                "type": "string",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "VERSION_NOT_ACTIVE"
                ]
              },
              "expires_at": {
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01T00:00:00Z"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CouponCodeUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCouponCodeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CouponCodeEnum"
              },
              "id": {
                "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.",
                "type": "string",
                "example": "10OFF-ASD325FHK324UJDOI2M3JNES99"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "unique_code": {
                    "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon.",
                    "type": "string",
                    "example": "ASD325FHK324UJDOI2M3JNES99"
                  },
                  "expires_at": {
                    "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-01T00:00:00Z"
                  },
                  "status": {
                    "description": "The current status of the coupon code.",
                    "type": "string",
                    "example": "UNASSIGNED",
                    "enum": [
                      "ASSIGNED_TO_PROFILE",
                      "DELETING",
                      "PROCESSING",
                      "UNASSIGNED",
                      "VERSION_NOT_ACTIVE"
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "coupon": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CouponEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "10OFF"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/ProfileEnum"
                          },
                          "id": {
                            "type": "string",
                            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "description": "The title of the catalog item.",
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)"
              },
              "price": {
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                "type": "number",
                "example": 42
              },
              "description": {
                "description": "A description of the catalog item.",
                "type": "string",
                "example": "A description of the catalog item."
              },
              "url": {
                "description": "URL pointing to the location of the catalog item on your website.",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "image_full_url": {
                "description": "URL pointing to the location of a full image of the catalog item.",
                "type": "string",
                "example": "https://via.placeholder.com/300"
              },
              "image_thumbnail_url": {
                "description": "URL pointing to the location of an image thumbnail of the catalog item",
                "type": "string",
                "example": "https://via.placeholder.com/150"
              },
              "images": {
                "description": "List of URLs pointing to the locations of images of the catalog item.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ]
              },
              "custom_metadata": {
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                "type": "object",
                "example": {
                  "Top Pick": true
                }
              },
              "published": {
                "description": "Boolean value indicating whether the catalog item is published.",
                "type": "boolean",
                "example": true
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "description": "A list of catalog category IDs representing the categories the item is in",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CatalogItemUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCatalogItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemEnum"
              },
              "id": {
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1"
                  },
                  "title": {
                    "description": "The title of the catalog item.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample)"
                  },
                  "description": {
                    "description": "A description of the catalog item.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).",
                    "type": "number",
                    "example": 42
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300"
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ]
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    }
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item is published.",
                    "type": "boolean",
                    "example": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCatalogVariantResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantEnum"
              },
              "id": {
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog item variant in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                  },
                  "title": {
                    "description": "The title of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample) Variant Medium"
                  },
                  "description": {
                    "description": "A description of the catalog item variant.",
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns."
                  },
                  "sku": {
                    "description": "The SKU of the catalog item variant.",
                    "type": "string",
                    "example": "OBS-MD"
                  },
                  "inventory_policy": {
                    "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                    "type": "integer",
                    "example": 2,
                    "enum": [
                      0,
                      1,
                      2
                    ]
                  },
                  "inventory_quantity": {
                    "description": "The quantity of the catalog item variant currently in stock.",
                    "type": "number",
                    "example": 25
                  },
                  "price": {
                    "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).",
                    "type": "number",
                    "example": 42
                  },
                  "url": {
                    "description": "URL pointing to the location of the catalog item variant on your website.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "image_full_url": {
                    "description": "URL pointing to the location of a full image of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/300"
                  },
                  "image_thumbnail_url": {
                    "description": "URL pointing to the location of an image thumbnail of the catalog item variant.",
                    "type": "string",
                    "example": "https://via.placeholder.com/150"
                  },
                  "images": {
                    "description": "List of URLs pointing to the locations of images of the catalog item variant.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ]
                  },
                  "custom_metadata": {
                    "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.",
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    }
                  },
                  "published": {
                    "description": "Boolean value indicating whether the catalog item variant is published.",
                    "type": "boolean",
                    "example": true
                  },
                  "created": {
                    "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CatalogItemEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the catalog category.",
                "type": "string",
                "example": "Sample Data Category Apparel"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "description": "A list of catalog item IDs that are in the given category.",
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CatalogCategoryUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCatalogCategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryEnum"
              },
              "id": {
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "description": "The ID of the catalog category in an external system.",
                    "type": "string",
                    "example": "SAMPLE-DATA-CATEGORY-APPAREL"
                  },
                  "name": {
                    "description": "The name of the catalog category.",
                    "type": "string",
                    "example": "Sample Data Category Apparel"
                  },
                  "updated": {
                    "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "type": "string",
            "example": "Y6nRLr"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A helpful name to label the list",
                "type": "string",
                "example": "Newsletter"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "ListPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchListPartialUpdateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ListEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
                "type": "string",
                "example": "Y6nRLr"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A helpful name to label the list",
                    "type": "string",
                    "example": "Newsletter"
                  },
                  "created": {
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "opt_in_process": {
                    "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                    "type": "string",
                    "enum": [
                      "double_opt_in",
                      "single_opt_in"
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "SegmentPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchSegmentPartialUpdateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A helpful name to label the segment",
                    "type": "string",
                    "example": "Repeat Purchasers"
                  },
                  "created": {
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfilePartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "description": "Individual's email address",
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com"
              },
              "phone_number": {
                "description": "Individual's phone number in E.164 format",
                "type": "string",
                "example": "+15005550006"
              },
              "external_id": {
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "description": "Individual's first name",
                "type": "string",
                "example": "Sarah"
              },
              "last_name": {
                "description": "Individual's last name",
                "type": "string",
                "example": "Mason"
              },
              "organization": {
                "description": "Name of the company or organization within the company for whom the individual works",
                "type": "string",
                "example": "Klaviyo"
              },
              "title": {
                "description": "Individual's job title",
                "type": "string",
                "example": "Engineer"
              },
              "image": {
                "description": "URL pointing to the location of a profile image",
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProfileMeta"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "ProfilePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfilePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchProfileResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Individual's email address",
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com"
                  },
                  "phone_number": {
                    "description": "Individual's phone number in E.164 format",
                    "type": "string",
                    "example": "+15005550006"
                  },
                  "external_id": {
                    "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.",
                    "type": "string",
                    "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                  },
                  "first_name": {
                    "description": "Individual's first name",
                    "type": "string",
                    "example": "Sarah"
                  },
                  "last_name": {
                    "description": "Individual's last name",
                    "type": "string",
                    "example": "Mason"
                  },
                  "organization": {
                    "description": "Name of the company or organization within the company for whom the individual works",
                    "type": "string",
                    "example": "Klaviyo"
                  },
                  "title": {
                    "description": "Individual's job title",
                    "type": "string",
                    "example": "Engineer"
                  },
                  "image": {
                    "description": "URL pointing to the location of a profile image",
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg"
                  },
                  "created": {
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "last_event_date": {
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation"
                  },
                  "properties": {
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile",
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    }
                  },
                  "subscriptions": {
                    "$ref": "#/components/schemas/Subscriptions"
                  },
                  "predictive_analytics": {
                    "$ref": "#/components/schemas/PredictiveAnalytics"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "segments": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "description": "ID of the Flow to update. Ex: XVTP5Q",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "description": "Status you want to update the flow to. ['draft', 'manual', or 'live']",
                "type": "string"
              }
            },
            "required": [
              "status"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "FlowUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchFlowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "trigger_type": {
                    "description": "Corresponds to the object which triggered the flow.",
                    "type": "string",
                    "enum": [
                      "Added to List",
                      "Date Based",
                      "Low Inventory",
                      "Metric",
                      "Price Drop",
                      "Unconfigured"
                    ]
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flow-actions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowActionEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "description": "The campaign ID to be retrieved",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The campaign name",
                "type": "string",
                "example": "My new campaign"
              },
              "audiences": {
                "description": "The audiences to be included and/or excluded from the campaign",
                "$ref": "#/components/schemas/AudiencesSubObject"
              },
              "send_options": {
                "description": "Options to use when sending a campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ]
              },
              "tracking_options": {
                "description": "The tracking options associated with the campaign",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ]
              },
              "send_strategy": {
                "description": "The send strategy the campaign will send with",
                "$ref": "#/components/schemas/SendStrategySubObject"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "description": "The campaign ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The campaign name",
                    "type": "string"
                  },
                  "status": {
                    "description": "The current status of the campaign",
                    "type": "string"
                  },
                  "archived": {
                    "description": "Whether the campaign has been archived or not",
                    "type": "boolean"
                  },
                  "audiences": {
                    "description": "The audiences to be included and/or excluded from the campaign",
                    "$ref": "#/components/schemas/AudiencesSubObject"
                  },
                  "send_options": {
                    "description": "Options to use when sending a campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                      }
                    ]
                  },
                  "tracking_options": {
                    "description": "The tracking options associated with the campaign",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                      }
                    ]
                  },
                  "send_strategy": {
                    "description": "The send strategy the campaign will send with",
                    "$ref": "#/components/schemas/SendStrategySubObject"
                  },
                  "created_at": {
                    "description": "The datetime when the campaign was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "scheduled_at": {
                    "description": "The datetime when the campaign was scheduled for future sending",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated_at": {
                    "description": "The datetime when the campaign was last updated by a user or the system",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "send_time": {
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign-messages": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignMessageEnum"
                            },
                            "id": {
                              "description": "The message(s) associated with the campaign",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignMessagePartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "description": "The message ID to be retrieved",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "description": "The label or name on the message",
                "type": "string",
                "example": "My message name"
              },
              "content": {
                "description": "Additional attributes relating to the content of the message",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ]
              },
              "render_options": {
                "description": "Additional options for rendering the message",
                "$ref": "#/components/schemas/RenderOptionsSubObject"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignMessagePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchCampaignMessageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignMessageEnum"
              },
              "id": {
                "description": "The message ID",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "description": "The label or name on the message",
                    "type": "string"
                  },
                  "channel": {
                    "description": "The channel the message is to be sent on",
                    "type": "string"
                  },
                  "content": {
                    "description": "Additional attributes relating to the content of the message",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailContentSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSContentSubObject"
                      }
                    ]
                  },
                  "send_times": {
                    "description": "The list of appropriate Send Time Sub-objects associated with the message",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    }
                  },
                  "render_options": {
                    "description": "Additional options for rendering the message",
                    "$ref": "#/components/schemas/RenderOptionsSubObject"
                  },
                  "created_at": {
                    "description": "The datetime when the message was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated_at": {
                    "description": "The datetime when the message was last updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CampaignEnum"
                          },
                          "id": {
                            "description": "The parent campaign id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "template": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TemplateEnum"
                          },
                          "id": {
                            "description": "The associated template id",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignSendJobPartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "description": "The ID of the currently sending campaign to cancel or revert",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "description": "The action you would like to take with this send job from among 'cancel' and 'revert'",
                "type": "string",
                "example": "cancel"
              }
            },
            "required": [
              "action"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "CampaignSendJobPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "description": "The ID of template",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the template",
                "type": "string",
                "example": "Monthly Newsletter Template"
              },
              "html": {
                "description": "The HTML of the template",
                "type": "string",
                "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          "
              },
              "text": {
                "description": "The plaintext of the template",
                "type": "string",
                "example": "hello world"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TemplateUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchTemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "description": "The ID of template",
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the template",
                    "type": "string"
                  },
                  "editor_type": {
                    "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor",
                    "type": "string"
                  },
                  "html": {
                    "description": "The rendered HTML of the template",
                    "type": "string"
                  },
                  "text": {
                    "description": "The template plain_text",
                    "type": "string"
                  },
                  "created": {
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "description": "The Tag ID",
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag name",
                "type": "string",
                "example": "My Tag"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TagUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "description": "The Tag Group ID",
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "The Tag Group name",
                "type": "string",
                "example": "My Tag Group"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "TagGroupUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag Group name",
                    "type": "string",
                    "example": "My Tag Group"
                  },
                  "exclusive": {
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ImagePartialUpdateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "description": "The ID of the image",
            "type": "string",
            "example": "7"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "description": "A name for the image.",
                "type": "string"
              },
              "hidden": {
                "description": "If true, this image is not shown in the asset library.",
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ]
      },
      "ImagePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImagePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchImageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ImageEnum"
              },
              "id": {
                "description": "The ID of the image",
                "type": "string",
                "example": "7"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  }
                },
                "required": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden",
                  "updated_at"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListMembersDeleteQuery": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "DeleteTagGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "description": "The Tag Group ID",
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Tag Group name",
                    "type": "string",
                    "example": "My Tag Group"
                  },
                  "exclusive": {
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.",
                    "type": "boolean"
                  },
                  "default": {
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            },
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "related": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self",
          "related"
        ]
      },
      "CollectionLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "first": {
            "type": "string",
            "format": "uri"
          },
          "last": {
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "type": "string",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "ObjectLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "CouponEnum": {
        "type": "string",
        "enum": [
          "coupon"
        ]
      },
      "CouponCodeEnum": {
        "type": "string",
        "enum": [
          "coupon-code"
        ]
      },
      "CatalogItemEnum": {
        "type": "string",
        "enum": [
          "catalog-item"
        ]
      },
      "CatalogVariantEnum": {
        "type": "string",
        "enum": [
          "catalog-variant"
        ]
      },
      "CatalogCategoryEnum": {
        "type": "string",
        "enum": [
          "catalog-category"
        ]
      },
      "CouponCodeBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "coupon-code-bulk-create-job"
        ]
      },
      "EventEnum": {
        "type": "string",
        "enum": [
          "event"
        ]
      },
      "MetricEnum": {
        "type": "string",
        "enum": [
          "metric"
        ]
      },
      "ProfileEnum": {
        "type": "string",
        "enum": [
          "profile"
        ]
      },
      "ListEnum": {
        "type": "string",
        "enum": [
          "list"
        ]
      },
      "TagEnum": {
        "type": "string",
        "enum": [
          "tag"
        ]
      },
      "SegmentEnum": {
        "type": "string",
        "enum": [
          "segment"
        ]
      },
      "ProfileBulkImportJobEnum": {
        "type": "string",
        "enum": [
          "profile-bulk-import-job"
        ]
      },
      "ImportErrorEnum": {
        "type": "string",
        "enum": [
          "import-error"
        ]
      },
      "FlowEnum": {
        "type": "string",
        "enum": [
          "flow"
        ]
      },
      "FlowActionEnum": {
        "type": "string",
        "enum": [
          "flow-action"
        ]
      },
      "FlowMessageEnum": {
        "type": "string",
        "enum": [
          "flow-message"
        ]
      },
      "TemplateEnum": {
        "type": "string",
        "enum": [
          "template"
        ]
      },
      "CampaignEnum": {
        "type": "string",
        "enum": [
          "campaign"
        ]
      },
      "CampaignMessageEnum": {
        "type": "string",
        "enum": [
          "campaign-message"
        ]
      },
      "CampaignSendJobEnum": {
        "type": "string",
        "enum": [
          "campaign-send-job"
        ]
      },
      "CampaignRecipientEstimationJobEnum": {
        "type": "string",
        "enum": [
          "campaign-recipient-estimation-job"
        ]
      },
      "CampaignRecipientEstimationEnum": {
        "type": "string",
        "enum": [
          "campaign-recipient-estimation"
        ]
      },
      "CatalogItemBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-create-job"
        ]
      },
      "CatalogItemBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-update-job"
        ]
      },
      "CatalogItemBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-delete-job"
        ]
      },
      "CatalogVariantBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-create-job"
        ]
      },
      "CatalogVariantBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-update-job"
        ]
      },
      "CatalogVariantBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-delete-job"
        ]
      },
      "CatalogCategoryBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-create-job"
        ]
      },
      "CatalogCategoryBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-update-job"
        ]
      },
      "CatalogCategoryBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-delete-job"
        ]
      },
      "TagGroupEnum": {
        "type": "string",
        "enum": [
          "tag-group"
        ]
      },
      "AccountEnum": {
        "type": "string",
        "enum": [
          "account"
        ]
      },
      "ImageEnum": {
        "type": "string",
        "enum": [
          "image"
        ]
      },
      "BackInStockSubscriptionEnum": {
        "type": "string",
        "enum": [
          "back-in-stock-subscription"
        ]
      },
      "MetricAggregateEnum": {
        "type": "string",
        "enum": [
          "metric-aggregate"
        ]
      },
      "ProfileMergeEnum": {
        "type": "string",
        "enum": [
          "profile-merge"
        ]
      },
      "ProfileSuppressionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-create-job"
        ]
      },
      "ProfileSuppressionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-delete-job"
        ]
      },
      "ProfileSubscriptionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-create-job"
        ]
      },
      "ProfileSubscriptionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-delete-job"
        ]
      },
      "DataPrivacyDeletionJobEnum": {
        "type": "string",
        "enum": [
          "data-privacy-deletion-job"
        ]
      },
      "PushTokenEnum": {
        "type": "string",
        "enum": [
          "push-token"
        ]
      },
      "CampaignValuesReportEnum": {
        "type": "string",
        "enum": [
          "campaign-values-report"
        ]
      },
      "FlowValuesReportEnum": {
        "type": "string",
        "enum": [
          "flow-values-report"
        ]
      },
      "FlowSeriesReportEnum": {
        "type": "string",
        "enum": [
          "flow-series-report"
        ]
      },
      "SubscriptionEnum": {
        "type": "string",
        "enum": [
          "subscription"
        ]
      },
      "PushTokenUnregisterEnum": {
        "type": "string",
        "enum": [
          "push-token-unregister"
        ]
      },
      "EventBulkCreateEnum": {
        "type": "string",
        "enum": [
          "event-bulk-create"
        ]
      },
      "AttributionEnum": {
        "type": "string",
        "enum": [
          "attribution"
        ]
      },
      "AttributionResponseObjectResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AttributionEnum"
          },
          "id": {
            "description": "The ID of the attribution",
            "type": "string",
            "example": "925e385b52fb405715f3616c337cc65c"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "event": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/EventEnum"
                      },
                      "id": {
                        "description": "Event",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              },
              "attributed-event": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/EventEnum"
                      },
                      "id": {
                        "description": "Attributed Event",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              },
              "campaign": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CampaignEnum"
                      },
                      "id": {
                        "description": "Attributed Campaign",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              },
              "campaign-message": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CampaignMessageEnum"
                      },
                      "id": {
                        "description": "Attributed Campaign Message",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              },
              "flow": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowEnum"
                      },
                      "id": {
                        "description": "Attributed Flow",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              },
              "flow-message": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowMessageEnum"
                      },
                      "id": {
                        "description": "Attributed Flow Message",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              },
              "flow-message-variation": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/FlowMessageEnum"
                      },
                      "id": {
                        "description": "Attributed Flow Message Variation",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        },
        "required": [
          "type",
          "id",
          "links"
        ]
      },
      "ImageUploadQuery": {
        "type": "object",
        "properties": {
          "file": {
            "description": "The image file to upload. Supported image formats: jpeg,png,gif. Maximum image size: 5MB.",
            "type": "string",
            "format": "binary"
          },
          "name": {
            "description": "A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added.",
            "type": "string"
          },
          "hidden": {
            "description": "If true, this image is not shown in the asset library.",
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "file"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "description": "Client Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      },
      "ServerError": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "accounts"
    },
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Conversations",
      "description": "conversations"
    },
    {
      "name": "Coupons",
      "description": "coupons"
    },
    {
      "name": "Data Privacy",
      "description": "data privacy"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Images",
      "description": "images"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Reporting",
      "description": "reporting"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    },
    {
      "name": "Webhooks",
      "description": "webhooks"
    },
    {
      "name": "Client",
      "description": "client"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}